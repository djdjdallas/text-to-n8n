[2025-06-07T21:50:58.120Z] [CONSOLE]  [32m[1m✓[22m[39m Ready in 1061ms
[2025-06-07T21:50:58.121Z] [CONSOLE]  [32m[1m✓[22m[39m Ready in 1061ms
[2025-06-07T21:50:58.121Z] [CONSOLE]  [32m[1m✓[22m[39m Ready in 1061ms
[2025-06-07T21:50:58.121Z] [CONSOLE]  [32m[1m✓[22m[39m Ready in 1061ms
[2025-06-07T21:52:09.376Z] [CONSOLE]  [37m[1m○[22m[39m Compiling /api/generate/v2 ...
[2025-06-07T21:52:09.377Z] [CONSOLE]  [37m[1m○[22m[39m Compiling /api/generate/v2 ...
[2025-06-07T21:52:09.377Z] [CONSOLE]  [37m[1m○[22m[39m Compiling /api/generate/v2 ...
[2025-06-07T21:52:09.377Z] [CONSOLE]  [37m[1m○[22m[39m Compiling /api/generate/v2 ...
[2025-06-07T21:52:09.377Z] [CONSOLE]  [37m[1m○[22m[39m Compiling /api/generate/v2 ...
[2025-06-07T21:52:09.377Z] [CONSOLE]  [37m[1m○[22m[39m Compiling /api/generate/v2 ...
[2025-06-07T21:52:09.377Z] [CONSOLE]  [37m[1m○[22m[39m Compiling /api/generate/v2 ...
[2025-06-07T21:52:09.377Z] [CONSOLE]  [37m[1m○[22m[39m Compiling /api/generate/v2 ...
[2025-06-07T21:52:09.377Z] [CONSOLE]  [37m[1m○[22m[39m Compiling /api/generate/v2 ...
[2025-06-07T21:52:11.128Z] [CONSOLE]  [32m[1m✓[22m[39m Compiled /api/generate/v2 in 2.3s (912 modules)
[2025-06-07T21:52:11.130Z] [CONSOLE]  [32m[1m✓[22m[39m Compiled /api/generate/v2 in 2.3s (912 modules)
[2025-06-07T21:52:11.130Z] [CONSOLE]  [32m[1m✓[22m[39m Compiled /api/generate/v2 in 2.3s (912 modules)
[2025-06-07T21:52:11.130Z] [CONSOLE]  [32m[1m✓[22m[39m Compiled /api/generate/v2 in 2.3s (912 modules)
[2025-06-07T21:52:11.130Z] [CONSOLE]  [32m[1m✓[22m[39m Compiled /api/generate/v2 in 2.3s (912 modules)
[2025-06-07T21:52:11.130Z] [CONSOLE]  [32m[1m✓[22m[39m Compiled /api/generate/v2 in 2.3s (912 modules)
[2025-06-07T21:52:11.130Z] [CONSOLE]  [32m[1m✓[22m[39m Compiled /api/generate/v2 in 2.3s (912 modules)
[2025-06-07T21:52:11.130Z] [CONSOLE]  [32m[1m✓[22m[39m Compiled /api/generate/v2 in 2.3s (912 modules)
[2025-06-07T21:52:11.131Z] [CONSOLE]  [32m[1m✓[22m[39m Compiled /api/generate/v2 in 2.3s (912 modules)
[2025-06-07T21:52:11.131Z] [CONSOLE]  [32m[1m✓[22m[39m Compiled /api/generate/v2 in 2.3s (912 modules)
[2025-06-07T21:52:11.381Z] [CONSOLE] ✅ Analytics module initialized successfully
[2025-06-07T21:52:11.381Z] [CONSOLE] ✅ Analytics module initialized successfully
[2025-06-07T21:52:11.381Z] [CONSOLE] ✅ Analytics module initialized successfully
[2025-06-07T21:52:11.381Z] [CONSOLE] ✅ Analytics module initialized successfully
[2025-06-07T21:52:11.381Z] [CONSOLE] ✅ Analytics module initialized successfully
[2025-06-07T21:52:11.381Z] [CONSOLE] ✅ Analytics module initialized successfully
[2025-06-07T21:52:11.381Z] [CONSOLE] ✅ Analytics module initialized successfully
[2025-06-07T21:52:11.381Z] [CONSOLE] ✅ Analytics module initialized successfully
[2025-06-07T21:52:11.381Z] [CONSOLE] ✅ Analytics module initialized successfully
[2025-06-07T21:52:11.381Z] [CONSOLE] ✅ Analytics module initialized successfully
[2025-06-07T21:52:11.381Z] [CONSOLE] ✅ Analytics module initialized successfully
[2025-06-07T21:52:11.391Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:52:11.391Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:52:11.391Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:52:11.391Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:52:11.391Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:52:11.391Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:52:11.392Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:52:11.392Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:52:11.392Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:52:11.392Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:52:11.392Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:52:11.392Z] [INFO] 🚀 [GENERATE V2] Request received
[2025-06-07T21:52:11.394Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:52:11.394Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:52:11.394Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:52:11.394Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:52:11.394Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:52:11.394Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:52:11.394Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:52:11.394Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:52:11.394Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:52:11.395Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:52:11.395Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:52:11.395Z] [INFO] 📝 [GENERATE V2] Body parsed: {
  "input": "When I receive an email in my work Gmail (john@company.com) with label 'Client', send a message to the #client-updates channel in my Company Workspace Slack saying 'New client email from: [sender name] - Subject: [email subject]'",
  "platform": "n8n",
  "complexity": "complex",
  "errorHandling": true,
  "optimization": 50,
  "provider": "claude",
  "useRAG": true,
  "validateOutput": true
}
[2025-06-07T21:52:11.395Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:52:11.395Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:52:11.395Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:52:11.395Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:52:11.395Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:52:11.395Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:52:11.395Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:52:11.395Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:52:11.395Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:52:11.395Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:52:11.395Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:52:11.395Z] [INFO] ✅ [GENERATE V2] Request validated
[2025-06-07T21:52:11.395Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:52:11.395Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:52:11.395Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:52:11.395Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:52:11.395Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:52:11.395Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:52:11.395Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:52:11.395Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:52:11.395Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:52:11.395Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:52:11.395Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:52:11.396Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:52:11.396Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:52:11.396Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:52:11.396Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:52:11.396Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:52:11.396Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:52:11.396Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:52:11.396Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:52:11.396Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:52:11.396Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:52:11.396Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:52:11.396Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:52:11.396Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:52:11.396Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:52:11.396Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:52:11.396Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:52:11.396Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:52:11.397Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:52:11.397Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:52:11.397Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:52:11.397Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:52:11.397Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:52:11.745Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:52:11.745Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:52:11.746Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:52:11.746Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:52:11.746Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:52:11.746Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:52:11.746Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:52:11.746Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:52:11.746Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:52:11.746Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:52:11.746Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:52:11.746Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:52:11.746Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:52:11.746Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:52:11.746Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:52:11.746Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:52:11.746Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:52:11.746Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:52:11.746Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:52:11.746Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:52:11.746Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:52:11.746Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:52:13.037Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1641ms
[2025-06-07T21:52:13.037Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1641ms
[2025-06-07T21:52:13.037Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1641ms
[2025-06-07T21:52:13.038Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1641ms
[2025-06-07T21:52:13.038Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1641ms
[2025-06-07T21:52:13.038Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1641ms
[2025-06-07T21:52:13.038Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1641ms
[2025-06-07T21:52:13.038Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1641ms
[2025-06-07T21:52:13.038Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1641ms
[2025-06-07T21:52:13.038Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1641ms
[2025-06-07T21:52:13.038Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1641ms
[2025-06-07T21:52:13.038Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:52:13.038Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:52:13.038Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:52:13.038Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:52:13.038Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:52:13.038Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:52:13.038Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:52:13.038Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:52:13.038Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:52:13.038Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:52:13.038Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:52:13.044Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:52:13.044Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:52:13.044Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:52:13.044Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:52:13.044Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:52:13.044Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:52:13.045Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:52:13.045Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:52:13.045Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:52:13.045Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:52:13.045Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:52:13.045Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:52:13.046Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:52:13.046Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:52:13.046Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:52:13.046Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:52:13.046Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:52:13.046Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:52:13.046Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:52:13.046Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:52:13.046Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:52:13.046Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:52:13.046Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:52:13.046Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:52:13.046Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:52:13.047Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:52:13.047Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:52:13.047Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:52:13.047Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:52:13.047Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:52:13.047Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:52:13.047Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:52:13.047Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:52:42.749Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:52:42.751Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:52:42.752Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:52:42.752Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:52:42.752Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:52:42.752Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:52:42.752Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:52:42.752Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:52:42.753Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:52:42.753Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:52:42.753Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:52:42.757Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 29711 ms
[2025-06-07T21:52:42.758Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 29711 ms
[2025-06-07T21:52:42.758Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 29711 ms
[2025-06-07T21:52:42.758Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 29711 ms
[2025-06-07T21:52:42.758Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 29711 ms
[2025-06-07T21:52:42.758Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 29711 ms
[2025-06-07T21:52:42.758Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 29711 ms
[2025-06-07T21:52:42.758Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 29711 ms
[2025-06-07T21:52:42.758Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 29711 ms
[2025-06-07T21:52:42.759Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 29711 ms
[2025-06-07T21:52:42.759Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 29711 ms
[2025-06-07T21:52:42.759Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:52:42.759Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:52:42.759Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:52:42.759Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:52:42.759Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:52:42.759Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:52:42.759Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:52:42.759Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:52:42.759Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:52:42.759Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:52:42.759Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:52:42.760Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Client Email to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      },
      "parameters": {
        "labelIds": ["LABEL_0", "INBOX"],
        "includeAttachments": false
      }
    },
    {
      "id": "if_n
[2025-06-07T21:52:42.760Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Client Email to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      },
      "parameters": {
        "labelIds": ["LABEL_0", "INBOX"],
        "includeAttachments": false
      }
    },
    {
      "id": "if_n
[2025-06-07T21:52:42.760Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Client Email to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      },
      "parameters": {
        "labelIds": ["LABEL_0", "INBOX"],
        "includeAttachments": false
      }
    },
    {
      "id": "if_n
[2025-06-07T21:52:42.760Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Client Email to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      },
      "parameters": {
        "labelIds": ["LABEL_0", "INBOX"],
        "includeAttachments": false
      }
    },
    {
      "id": "if_n
[2025-06-07T21:52:42.760Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Client Email to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      },
      "parameters": {
        "labelIds": ["LABEL_0", "INBOX"],
        "includeAttachments": false
      }
    },
    {
      "id": "if_n
[2025-06-07T21:52:42.760Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Client Email to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      },
      "parameters": {
        "labelIds": ["LABEL_0", "INBOX"],
        "includeAttachments": false
      }
    },
    {
      "id": "if_n
[2025-06-07T21:52:42.760Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Client Email to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      },
      "parameters": {
        "labelIds": ["LABEL_0", "INBOX"],
        "includeAttachments": false
      }
    },
    {
      "id": "if_n
[2025-06-07T21:52:42.760Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Client Email to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      },
      "parameters": {
        "labelIds": ["LABEL_0", "INBOX"],
        "includeAttachments": false
      }
    },
    {
      "id": "if_n
[2025-06-07T21:52:42.761Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Client Email to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      },
      "parameters": {
        "labelIds": ["LABEL_0", "INBOX"],
        "includeAttachments": false
      }
    },
    {
      "id": "if_n
[2025-06-07T21:52:42.761Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Client Email to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      },
      "parameters": {
        "labelIds": ["LABEL_0", "INBOX"],
        "includeAttachments": false
      }
    },
    {
      "id": "if_n
[2025-06-07T21:52:42.761Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Client Email to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      },
      "parameters": {
        "labelIds": ["LABEL_0", "INBOX"],
        "includeAttachments": false
      }
    },
    {
      "id": "if_n
[2025-06-07T21:52:42.763Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:52:42.763Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:52:42.763Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:52:42.764Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:52:42.764Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:52:42.764Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:52:42.764Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:52:42.764Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:52:42.764Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:52:42.764Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:52:42.764Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:52:42.765Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:52:42.765Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:52:42.765Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:52:42.765Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:52:42.765Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:52:42.765Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:52:42.765Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:52:42.765Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:52:42.765Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:52:42.765Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:52:42.765Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:52:42.766Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:52:42.766Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:52:42.766Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:52:42.766Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:52:42.766Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:52:42.766Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:52:42.766Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:52:42.766Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:52:42.766Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:52:42.766Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:52:42.766Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:52:42.767Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:52:42.767Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:52:42.767Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:52:42.767Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:52:42.767Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:52:42.767Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:52:42.768Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:52:42.768Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:52:42.768Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:52:42.768Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:52:42.768Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:52:42.768Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:52:42.768Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:52:42.768Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:52:42.768Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:52:42.768Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:52:42.768Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:52:42.768Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:52:42.768Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:52:42.768Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:52:42.768Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:52:42.768Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:52:42.769Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:42.769Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:42.769Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:42.769Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:42.769Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:42.769Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:42.769Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:42.769Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:42.769Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:42.769Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:42.769Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:42.769Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:42.769Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:42.769Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:42.770Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:42.770Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:42.770Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:42.770Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:42.770Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:42.770Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:42.770Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:42.770Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:42.770Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:42.770Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:42.771Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:42.771Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:42.771Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:42.771Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:42.771Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:42.771Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:42.771Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:42.771Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:42.771Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:42.771Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:42.771Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:42.771Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:42.771Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:42.771Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:42.772Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:42.772Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:42.772Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:42.772Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:42.772Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:42.772Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:42.772Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:42.772Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:42.772Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:42.772Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:42.772Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:42.772Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:42.772Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:42.772Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:42.772Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:42.772Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:42.772Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:42.772Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:52:42.772Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:52:42.772Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:52:42.772Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:52:42.772Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:52:42.772Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:52:42.773Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:52:42.773Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:52:42.773Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:52:42.773Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:52:42.773Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:52:42.773Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:52:42.773Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:52:42.773Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:52:42.773Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:52:42.773Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:52:42.773Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:52:42.773Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:52:42.773Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:52:42.773Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:52:42.773Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:52:42.773Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:52:42.773Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:52:42.773Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:52:42.773Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:52:42.773Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:52:42.773Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:52:42.773Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:52:42.774Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:52:42.774Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:52:42.774Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:52:42.774Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:52:42.774Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:52:42.774Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:52:42.774Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:52:42.774Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:52:42.774Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:52:42.774Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:52:42.774Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:52:42.774Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:52:42.774Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:52:42.774Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:52:42.774Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:52:42.775Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:52:42.775Z] [INFO] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:52:42.775Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:52:42.776Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:52:42.776Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:52:42.776Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:52:42.776Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:52:42.776Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:52:42.776Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:52:42.776Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:52:42.776Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:52:42.776Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:52:42.776Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:52:42.777Z] [CONSOLE]   ✅ Fixed Slack expression: =New client email from: {{$json["senderName"]}} - ...
[2025-06-07T21:52:42.777Z] [CONSOLE]   ✅ Fixed Slack expression: =New client email from: {{$json["senderName"]}} - ...
[2025-06-07T21:52:42.777Z] [CONSOLE]   ✅ Fixed Slack expression: =New client email from: {{$json["senderName"]}} - ...
[2025-06-07T21:52:42.777Z] [CONSOLE]   ✅ Fixed Slack expression: =New client email from: {{$json["senderName"]}} - ...
[2025-06-07T21:52:42.777Z] [CONSOLE]   ✅ Fixed Slack expression: =New client email from: {{$json["senderName"]}} - ...
[2025-06-07T21:52:42.777Z] [CONSOLE]   ✅ Fixed Slack expression: =New client email from: {{$json["senderName"]}} - ...
[2025-06-07T21:52:42.777Z] [CONSOLE]   ✅ Fixed Slack expression: =New client email from: {{$json["senderName"]}} - ...
[2025-06-07T21:52:42.777Z] [CONSOLE]   ✅ Fixed Slack expression: =New client email from: {{$json["senderName"]}} - ...
[2025-06-07T21:52:42.777Z] [CONSOLE]   ✅ Fixed Slack expression: =New client email from: {{$json["senderName"]}} - ...
[2025-06-07T21:52:42.777Z] [CONSOLE]   ✅ Fixed Slack expression: =New client email from: {{$json["senderName"]}} - ...
[2025-06-07T21:52:42.777Z] [CONSOLE]   ✅ Fixed Slack expression: =New client email from: {{$json["senderName"]}} - ...
[2025-06-07T21:52:42.778Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:52:42.778Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:52:42.778Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:52:42.778Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:52:42.778Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:52:42.778Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:52:42.778Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:52:42.778Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:52:42.778Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:52:42.778Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:52:42.778Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:52:42.778Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:52:42.779Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:52:42.779Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:52:42.779Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:52:42.779Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:52:42.779Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:52:42.779Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:52:42.779Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:52:42.779Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:52:42.779Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:52:42.779Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:52:42.779Z] [CONSOLE]     ✅ Fixed Gmail fields in Slack text: =New client email from: {{$jso...
[2025-06-07T21:52:42.779Z] [CONSOLE]     ✅ Fixed Gmail fields in Slack text: =New client email from: {{$jso...
[2025-06-07T21:52:42.779Z] [CONSOLE]     ✅ Fixed Gmail fields in Slack text: =New client email from: {{$jso...
[2025-06-07T21:52:42.779Z] [CONSOLE]     ✅ Fixed Gmail fields in Slack text: =New client email from: {{$jso...
[2025-06-07T21:52:42.779Z] [CONSOLE]     ✅ Fixed Gmail fields in Slack text: =New client email from: {{$jso...
[2025-06-07T21:52:42.779Z] [CONSOLE]     ✅ Fixed Gmail fields in Slack text: =New client email from: {{$jso...
[2025-06-07T21:52:42.779Z] [CONSOLE]     ✅ Fixed Gmail fields in Slack text: =New client email from: {{$jso...
[2025-06-07T21:52:42.779Z] [CONSOLE]     ✅ Fixed Gmail fields in Slack text: =New client email from: {{$jso...
[2025-06-07T21:52:42.780Z] [CONSOLE]     ✅ Fixed Gmail fields in Slack text: =New client email from: {{$jso...
[2025-06-07T21:52:42.780Z] [CONSOLE]     ✅ Fixed Gmail fields in Slack text: =New client email from: {{$jso...
[2025-06-07T21:52:42.780Z] [CONSOLE]     ✅ Fixed Gmail fields in Slack text: =New client email from: {{$jso...
[2025-06-07T21:52:42.780Z] [CONSOLE] 🔧 Fixing IF node: Check Client Label
[2025-06-07T21:52:42.780Z] [CONSOLE] 🔧 Fixing IF node: Check Client Label
[2025-06-07T21:52:42.780Z] [CONSOLE] 🔧 Fixing IF node: Check Client Label
[2025-06-07T21:52:42.781Z] [CONSOLE] 🔧 Fixing IF node: Check Client Label
[2025-06-07T21:52:42.781Z] [CONSOLE] 🔧 Fixing IF node: Check Client Label
[2025-06-07T21:52:42.781Z] [CONSOLE] 🔧 Fixing IF node: Check Client Label
[2025-06-07T21:52:42.781Z] [CONSOLE] 🔧 Fixing IF node: Check Client Label
[2025-06-07T21:52:42.781Z] [CONSOLE] 🔧 Fixing IF node: Check Client Label
[2025-06-07T21:52:42.781Z] [CONSOLE] 🔧 Fixing IF node: Check Client Label
[2025-06-07T21:52:42.781Z] [CONSOLE] 🔧 Fixing IF node: Check Client Label
[2025-06-07T21:52:42.781Z] [CONSOLE] 🔧 Fixing IF node: Check Client Label
[2025-06-07T21:52:42.781Z] [INFO] 🔧 Fixing IF node: Check Client Label
[2025-06-07T21:52:42.781Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:52:42.781Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:52:42.781Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:52:42.781Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:52:42.781Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:52:42.781Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:52:42.781Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:52:42.781Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:52:42.781Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:52:42.781Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:52:42.782Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:52:42.782Z] [CONSOLE]   ✅ Final IF node structure for "Check Client Label": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:52:42.782Z] [CONSOLE]   ✅ Final IF node structure for "Check Client Label": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:52:42.782Z] [CONSOLE]   ✅ Final IF node structure for "Check Client Label": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:52:42.782Z] [CONSOLE]   ✅ Final IF node structure for "Check Client Label": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:52:42.782Z] [CONSOLE]   ✅ Final IF node structure for "Check Client Label": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:52:42.782Z] [CONSOLE]   ✅ Final IF node structure for "Check Client Label": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:52:42.782Z] [CONSOLE]   ✅ Final IF node structure for "Check Client Label": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:52:42.782Z] [CONSOLE]   ✅ Final IF node structure for "Check Client Label": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:52:42.782Z] [CONSOLE]   ✅ Final IF node structure for "Check Client Label": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:52:42.782Z] [CONSOLE]   ✅ Final IF node structure for "Check Client Label": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:52:42.782Z] [CONSOLE]   ✅ Final IF node structure for "Check Client Label": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:52:42.782Z] [CONSOLE] Fixed mixed expression syntax in Set node value: senderName
[2025-06-07T21:52:42.782Z] [CONSOLE] Fixed mixed expression syntax in Set node value: senderName
[2025-06-07T21:52:42.782Z] [CONSOLE] Fixed mixed expression syntax in Set node value: senderName
[2025-06-07T21:52:42.782Z] [CONSOLE] Fixed mixed expression syntax in Set node value: senderName
[2025-06-07T21:52:42.782Z] [CONSOLE] Fixed mixed expression syntax in Set node value: senderName
[2025-06-07T21:52:42.783Z] [CONSOLE] Fixed mixed expression syntax in Set node value: senderName
[2025-06-07T21:52:42.783Z] [CONSOLE] Fixed mixed expression syntax in Set node value: senderName
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: senderName
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: senderName
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: senderName
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: senderName
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: senderEmail
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: senderEmail
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: senderEmail
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: senderEmail
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: senderEmail
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: senderEmail
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: senderEmail
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: senderEmail
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: senderEmail
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: senderEmail
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: senderEmail
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: subject
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: subject
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: subject
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: subject
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: subject
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: subject
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: subject
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: subject
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: subject
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: subject
[2025-06-07T21:52:42.784Z] [CONSOLE] Fixed mixed expression syntax in Set node value: subject
[2025-06-07T21:52:42.785Z] [CONSOLE] ℹ️ Processed Slack node "Send to Slack" - ensured no otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] ℹ️ Processed Slack node "Send to Slack" - ensured no otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] ℹ️ Processed Slack node "Send to Slack" - ensured no otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] ℹ️ Processed Slack node "Send to Slack" - ensured no otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] ℹ️ Processed Slack node "Send to Slack" - ensured no otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] ℹ️ Processed Slack node "Send to Slack" - ensured no otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] ℹ️ Processed Slack node "Send to Slack" - ensured no otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] ℹ️ Processed Slack node "Send to Slack" - ensured no otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] ℹ️ Processed Slack node "Send to Slack" - ensured no otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] ℹ️ Processed Slack node "Send to Slack" - ensured no otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] ℹ️ Processed Slack node "Send to Slack" - ensured no otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] ℹ️ Processed Slack node "Slack Error Notification" - ensured no otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] ℹ️ Processed Slack node "Slack Error Notification" - ensured no otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] ℹ️ Processed Slack node "Slack Error Notification" - ensured no otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] ℹ️ Processed Slack node "Slack Error Notification" - ensured no otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] ℹ️ Processed Slack node "Slack Error Notification" - ensured no otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] ℹ️ Processed Slack node "Slack Error Notification" - ensured no otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] ℹ️ Processed Slack node "Slack Error Notification" - ensured no otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] ℹ️ Processed Slack node "Slack Error Notification" - ensured no otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] ℹ️ Processed Slack node "Slack Error Notification" - ensured no otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] ℹ️ Processed Slack node "Slack Error Notification" - ensured no otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] ℹ️ Processed Slack node "Slack Error Notification" - ensured no otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:52:42.785Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:52:42.786Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:52:42.786Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:52:42.786Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:52:42.786Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:52:42.786Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:52:42.786Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:52:42.786Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:52:42.786Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:52:42.786Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:52:42.786Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:52:42.786Z] [CONSOLE] 
Node 0: Gmail Trigger (n8n-nodes-base.gmailTrigger)
[2025-06-07T21:52:42.786Z] [CONSOLE] 
Node 0: Gmail Trigger (n8n-nodes-base.gmailTrigger)
[2025-06-07T21:52:42.786Z] [CONSOLE] 
Node 0: Gmail Trigger (n8n-nodes-base.gmailTrigger)
[2025-06-07T21:52:42.786Z] [CONSOLE] 
Node 0: Gmail Trigger (n8n-nodes-base.gmailTrigger)
[2025-06-07T21:52:42.786Z] [CONSOLE] 
Node 0: Gmail Trigger (n8n-nodes-base.gmailTrigger)
[2025-06-07T21:52:42.786Z] [CONSOLE] 
Node 0: Gmail Trigger (n8n-nodes-base.gmailTrigger)
[2025-06-07T21:52:42.786Z] [CONSOLE] 
Node 0: Gmail Trigger (n8n-nodes-base.gmailTrigger)
[2025-06-07T21:52:42.786Z] [CONSOLE] 
Node 0: Gmail Trigger (n8n-nodes-base.gmailTrigger)
[2025-06-07T21:52:42.786Z] [CONSOLE] 
Node 0: Gmail Trigger (n8n-nodes-base.gmailTrigger)
[2025-06-07T21:52:42.786Z] [CONSOLE] 
Node 0: Gmail Trigger (n8n-nodes-base.gmailTrigger)
[2025-06-07T21:52:42.786Z] [CONSOLE] 
Node 0: Gmail Trigger (n8n-nodes-base.gmailTrigger)
[2025-06-07T21:52:42.786Z] [CONSOLE] Parameters: {
  "labelIds": [
    "LABEL_0",
    "INBOX"
  ],
  "includeAttachments": false
}
[2025-06-07T21:52:42.786Z] [CONSOLE] Parameters: {
  "labelIds": [
    "LABEL_0",
    "INBOX"
  ],
  "includeAttachments": false
}
[2025-06-07T21:52:42.786Z] [CONSOLE] Parameters: {
  "labelIds": [
    "LABEL_0",
    "INBOX"
  ],
  "includeAttachments": false
}
[2025-06-07T21:52:42.786Z] [CONSOLE] Parameters: {
  "labelIds": [
    "LABEL_0",
    "INBOX"
  ],
  "includeAttachments": false
}
[2025-06-07T21:52:42.786Z] [CONSOLE] Parameters: {
  "labelIds": [
    "LABEL_0",
    "INBOX"
  ],
  "includeAttachments": false
}
[2025-06-07T21:52:42.786Z] [CONSOLE] Parameters: {
  "labelIds": [
    "LABEL_0",
    "INBOX"
  ],
  "includeAttachments": false
}
[2025-06-07T21:52:42.786Z] [CONSOLE] Parameters: {
  "labelIds": [
    "LABEL_0",
    "INBOX"
  ],
  "includeAttachments": false
}
[2025-06-07T21:52:42.786Z] [CONSOLE] Parameters: {
  "labelIds": [
    "LABEL_0",
    "INBOX"
  ],
  "includeAttachments": false
}
[2025-06-07T21:52:42.786Z] [CONSOLE] Parameters: {
  "labelIds": [
    "LABEL_0",
    "INBOX"
  ],
  "includeAttachments": false
}
[2025-06-07T21:52:42.786Z] [CONSOLE] Parameters: {
  "labelIds": [
    "LABEL_0",
    "INBOX"
  ],
  "includeAttachments": false
}
[2025-06-07T21:52:42.786Z] [CONSOLE] Parameters: {
  "labelIds": [
    "LABEL_0",
    "INBOX"
  ],
  "includeAttachments": false
}
[2025-06-07T21:52:42.787Z] [CONSOLE] 
Node 1: Check Client Label (n8n-nodes-base.if)
[2025-06-07T21:52:42.787Z] [CONSOLE] 
Node 1: Check Client Label (n8n-nodes-base.if)
[2025-06-07T21:52:42.787Z] [CONSOLE] 
Node 1: Check Client Label (n8n-nodes-base.if)
[2025-06-07T21:52:42.787Z] [CONSOLE] 
Node 1: Check Client Label (n8n-nodes-base.if)
[2025-06-07T21:52:42.787Z] [CONSOLE] 
Node 1: Check Client Label (n8n-nodes-base.if)
[2025-06-07T21:52:42.787Z] [CONSOLE] 
Node 1: Check Client Label (n8n-nodes-base.if)
[2025-06-07T21:52:42.787Z] [CONSOLE] 
Node 1: Check Client Label (n8n-nodes-base.if)
[2025-06-07T21:52:42.787Z] [CONSOLE] 
Node 1: Check Client Label (n8n-nodes-base.if)
[2025-06-07T21:52:42.787Z] [CONSOLE] 
Node 1: Check Client Label (n8n-nodes-base.if)
[2025-06-07T21:52:42.787Z] [CONSOLE] 
Node 1: Check Client Label (n8n-nodes-base.if)
[2025-06-07T21:52:42.787Z] [CONSOLE] 
Node 1: Check Client Label (n8n-nodes-base.if)
[2025-06-07T21:52:42.787Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:52:42.787Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:52:42.787Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:52:42.787Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:52:42.787Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:52:42.787Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:52:42.787Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:52:42.787Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:52:42.787Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:52:42.787Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:52:42.787Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:52:42.787Z] [CONSOLE] 
Node 2: Extract Email Data (n8n-nodes-base.set)
[2025-06-07T21:52:42.787Z] [CONSOLE] 
Node 2: Extract Email Data (n8n-nodes-base.set)
[2025-06-07T21:52:42.787Z] [CONSOLE] 
Node 2: Extract Email Data (n8n-nodes-base.set)
[2025-06-07T21:52:42.787Z] [CONSOLE] 
Node 2: Extract Email Data (n8n-nodes-base.set)
[2025-06-07T21:52:42.787Z] [CONSOLE] 
Node 2: Extract Email Data (n8n-nodes-base.set)
[2025-06-07T21:52:42.787Z] [CONSOLE] 
Node 2: Extract Email Data (n8n-nodes-base.set)
[2025-06-07T21:52:42.788Z] [CONSOLE] 
Node 2: Extract Email Data (n8n-nodes-base.set)
[2025-06-07T21:52:42.788Z] [CONSOLE] 
Node 2: Extract Email Data (n8n-nodes-base.set)
[2025-06-07T21:52:42.788Z] [CONSOLE] 
Node 2: Extract Email Data (n8n-nodes-base.set)
[2025-06-07T21:52:42.788Z] [CONSOLE] 
Node 2: Extract Email Data (n8n-nodes-base.set)
[2025-06-07T21:52:42.788Z] [CONSOLE] 
Node 2: Extract Email Data (n8n-nodes-base.set)
[2025-06-07T21:52:42.788Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "senderName",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.split('<')[0].trim()}}"
      },
      {
        "name": "senderEmail",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.match(/<(.+)>/)?.[1] || $json[\"payload\"][\"headers\"].find(header => header.name === 'From').value}}"
      },
      {
        "name": "subject",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'Subject').value}}"
      }
    ]
  }
}
[2025-06-07T21:52:42.788Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "senderName",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.split('<')[0].trim()}}"
      },
      {
        "name": "senderEmail",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.match(/<(.+)>/)?.[1] || $json[\"payload\"][\"headers\"].find(header => header.name === 'From').value}}"
      },
      {
        "name": "subject",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'Subject').value}}"
      }
    ]
  }
}
[2025-06-07T21:52:42.788Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "senderName",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.split('<')[0].trim()}}"
      },
      {
        "name": "senderEmail",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.match(/<(.+)>/)?.[1] || $json[\"payload\"][\"headers\"].find(header => header.name === 'From').value}}"
      },
      {
        "name": "subject",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'Subject').value}}"
      }
    ]
  }
}
[2025-06-07T21:52:42.788Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "senderName",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.split('<')[0].trim()}}"
      },
      {
        "name": "senderEmail",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.match(/<(.+)>/)?.[1] || $json[\"payload\"][\"headers\"].find(header => header.name === 'From').value}}"
      },
      {
        "name": "subject",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'Subject').value}}"
      }
    ]
  }
}
[2025-06-07T21:52:42.788Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "senderName",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.split('<')[0].trim()}}"
      },
      {
        "name": "senderEmail",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.match(/<(.+)>/)?.[1] || $json[\"payload\"][\"headers\"].find(header => header.name === 'From').value}}"
      },
      {
        "name": "subject",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'Subject').value}}"
      }
    ]
  }
}
[2025-06-07T21:52:42.788Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "senderName",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.split('<')[0].trim()}}"
      },
      {
        "name": "senderEmail",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.match(/<(.+)>/)?.[1] || $json[\"payload\"][\"headers\"].find(header => header.name === 'From').value}}"
      },
      {
        "name": "subject",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'Subject').value}}"
      }
    ]
  }
}
[2025-06-07T21:52:42.788Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "senderName",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.split('<')[0].trim()}}"
      },
      {
        "name": "senderEmail",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.match(/<(.+)>/)?.[1] || $json[\"payload\"][\"headers\"].find(header => header.name === 'From').value}}"
      },
      {
        "name": "subject",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'Subject').value}}"
      }
    ]
  }
}
[2025-06-07T21:52:42.788Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "senderName",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.split('<')[0].trim()}}"
      },
      {
        "name": "senderEmail",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.match(/<(.+)>/)?.[1] || $json[\"payload\"][\"headers\"].find(header => header.name === 'From').value}}"
      },
      {
        "name": "subject",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'Subject').value}}"
      }
    ]
  }
}
[2025-06-07T21:52:42.788Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "senderName",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.split('<')[0].trim()}}"
      },
      {
        "name": "senderEmail",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.match(/<(.+)>/)?.[1] || $json[\"payload\"][\"headers\"].find(header => header.name === 'From').value}}"
      },
      {
        "name": "subject",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'Subject').value}}"
      }
    ]
  }
}
[2025-06-07T21:52:42.788Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "senderName",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.split('<')[0].trim()}}"
      },
      {
        "name": "senderEmail",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.match(/<(.+)>/)?.[1] || $json[\"payload\"][\"headers\"].find(header => header.name === 'From').value}}"
      },
      {
        "name": "subject",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'Subject').value}}"
      }
    ]
  }
}
[2025-06-07T21:52:42.788Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "senderName",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.split('<')[0].trim()}}"
      },
      {
        "name": "senderEmail",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.match(/<(.+)>/)?.[1] || $json[\"payload\"][\"headers\"].find(header => header.name === 'From').value}}"
      },
      {
        "name": "subject",
        "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'Subject').value}}"
      }
    ]
  }
}
[2025-06-07T21:52:42.788Z] [CONSOLE] 
Node 3: Send to Slack (n8n-nodes-base.slack)
[2025-06-07T21:52:42.788Z] [CONSOLE] 
Node 3: Send to Slack (n8n-nodes-base.slack)
[2025-06-07T21:52:42.788Z] [CONSOLE] 
Node 3: Send to Slack (n8n-nodes-base.slack)
[2025-06-07T21:52:42.789Z] [CONSOLE] 
Node 3: Send to Slack (n8n-nodes-base.slack)
[2025-06-07T21:52:42.789Z] [CONSOLE] 
Node 3: Send to Slack (n8n-nodes-base.slack)
[2025-06-07T21:52:42.789Z] [CONSOLE] 
Node 3: Send to Slack (n8n-nodes-base.slack)
[2025-06-07T21:52:42.789Z] [CONSOLE] 
Node 3: Send to Slack (n8n-nodes-base.slack)
[2025-06-07T21:52:42.789Z] [CONSOLE] 
Node 3: Send to Slack (n8n-nodes-base.slack)
[2025-06-07T21:52:42.789Z] [CONSOLE] 
Node 3: Send to Slack (n8n-nodes-base.slack)
[2025-06-07T21:52:42.789Z] [CONSOLE] 
Node 3: Send to Slack (n8n-nodes-base.slack)
[2025-06-07T21:52:42.789Z] [CONSOLE] 
Node 3: Send to Slack (n8n-nodes-base.slack)
[2025-06-07T21:52:42.789Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#client-updates",
  "text": "New client email from: {{$json.senderName}} - Subject: {{$json[\"headers\"][\"subject\"]}}"
}
[2025-06-07T21:52:42.789Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#client-updates",
  "text": "New client email from: {{$json.senderName}} - Subject: {{$json[\"headers\"][\"subject\"]}}"
}
[2025-06-07T21:52:42.789Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#client-updates",
  "text": "New client email from: {{$json.senderName}} - Subject: {{$json[\"headers\"][\"subject\"]}}"
}
[2025-06-07T21:52:42.789Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#client-updates",
  "text": "New client email from: {{$json.senderName}} - Subject: {{$json[\"headers\"][\"subject\"]}}"
}
[2025-06-07T21:52:42.789Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#client-updates",
  "text": "New client email from: {{$json.senderName}} - Subject: {{$json[\"headers\"][\"subject\"]}}"
}
[2025-06-07T21:52:42.789Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#client-updates",
  "text": "New client email from: {{$json.senderName}} - Subject: {{$json[\"headers\"][\"subject\"]}}"
}
[2025-06-07T21:52:42.789Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#client-updates",
  "text": "New client email from: {{$json.senderName}} - Subject: {{$json[\"headers\"][\"subject\"]}}"
}
[2025-06-07T21:52:42.789Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#client-updates",
  "text": "New client email from: {{$json.senderName}} - Subject: {{$json[\"headers\"][\"subject\"]}}"
}
[2025-06-07T21:52:42.789Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#client-updates",
  "text": "New client email from: {{$json.senderName}} - Subject: {{$json[\"headers\"][\"subject\"]}}"
}
[2025-06-07T21:52:42.789Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#client-updates",
  "text": "New client email from: {{$json.senderName}} - Subject: {{$json[\"headers\"][\"subject\"]}}"
}
[2025-06-07T21:52:42.789Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#client-updates",
  "text": "New client email from: {{$json.senderName}} - Subject: {{$json[\"headers\"][\"subject\"]}}"
}
[2025-06-07T21:52:42.789Z] [CONSOLE] 
Node 4: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:52:42.789Z] [CONSOLE] 
Node 4: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:52:42.789Z] [CONSOLE] 
Node 4: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:52:42.789Z] [CONSOLE] 
Node 4: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:52:42.789Z] [CONSOLE] 
Node 4: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:52:42.789Z] [CONSOLE] 
Node 4: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:52:42.790Z] [CONSOLE] 
Node 4: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:52:42.790Z] [CONSOLE] 
Node 4: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:52:42.790Z] [CONSOLE] 
Node 4: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:52:42.790Z] [CONSOLE] 
Node 4: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:52:42.790Z] [CONSOLE] 
Node 4: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:52:42.790Z] [CONSOLE] Parameters: 
[2025-06-07T21:52:42.790Z] [CONSOLE] Parameters: 
[2025-06-07T21:52:42.790Z] [CONSOLE] Parameters: 
[2025-06-07T21:52:42.790Z] [CONSOLE] Parameters: 
[2025-06-07T21:52:42.790Z] [CONSOLE] Parameters: 
[2025-06-07T21:52:42.790Z] [CONSOLE] Parameters: 
[2025-06-07T21:52:42.790Z] [CONSOLE] Parameters: 
[2025-06-07T21:52:42.790Z] [CONSOLE] Parameters: 
[2025-06-07T21:52:42.790Z] [CONSOLE] Parameters: 
[2025-06-07T21:52:42.790Z] [CONSOLE] Parameters: 
[2025-06-07T21:52:42.790Z] [CONSOLE] Parameters: 
[2025-06-07T21:52:42.790Z] [CONSOLE] 
Node 5: Send Error Email (n8n-nodes-base.emailSend)
[2025-06-07T21:52:42.790Z] [CONSOLE] 
Node 5: Send Error Email (n8n-nodes-base.emailSend)
[2025-06-07T21:52:42.790Z] [CONSOLE] 
Node 5: Send Error Email (n8n-nodes-base.emailSend)
[2025-06-07T21:52:42.790Z] [CONSOLE] 
Node 5: Send Error Email (n8n-nodes-base.emailSend)
[2025-06-07T21:52:42.790Z] [CONSOLE] 
Node 5: Send Error Email (n8n-nodes-base.emailSend)
[2025-06-07T21:52:42.790Z] [CONSOLE] 
Node 5: Send Error Email (n8n-nodes-base.emailSend)
[2025-06-07T21:52:42.790Z] [CONSOLE] 
Node 5: Send Error Email (n8n-nodes-base.emailSend)
[2025-06-07T21:52:42.790Z] [CONSOLE] 
Node 5: Send Error Email (n8n-nodes-base.emailSend)
[2025-06-07T21:52:42.790Z] [CONSOLE] 
Node 5: Send Error Email (n8n-nodes-base.emailSend)
[2025-06-07T21:52:42.790Z] [CONSOLE] 
Node 5: Send Error Email (n8n-nodes-base.emailSend)
[2025-06-07T21:52:42.790Z] [CONSOLE] 
Node 5: Send Error Email (n8n-nodes-base.emailSend)
[2025-06-07T21:52:42.791Z] [CONSOLE] Parameters: {
  "fromEmail": "automation@company.com",
  "toEmail": "john@company.com",
  "subject": "Client Email Workflow Error",
  "text": "=Error in Client Email to Slack workflow:\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}\n\nPlease check the workflow execution."
}
[2025-06-07T21:52:42.791Z] [CONSOLE] Parameters: {
  "fromEmail": "automation@company.com",
  "toEmail": "john@company.com",
  "subject": "Client Email Workflow Error",
  "text": "=Error in Client Email to Slack workflow:\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}\n\nPlease check the workflow execution."
}
[2025-06-07T21:52:42.791Z] [CONSOLE] Parameters: {
  "fromEmail": "automation@company.com",
  "toEmail": "john@company.com",
  "subject": "Client Email Workflow Error",
  "text": "=Error in Client Email to Slack workflow:\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}\n\nPlease check the workflow execution."
}
[2025-06-07T21:52:42.791Z] [CONSOLE] Parameters: {
  "fromEmail": "automation@company.com",
  "toEmail": "john@company.com",
  "subject": "Client Email Workflow Error",
  "text": "=Error in Client Email to Slack workflow:\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}\n\nPlease check the workflow execution."
}
[2025-06-07T21:52:42.791Z] [CONSOLE] Parameters: {
  "fromEmail": "automation@company.com",
  "toEmail": "john@company.com",
  "subject": "Client Email Workflow Error",
  "text": "=Error in Client Email to Slack workflow:\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}\n\nPlease check the workflow execution."
}
[2025-06-07T21:52:42.791Z] [CONSOLE] Parameters: {
  "fromEmail": "automation@company.com",
  "toEmail": "john@company.com",
  "subject": "Client Email Workflow Error",
  "text": "=Error in Client Email to Slack workflow:\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}\n\nPlease check the workflow execution."
}
[2025-06-07T21:52:42.791Z] [CONSOLE] Parameters: {
  "fromEmail": "automation@company.com",
  "toEmail": "john@company.com",
  "subject": "Client Email Workflow Error",
  "text": "=Error in Client Email to Slack workflow:\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}\n\nPlease check the workflow execution."
}
[2025-06-07T21:52:42.791Z] [CONSOLE] Parameters: {
  "fromEmail": "automation@company.com",
  "toEmail": "john@company.com",
  "subject": "Client Email Workflow Error",
  "text": "=Error in Client Email to Slack workflow:\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}\n\nPlease check the workflow execution."
}
[2025-06-07T21:52:42.791Z] [CONSOLE] Parameters: {
  "fromEmail": "automation@company.com",
  "toEmail": "john@company.com",
  "subject": "Client Email Workflow Error",
  "text": "=Error in Client Email to Slack workflow:\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}\n\nPlease check the workflow execution."
}
[2025-06-07T21:52:42.791Z] [CONSOLE] Parameters: {
  "fromEmail": "automation@company.com",
  "toEmail": "john@company.com",
  "subject": "Client Email Workflow Error",
  "text": "=Error in Client Email to Slack workflow:\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}\n\nPlease check the workflow execution."
}
[2025-06-07T21:52:42.791Z] [CONSOLE] Parameters: {
  "fromEmail": "automation@company.com",
  "toEmail": "john@company.com",
  "subject": "Client Email Workflow Error",
  "text": "=Error in Client Email to Slack workflow:\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}\n\nPlease check the workflow execution."
}
[2025-06-07T21:52:42.791Z] [CONSOLE] 
Node 6: Slack Error Notification (n8n-nodes-base.slack)
[2025-06-07T21:52:42.791Z] [CONSOLE] 
Node 6: Slack Error Notification (n8n-nodes-base.slack)
[2025-06-07T21:52:42.791Z] [CONSOLE] 
Node 6: Slack Error Notification (n8n-nodes-base.slack)
[2025-06-07T21:52:42.791Z] [CONSOLE] 
Node 6: Slack Error Notification (n8n-nodes-base.slack)
[2025-06-07T21:52:42.791Z] [CONSOLE] 
Node 6: Slack Error Notification (n8n-nodes-base.slack)
[2025-06-07T21:52:42.791Z] [CONSOLE] 
Node 6: Slack Error Notification (n8n-nodes-base.slack)
[2025-06-07T21:52:42.791Z] [CONSOLE] 
Node 6: Slack Error Notification (n8n-nodes-base.slack)
[2025-06-07T21:52:42.791Z] [CONSOLE] 
Node 6: Slack Error Notification (n8n-nodes-base.slack)
[2025-06-07T21:52:42.791Z] [CONSOLE] 
Node 6: Slack Error Notification (n8n-nodes-base.slack)
[2025-06-07T21:52:42.791Z] [CONSOLE] 
Node 6: Slack Error Notification (n8n-nodes-base.slack)
[2025-06-07T21:52:42.791Z] [CONSOLE] 
Node 6: Slack Error Notification (n8n-nodes-base.slack)
[2025-06-07T21:52:42.791Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#automation-errors",
  "text": "⚠️ Client Email Workflow Error\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}"
}
[2025-06-07T21:52:42.791Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#automation-errors",
  "text": "⚠️ Client Email Workflow Error\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}"
}
[2025-06-07T21:52:42.791Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#automation-errors",
  "text": "⚠️ Client Email Workflow Error\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}"
}
[2025-06-07T21:52:42.791Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#automation-errors",
  "text": "⚠️ Client Email Workflow Error\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}"
}
[2025-06-07T21:52:42.791Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#automation-errors",
  "text": "⚠️ Client Email Workflow Error\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}"
}
[2025-06-07T21:52:42.791Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#automation-errors",
  "text": "⚠️ Client Email Workflow Error\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}"
}
[2025-06-07T21:52:42.791Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#automation-errors",
  "text": "⚠️ Client Email Workflow Error\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}"
}
[2025-06-07T21:52:42.792Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#automation-errors",
  "text": "⚠️ Client Email Workflow Error\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}"
}
[2025-06-07T21:52:42.792Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#automation-errors",
  "text": "⚠️ Client Email Workflow Error\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}"
}
[2025-06-07T21:52:42.792Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#automation-errors",
  "text": "⚠️ Client Email Workflow Error\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}"
}
[2025-06-07T21:52:42.792Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#automation-errors",
  "text": "⚠️ Client Email Workflow Error\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}"
}
[2025-06-07T21:52:42.792Z] [CONSOLE] 
Connections: {
  "Gmail Trigger": {
    "main": [
      [
        {
          "node": "Check Client Label",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check Client Label": {
    "main": [
      [
        {
          "node": "Extract Email Data",
          "type": "main",
          "index": 0
        }
      ],
      []
    ]
  },
  "Extract Email Data": {
    "main": [
      [
        {
          "node": "Send to Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Send Error Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Error Email": {
    "main": [
      [
        {
          "node": "Slack Error Notification",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:52:42.792Z] [CONSOLE] 
Connections: {
  "Gmail Trigger": {
    "main": [
      [
        {
          "node": "Check Client Label",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check Client Label": {
    "main": [
      [
        {
          "node": "Extract Email Data",
          "type": "main",
          "index": 0
        }
      ],
      []
    ]
  },
  "Extract Email Data": {
    "main": [
      [
        {
          "node": "Send to Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Send Error Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Error Email": {
    "main": [
      [
        {
          "node": "Slack Error Notification",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:52:42.792Z] [CONSOLE] 
Connections: {
  "Gmail Trigger": {
    "main": [
      [
        {
          "node": "Check Client Label",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check Client Label": {
    "main": [
      [
        {
          "node": "Extract Email Data",
          "type": "main",
          "index": 0
        }
      ],
      []
    ]
  },
  "Extract Email Data": {
    "main": [
      [
        {
          "node": "Send to Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Send Error Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Error Email": {
    "main": [
      [
        {
          "node": "Slack Error Notification",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:52:42.792Z] [CONSOLE] 
Connections: {
  "Gmail Trigger": {
    "main": [
      [
        {
          "node": "Check Client Label",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check Client Label": {
    "main": [
      [
        {
          "node": "Extract Email Data",
          "type": "main",
          "index": 0
        }
      ],
      []
    ]
  },
  "Extract Email Data": {
    "main": [
      [
        {
          "node": "Send to Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Send Error Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Error Email": {
    "main": [
      [
        {
          "node": "Slack Error Notification",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:52:42.792Z] [CONSOLE] 
Connections: {
  "Gmail Trigger": {
    "main": [
      [
        {
          "node": "Check Client Label",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check Client Label": {
    "main": [
      [
        {
          "node": "Extract Email Data",
          "type": "main",
          "index": 0
        }
      ],
      []
    ]
  },
  "Extract Email Data": {
    "main": [
      [
        {
          "node": "Send to Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Send Error Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Error Email": {
    "main": [
      [
        {
          "node": "Slack Error Notification",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:52:42.792Z] [CONSOLE] 
Connections: {
  "Gmail Trigger": {
    "main": [
      [
        {
          "node": "Check Client Label",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check Client Label": {
    "main": [
      [
        {
          "node": "Extract Email Data",
          "type": "main",
          "index": 0
        }
      ],
      []
    ]
  },
  "Extract Email Data": {
    "main": [
      [
        {
          "node": "Send to Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Send Error Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Error Email": {
    "main": [
      [
        {
          "node": "Slack Error Notification",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:52:42.792Z] [CONSOLE] 
Connections: {
  "Gmail Trigger": {
    "main": [
      [
        {
          "node": "Check Client Label",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check Client Label": {
    "main": [
      [
        {
          "node": "Extract Email Data",
          "type": "main",
          "index": 0
        }
      ],
      []
    ]
  },
  "Extract Email Data": {
    "main": [
      [
        {
          "node": "Send to Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Send Error Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Error Email": {
    "main": [
      [
        {
          "node": "Slack Error Notification",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:52:42.792Z] [CONSOLE] 
Connections: {
  "Gmail Trigger": {
    "main": [
      [
        {
          "node": "Check Client Label",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check Client Label": {
    "main": [
      [
        {
          "node": "Extract Email Data",
          "type": "main",
          "index": 0
        }
      ],
      []
    ]
  },
  "Extract Email Data": {
    "main": [
      [
        {
          "node": "Send to Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Send Error Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Error Email": {
    "main": [
      [
        {
          "node": "Slack Error Notification",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:52:42.792Z] [CONSOLE] 
Connections: {
  "Gmail Trigger": {
    "main": [
      [
        {
          "node": "Check Client Label",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check Client Label": {
    "main": [
      [
        {
          "node": "Extract Email Data",
          "type": "main",
          "index": 0
        }
      ],
      []
    ]
  },
  "Extract Email Data": {
    "main": [
      [
        {
          "node": "Send to Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Send Error Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Error Email": {
    "main": [
      [
        {
          "node": "Slack Error Notification",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:52:42.792Z] [CONSOLE] 
Connections: {
  "Gmail Trigger": {
    "main": [
      [
        {
          "node": "Check Client Label",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check Client Label": {
    "main": [
      [
        {
          "node": "Extract Email Data",
          "type": "main",
          "index": 0
        }
      ],
      []
    ]
  },
  "Extract Email Data": {
    "main": [
      [
        {
          "node": "Send to Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Send Error Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Error Email": {
    "main": [
      [
        {
          "node": "Slack Error Notification",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:52:42.792Z] [CONSOLE] 
Connections: {
  "Gmail Trigger": {
    "main": [
      [
        {
          "node": "Check Client Label",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check Client Label": {
    "main": [
      [
        {
          "node": "Extract Email Data",
          "type": "main",
          "index": 0
        }
      ],
      []
    ]
  },
  "Extract Email Data": {
    "main": [
      [
        {
          "node": "Send to Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Send Error Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Error Email": {
    "main": [
      [
        {
          "node": "Slack Error Notification",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:52:42.792Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "error_handler_001",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:52:42.792Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "error_handler_001",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:52:42.793Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "error_handler_001",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:52:42.793Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "error_handler_001",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:52:42.793Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "error_handler_001",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:52:42.793Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "error_handler_001",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:52:42.793Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "error_handler_001",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:52:42.793Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "error_handler_001",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:52:42.793Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "error_handler_001",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:52:42.793Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "error_handler_001",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:52:42.793Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "error_handler_001",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:52:42.793Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:52:42.793Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:52:42.793Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:52:42.793Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:52:42.793Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:52:42.793Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:52:42.793Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:52:42.793Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:52:42.793Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:52:42.793Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:52:42.793Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:52:42.793Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:52:42.793Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:52:42.794Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:52:42.794Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:52:42.794Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:52:42.794Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:52:42.794Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:52:42.794Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:52:42.794Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:52:42.794Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:52:42.794Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:52:42.795Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:52:42.795Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:52:42.795Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:52:42.795Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:52:42.795Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:52:42.795Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:52:42.795Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:52:42.795Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:52:42.795Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:52:42.795Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:52:42.795Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:52:42.795Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:52:42.795Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:52:42.795Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:52:42.795Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:52:42.795Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:52:42.795Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:52:42.795Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:52:42.796Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:52:42.796Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:52:42.796Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:52:42.797Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:52:42.814Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:52:42.815Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:52:42.821Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:52:42.822Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:52:42.824Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:52:42.824Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:52:42.824Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:52:42.824Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:52:42.824Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:52:42.824Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:52:42.825Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:52:42.825Z] [INFO] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:52:42.826Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:52:42.826Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:52:42.826Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:52:42.826Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:52:42.826Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:52:42.826Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:52:42.826Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:52:42.826Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:52:42.826Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:52:42.826Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:52:42.826Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:52:42.827Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:52:42.827Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:52:42.827Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:52:42.827Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:52:42.827Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:52:42.827Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:52:42.827Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:52:42.827Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:52:42.827Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:52:42.827Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:52:42.827Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:52:42.827Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:42.827Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:42.827Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:42.827Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:42.827Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:42.827Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:42.827Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:42.827Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:42.827Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:42.827Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:42.827Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:42.827Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:42.827Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:42.827Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:42.827Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:42.827Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:42.827Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:42.827Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:42.828Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:42.828Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:42.828Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:42.828Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:42.828Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:42.828Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:42.828Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:42.828Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:42.828Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:42.828Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:42.828Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:42.828Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:42.828Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:42.828Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:42.828Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:42.828Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:42.828Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:42.828Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:42.828Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:42.828Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:42.828Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:42.828Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:42.828Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:42.828Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:42.828Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:42.828Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:42.828Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:42.828Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:42.828Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:42.829Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:42.829Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:42.829Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:42.829Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:42.829Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:42.829Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:42.829Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:42.829Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:42.829Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:52:42.829Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:52:42.829Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:52:42.829Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:52:42.829Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:52:42.829Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:52:42.829Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:52:42.829Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:52:42.829Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:52:42.829Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:52:42.829Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:52:42.829Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:52:42.829Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:52:42.829Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:52:42.830Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:52:42.830Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:52:42.830Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:52:42.830Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:52:42.830Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:52:42.830Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:52:42.830Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:52:42.830Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:52:42.830Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:52:42.830Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:52:42.831Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:52:42.831Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:52:42.831Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:52:42.831Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:52:42.831Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:52:42.831Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:52:42.831Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:52:42.831Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:52:42.831Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:52:42.832Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:52:42.832Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:52:42.832Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:52:42.832Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:52:42.832Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:52:42.832Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:52:42.836Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:52:42.837Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:52:42.837Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:52:42.837Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:52:42.837Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:52:42.837Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:52:42.837Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:52:42.837Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:52:42.837Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:52:42.837Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:52:42.837Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:52:42.837Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:52:42.837Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:52:42.837Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:52:42.837Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:52:42.838Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:52:42.838Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:52:42.838Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:52:42.838Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:52:42.838Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:52:42.838Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:52:42.838Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:52:42.838Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:52:42.838Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:52:42.838Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:52:42.838Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:52:42.838Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:52:42.838Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:52:42.838Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:52:42.838Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:52:42.838Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:52:42.838Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:52:42.838Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:52:42.838Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:52:42.838Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:52:42.838Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:52:42.838Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:52:42.838Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:52:42.838Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:52:42.838Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:52:42.838Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:52:42.838Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:52:42.838Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:52:42.838Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:52:42.838Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:52:42.838Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:52:42.838Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:52:42.839Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:52:42.839Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:52:42.839Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:52:42.839Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:52:42.839Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:52:42.839Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:52:42.839Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:52:42.839Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:52:42.839Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:52:42.839Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:52:42.839Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:52:42.839Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:52:42.839Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:52:42.839Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:52:42.839Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:52:42.839Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:52:42.839Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:52:42.839Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:52:42.839Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:52:42.840Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:52:42.840Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:52:42.840Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:52:42.840Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:52:42.840Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:52:42.840Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333162840",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "labelIds": [
          "LABEL_0",
          "INBOX"
        ],
        "includeAttachments": false
      }
    },
    {
      "id": "if_node_001",
      "name": "Check Client Label",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "set_node_001",
      "name": "Extract Email Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "senderName",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.split('<')[0].trim()}}"
            },
            {
              "name": "senderEmail",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.match(/<(.+)>/)?.[1] || $json[\"payload\"][\"headers\"].find(header => header.name === 'From').value}}"
            },
            {
              "name": "subject",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'Subject').value}}"
            }
          ]
        }
      }
    },
    {
      "id": "slack_001",
      "name": "Send to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        850,
        200
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#client-updates",
        "text": "New client email from: {{$json.senderName}} - Subject: {{$json[\"headers\"][\"subject\"]}}"
      }
    },
    {
      "id": "error_handler_001",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ]
    },
    {
      "id": "email_error_001",
      "name": "Send Error Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        450,
        500
      ],
      "parameters": {
        "fromEmail": "automation@company.com",
        "toEmail": "john@company.com",
        "subject": "Client Email Workflow Error",
        "text": "=Error in Client Email to Slack workflow:\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}\n\nPlease check the workflow execution."
      }
    },
    {
      "id": "slack_error_001",
      "name": "Slack Error Notification",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        650,
        500
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#automation-errors",
        "text": "⚠️ Client Email Workflow Error\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}"
      }
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Check Client Label",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Client Label": {
      "main": [
        [
          {
            "node": "Extract Email Data",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Extract Email Data": {
      "main": [
        [
          {
            "node": "Send to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Send Error Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Error Email": {
      "main": [
        [
          {
            "node": "Slack Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:52:42.840Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333162840",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "labelIds": [
          "LABEL_0",
          "INBOX"
        ],
        "includeAttachments": false
      }
    },
    {
      "id": "if_node_001",
      "name": "Check Client Label",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "set_node_001",
      "name": "Extract Email Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "senderName",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.split('<')[0].trim()}}"
            },
            {
              "name": "senderEmail",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.match(/<(.+)>/)?.[1] || $json[\"payload\"][\"headers\"].find(header => header.name === 'From').value}}"
            },
            {
              "name": "subject",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'Subject').value}}"
            }
          ]
        }
      }
    },
    {
      "id": "slack_001",
      "name": "Send to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        850,
        200
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#client-updates",
        "text": "New client email from: {{$json.senderName}} - Subject: {{$json[\"headers\"][\"subject\"]}}"
      }
    },
    {
      "id": "error_handler_001",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ]
    },
    {
      "id": "email_error_001",
      "name": "Send Error Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        450,
        500
      ],
      "parameters": {
        "fromEmail": "automation@company.com",
        "toEmail": "john@company.com",
        "subject": "Client Email Workflow Error",
        "text": "=Error in Client Email to Slack workflow:\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}\n\nPlease check the workflow execution."
      }
    },
    {
      "id": "slack_error_001",
      "name": "Slack Error Notification",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        650,
        500
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#automation-errors",
        "text": "⚠️ Client Email Workflow Error\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}"
      }
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Check Client Label",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Client Label": {
      "main": [
        [
          {
            "node": "Extract Email Data",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Extract Email Data": {
      "main": [
        [
          {
            "node": "Send to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Send Error Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Error Email": {
      "main": [
        [
          {
            "node": "Slack Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:52:42.840Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333162840",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "labelIds": [
          "LABEL_0",
          "INBOX"
        ],
        "includeAttachments": false
      }
    },
    {
      "id": "if_node_001",
      "name": "Check Client Label",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "set_node_001",
      "name": "Extract Email Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "senderName",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.split('<')[0].trim()}}"
            },
            {
              "name": "senderEmail",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.match(/<(.+)>/)?.[1] || $json[\"payload\"][\"headers\"].find(header => header.name === 'From').value}}"
            },
            {
              "name": "subject",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'Subject').value}}"
            }
          ]
        }
      }
    },
    {
      "id": "slack_001",
      "name": "Send to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        850,
        200
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#client-updates",
        "text": "New client email from: {{$json.senderName}} - Subject: {{$json[\"headers\"][\"subject\"]}}"
      }
    },
    {
      "id": "error_handler_001",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ]
    },
    {
      "id": "email_error_001",
      "name": "Send Error Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        450,
        500
      ],
      "parameters": {
        "fromEmail": "automation@company.com",
        "toEmail": "john@company.com",
        "subject": "Client Email Workflow Error",
        "text": "=Error in Client Email to Slack workflow:\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}\n\nPlease check the workflow execution."
      }
    },
    {
      "id": "slack_error_001",
      "name": "Slack Error Notification",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        650,
        500
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#automation-errors",
        "text": "⚠️ Client Email Workflow Error\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}"
      }
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Check Client Label",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Client Label": {
      "main": [
        [
          {
            "node": "Extract Email Data",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Extract Email Data": {
      "main": [
        [
          {
            "node": "Send to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Send Error Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Error Email": {
      "main": [
        [
          {
            "node": "Slack Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:52:42.840Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333162840",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "labelIds": [
          "LABEL_0",
          "INBOX"
        ],
        "includeAttachments": false
      }
    },
    {
      "id": "if_node_001",
      "name": "Check Client Label",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "set_node_001",
      "name": "Extract Email Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "senderName",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.split('<')[0].trim()}}"
            },
            {
              "name": "senderEmail",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.match(/<(.+)>/)?.[1] || $json[\"payload\"][\"headers\"].find(header => header.name === 'From').value}}"
            },
            {
              "name": "subject",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'Subject').value}}"
            }
          ]
        }
      }
    },
    {
      "id": "slack_001",
      "name": "Send to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        850,
        200
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#client-updates",
        "text": "New client email from: {{$json.senderName}} - Subject: {{$json[\"headers\"][\"subject\"]}}"
      }
    },
    {
      "id": "error_handler_001",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ]
    },
    {
      "id": "email_error_001",
      "name": "Send Error Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        450,
        500
      ],
      "parameters": {
        "fromEmail": "automation@company.com",
        "toEmail": "john@company.com",
        "subject": "Client Email Workflow Error",
        "text": "=Error in Client Email to Slack workflow:\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}\n\nPlease check the workflow execution."
      }
    },
    {
      "id": "slack_error_001",
      "name": "Slack Error Notification",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        650,
        500
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#automation-errors",
        "text": "⚠️ Client Email Workflow Error\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}"
      }
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Check Client Label",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Client Label": {
      "main": [
        [
          {
            "node": "Extract Email Data",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Extract Email Data": {
      "main": [
        [
          {
            "node": "Send to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Send Error Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Error Email": {
      "main": [
        [
          {
            "node": "Slack Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:52:42.840Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333162840",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "labelIds": [
          "LABEL_0",
          "INBOX"
        ],
        "includeAttachments": false
      }
    },
    {
      "id": "if_node_001",
      "name": "Check Client Label",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "set_node_001",
      "name": "Extract Email Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "senderName",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.split('<')[0].trim()}}"
            },
            {
              "name": "senderEmail",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.match(/<(.+)>/)?.[1] || $json[\"payload\"][\"headers\"].find(header => header.name === 'From').value}}"
            },
            {
              "name": "subject",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'Subject').value}}"
            }
          ]
        }
      }
    },
    {
      "id": "slack_001",
      "name": "Send to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        850,
        200
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#client-updates",
        "text": "New client email from: {{$json.senderName}} - Subject: {{$json[\"headers\"][\"subject\"]}}"
      }
    },
    {
      "id": "error_handler_001",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ]
    },
    {
      "id": "email_error_001",
      "name": "Send Error Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        450,
        500
      ],
      "parameters": {
        "fromEmail": "automation@company.com",
        "toEmail": "john@company.com",
        "subject": "Client Email Workflow Error",
        "text": "=Error in Client Email to Slack workflow:\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}\n\nPlease check the workflow execution."
      }
    },
    {
      "id": "slack_error_001",
      "name": "Slack Error Notification",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        650,
        500
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#automation-errors",
        "text": "⚠️ Client Email Workflow Error\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}"
      }
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Check Client Label",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Client Label": {
      "main": [
        [
          {
            "node": "Extract Email Data",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Extract Email Data": {
      "main": [
        [
          {
            "node": "Send to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Send Error Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Error Email": {
      "main": [
        [
          {
            "node": "Slack Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:52:42.840Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333162840",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "labelIds": [
          "LABEL_0",
          "INBOX"
        ],
        "includeAttachments": false
      }
    },
    {
      "id": "if_node_001",
      "name": "Check Client Label",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "set_node_001",
      "name": "Extract Email Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "senderName",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.split('<')[0].trim()}}"
            },
            {
              "name": "senderEmail",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.match(/<(.+)>/)?.[1] || $json[\"payload\"][\"headers\"].find(header => header.name === 'From').value}}"
            },
            {
              "name": "subject",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'Subject').value}}"
            }
          ]
        }
      }
    },
    {
      "id": "slack_001",
      "name": "Send to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        850,
        200
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#client-updates",
        "text": "New client email from: {{$json.senderName}} - Subject: {{$json[\"headers\"][\"subject\"]}}"
      }
    },
    {
      "id": "error_handler_001",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ]
    },
    {
      "id": "email_error_001",
      "name": "Send Error Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        450,
        500
      ],
      "parameters": {
        "fromEmail": "automation@company.com",
        "toEmail": "john@company.com",
        "subject": "Client Email Workflow Error",
        "text": "=Error in Client Email to Slack workflow:\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}\n\nPlease check the workflow execution."
      }
    },
    {
      "id": "slack_error_001",
      "name": "Slack Error Notification",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        650,
        500
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#automation-errors",
        "text": "⚠️ Client Email Workflow Error\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}"
      }
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Check Client Label",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Client Label": {
      "main": [
        [
          {
            "node": "Extract Email Data",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Extract Email Data": {
      "main": [
        [
          {
            "node": "Send to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Send Error Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Error Email": {
      "main": [
        [
          {
            "node": "Slack Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:52:42.840Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333162840",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "labelIds": [
          "LABEL_0",
          "INBOX"
        ],
        "includeAttachments": false
      }
    },
    {
      "id": "if_node_001",
      "name": "Check Client Label",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "set_node_001",
      "name": "Extract Email Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "senderName",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.split('<')[0].trim()}}"
            },
            {
              "name": "senderEmail",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.match(/<(.+)>/)?.[1] || $json[\"payload\"][\"headers\"].find(header => header.name === 'From').value}}"
            },
            {
              "name": "subject",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'Subject').value}}"
            }
          ]
        }
      }
    },
    {
      "id": "slack_001",
      "name": "Send to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        850,
        200
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#client-updates",
        "text": "New client email from: {{$json.senderName}} - Subject: {{$json[\"headers\"][\"subject\"]}}"
      }
    },
    {
      "id": "error_handler_001",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ]
    },
    {
      "id": "email_error_001",
      "name": "Send Error Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        450,
        500
      ],
      "parameters": {
        "fromEmail": "automation@company.com",
        "toEmail": "john@company.com",
        "subject": "Client Email Workflow Error",
        "text": "=Error in Client Email to Slack workflow:\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}\n\nPlease check the workflow execution."
      }
    },
    {
      "id": "slack_error_001",
      "name": "Slack Error Notification",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        650,
        500
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#automation-errors",
        "text": "⚠️ Client Email Workflow Error\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}"
      }
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Check Client Label",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Client Label": {
      "main": [
        [
          {
            "node": "Extract Email Data",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Extract Email Data": {
      "main": [
        [
          {
            "node": "Send to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Send Error Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Error Email": {
      "main": [
        [
          {
            "node": "Slack Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:52:42.840Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333162840",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "labelIds": [
          "LABEL_0",
          "INBOX"
        ],
        "includeAttachments": false
      }
    },
    {
      "id": "if_node_001",
      "name": "Check Client Label",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "set_node_001",
      "name": "Extract Email Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "senderName",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.split('<')[0].trim()}}"
            },
            {
              "name": "senderEmail",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.match(/<(.+)>/)?.[1] || $json[\"payload\"][\"headers\"].find(header => header.name === 'From').value}}"
            },
            {
              "name": "subject",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'Subject').value}}"
            }
          ]
        }
      }
    },
    {
      "id": "slack_001",
      "name": "Send to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        850,
        200
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#client-updates",
        "text": "New client email from: {{$json.senderName}} - Subject: {{$json[\"headers\"][\"subject\"]}}"
      }
    },
    {
      "id": "error_handler_001",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ]
    },
    {
      "id": "email_error_001",
      "name": "Send Error Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        450,
        500
      ],
      "parameters": {
        "fromEmail": "automation@company.com",
        "toEmail": "john@company.com",
        "subject": "Client Email Workflow Error",
        "text": "=Error in Client Email to Slack workflow:\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}\n\nPlease check the workflow execution."
      }
    },
    {
      "id": "slack_error_001",
      "name": "Slack Error Notification",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        650,
        500
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#automation-errors",
        "text": "⚠️ Client Email Workflow Error\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}"
      }
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Check Client Label",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Client Label": {
      "main": [
        [
          {
            "node": "Extract Email Data",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Extract Email Data": {
      "main": [
        [
          {
            "node": "Send to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Send Error Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Error Email": {
      "main": [
        [
          {
            "node": "Slack Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:52:42.840Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333162840",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "labelIds": [
          "LABEL_0",
          "INBOX"
        ],
        "includeAttachments": false
      }
    },
    {
      "id": "if_node_001",
      "name": "Check Client Label",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "set_node_001",
      "name": "Extract Email Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "senderName",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.split('<')[0].trim()}}"
            },
            {
              "name": "senderEmail",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.match(/<(.+)>/)?.[1] || $json[\"payload\"][\"headers\"].find(header => header.name === 'From').value}}"
            },
            {
              "name": "subject",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'Subject').value}}"
            }
          ]
        }
      }
    },
    {
      "id": "slack_001",
      "name": "Send to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        850,
        200
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#client-updates",
        "text": "New client email from: {{$json.senderName}} - Subject: {{$json[\"headers\"][\"subject\"]}}"
      }
    },
    {
      "id": "error_handler_001",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ]
    },
    {
      "id": "email_error_001",
      "name": "Send Error Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        450,
        500
      ],
      "parameters": {
        "fromEmail": "automation@company.com",
        "toEmail": "john@company.com",
        "subject": "Client Email Workflow Error",
        "text": "=Error in Client Email to Slack workflow:\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}\n\nPlease check the workflow execution."
      }
    },
    {
      "id": "slack_error_001",
      "name": "Slack Error Notification",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        650,
        500
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#automation-errors",
        "text": "⚠️ Client Email Workflow Error\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}"
      }
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Check Client Label",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Client Label": {
      "main": [
        [
          {
            "node": "Extract Email Data",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Extract Email Data": {
      "main": [
        [
          {
            "node": "Send to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Send Error Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Error Email": {
      "main": [
        [
          {
            "node": "Slack Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:52:42.840Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333162840",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "labelIds": [
          "LABEL_0",
          "INBOX"
        ],
        "includeAttachments": false
      }
    },
    {
      "id": "if_node_001",
      "name": "Check Client Label",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "set_node_001",
      "name": "Extract Email Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "senderName",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.split('<')[0].trim()}}"
            },
            {
              "name": "senderEmail",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.match(/<(.+)>/)?.[1] || $json[\"payload\"][\"headers\"].find(header => header.name === 'From').value}}"
            },
            {
              "name": "subject",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'Subject').value}}"
            }
          ]
        }
      }
    },
    {
      "id": "slack_001",
      "name": "Send to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        850,
        200
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#client-updates",
        "text": "New client email from: {{$json.senderName}} - Subject: {{$json[\"headers\"][\"subject\"]}}"
      }
    },
    {
      "id": "error_handler_001",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ]
    },
    {
      "id": "email_error_001",
      "name": "Send Error Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        450,
        500
      ],
      "parameters": {
        "fromEmail": "automation@company.com",
        "toEmail": "john@company.com",
        "subject": "Client Email Workflow Error",
        "text": "=Error in Client Email to Slack workflow:\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}\n\nPlease check the workflow execution."
      }
    },
    {
      "id": "slack_error_001",
      "name": "Slack Error Notification",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        650,
        500
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#automation-errors",
        "text": "⚠️ Client Email Workflow Error\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}"
      }
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Check Client Label",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Client Label": {
      "main": [
        [
          {
            "node": "Extract Email Data",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Extract Email Data": {
      "main": [
        [
          {
            "node": "Send to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Send Error Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Error Email": {
      "main": [
        [
          {
            "node": "Slack Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:52:42.840Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333162840",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "labelIds": [
          "LABEL_0",
          "INBOX"
        ],
        "includeAttachments": false
      }
    },
    {
      "id": "if_node_001",
      "name": "Check Client Label",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "set_node_001",
      "name": "Extract Email Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "senderName",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.split('<')[0].trim()}}"
            },
            {
              "name": "senderEmail",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'From').value.match(/<(.+)>/)?.[1] || $json[\"payload\"][\"headers\"].find(header => header.name === 'From').value}}"
            },
            {
              "name": "subject",
              "value": "{{$json[\"payload\"][\"headers\"].find(header => header.name === 'Subject').value}}"
            }
          ]
        }
      }
    },
    {
      "id": "slack_001",
      "name": "Send to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        850,
        200
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#client-updates",
        "text": "New client email from: {{$json.senderName}} - Subject: {{$json[\"headers\"][\"subject\"]}}"
      }
    },
    {
      "id": "error_handler_001",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ]
    },
    {
      "id": "email_error_001",
      "name": "Send Error Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        450,
        500
      ],
      "parameters": {
        "fromEmail": "automation@company.com",
        "toEmail": "john@company.com",
        "subject": "Client Email Workflow Error",
        "text": "=Error in Client Email to Slack workflow:\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}\n\nPlease check the workflow execution."
      }
    },
    {
      "id": "slack_error_001",
      "name": "Slack Error Notification",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        650,
        500
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#automation-errors",
        "text": "⚠️ Client Email Workflow Error\n\nError: {{$json[\"error\"][\"message\"]}}\nNode: {{$json[\"error\"][\"node\"][\"name\"]}}\nTime: {{$now.format('yyyy-MM-dd HH:mm:ss')}}"
      }
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Check Client Label",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Client Label": {
      "main": [
        [
          {
            "node": "Extract Email Data",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Extract Email Data": {
      "main": [
        [
          {
            "node": "Send to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Send Error Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Error Email": {
      "main": [
        [
          {
            "node": "Slack Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:52:43.644Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:52:43.646Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:52:43.646Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:52:43.646Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:52:43.646Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:52:43.647Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:52:43.647Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:52:43.647Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:52:43.647Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:52:43.647Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:52:43.647Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:52:43.648Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:52:43.648Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:52:43.648Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:52:43.648Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:52:43.648Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:52:43.648Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:52:43.648Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:52:43.648Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:52:43.648Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:52:43.648Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:52:43.648Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:52:43.648Z] [CONSOLE] Cleanup completed
[2025-06-07T21:52:43.649Z] [CONSOLE] Cleanup completed
[2025-06-07T21:52:43.649Z] [CONSOLE] Cleanup completed
[2025-06-07T21:52:43.649Z] [CONSOLE] Cleanup completed
[2025-06-07T21:52:43.649Z] [CONSOLE] Cleanup completed
[2025-06-07T21:52:43.649Z] [CONSOLE] Cleanup completed
[2025-06-07T21:52:43.649Z] [CONSOLE] Cleanup completed
[2025-06-07T21:52:43.649Z] [CONSOLE] Cleanup completed
[2025-06-07T21:52:43.649Z] [CONSOLE] Cleanup completed
[2025-06-07T21:52:43.649Z] [CONSOLE] Cleanup completed
[2025-06-07T21:52:43.649Z] [CONSOLE] Cleanup completed
[2025-06-07T21:52:43.649Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:52:43.649Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:52:43.649Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:52:43.649Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:52:43.649Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:52:43.649Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:52:43.649Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:52:43.650Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:52:43.650Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:52:43.650Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:52:43.650Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:52:43.650Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:52:43.650Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:52:43.650Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:52:43.650Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:52:43.651Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:52:43.651Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:52:43.651Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:52:43.651Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:52:43.651Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:52:43.651Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:52:43.651Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:52:43.652Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:52:43.652Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:52:43.652Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:52:43.652Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:52:43.652Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:52:43.652Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:52:43.652Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:52:43.652Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:52:43.652Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:52:43.652Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:52:43.652Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:52:43.652Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:52:43.653Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:52:43.653Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:52:43.653Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:52:43.653Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:52:43.653Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:52:43.653Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:52:43.653Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:52:43.653Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:52:43.653Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:52:43.653Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:52:43.653Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:52:43.653Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:52:43.653Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:52:43.653Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:52:43.653Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:52:43.653Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:52:43.654Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:52:43.654Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:52:43.654Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:52:43.654Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:52:43.654Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:52:43.654Z] [CONSOLE]   * Gmail node Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.654Z] [CONSOLE]   * Gmail node Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.654Z] [CONSOLE]   * Gmail node Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.654Z] [CONSOLE]   * Gmail node Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.654Z] [CONSOLE]   * Gmail node Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.654Z] [CONSOLE]   * Gmail node Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.654Z] [CONSOLE]   * Gmail node Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.654Z] [CONSOLE]   * Gmail node Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.654Z] [CONSOLE]   * Gmail node Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.654Z] [CONSOLE]   * Gmail node Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.654Z] [CONSOLE]   * Gmail node Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.654Z] [CONSOLE]   * Slack node Send to Slack: no otherOptions field found (good)
[2025-06-07T21:52:43.654Z] [CONSOLE]   * Slack node Send to Slack: no otherOptions field found (good)
[2025-06-07T21:52:43.655Z] [CONSOLE]   * Slack node Send to Slack: no otherOptions field found (good)
[2025-06-07T21:52:43.655Z] [CONSOLE]   * Slack node Send to Slack: no otherOptions field found (good)
[2025-06-07T21:52:43.655Z] [CONSOLE]   * Slack node Send to Slack: no otherOptions field found (good)
[2025-06-07T21:52:43.655Z] [CONSOLE]   * Slack node Send to Slack: no otherOptions field found (good)
[2025-06-07T21:52:43.655Z] [CONSOLE]   * Slack node Send to Slack: no otherOptions field found (good)
[2025-06-07T21:52:43.655Z] [CONSOLE]   * Slack node Send to Slack: no otherOptions field found (good)
[2025-06-07T21:52:43.655Z] [CONSOLE]   * Slack node Send to Slack: no otherOptions field found (good)
[2025-06-07T21:52:43.655Z] [CONSOLE]   * Slack node Send to Slack: no otherOptions field found (good)
[2025-06-07T21:52:43.655Z] [CONSOLE]   * Slack node Send to Slack: no otherOptions field found (good)
[2025-06-07T21:52:43.655Z] [CONSOLE]   * Slack node Slack Error Notification: no otherOptions field found (good)
[2025-06-07T21:52:43.655Z] [CONSOLE]   * Slack node Slack Error Notification: no otherOptions field found (good)
[2025-06-07T21:52:43.655Z] [CONSOLE]   * Slack node Slack Error Notification: no otherOptions field found (good)
[2025-06-07T21:52:43.655Z] [CONSOLE]   * Slack node Slack Error Notification: no otherOptions field found (good)
[2025-06-07T21:52:43.655Z] [CONSOLE]   * Slack node Slack Error Notification: no otherOptions field found (good)
[2025-06-07T21:52:43.655Z] [CONSOLE]   * Slack node Slack Error Notification: no otherOptions field found (good)
[2025-06-07T21:52:43.655Z] [CONSOLE]   * Slack node Slack Error Notification: no otherOptions field found (good)
[2025-06-07T21:52:43.655Z] [CONSOLE]   * Slack node Slack Error Notification: no otherOptions field found (good)
[2025-06-07T21:52:43.655Z] [CONSOLE]   * Slack node Slack Error Notification: no otherOptions field found (good)
[2025-06-07T21:52:43.655Z] [CONSOLE]   * Slack node Slack Error Notification: no otherOptions field found (good)
[2025-06-07T21:52:43.655Z] [CONSOLE]   * Slack node Slack Error Notification: no otherOptions field found (good)
[2025-06-07T21:52:43.656Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:52:43.657Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:52:43.657Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:52:43.657Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:52:43.657Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:52:43.657Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:52:43.657Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:52:43.657Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:52:43.657Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:52:43.657Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:52:43.657Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:52:43.657Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:52:43.657Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:52:43.657Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:52:43.657Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:52:43.657Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:52:43.657Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:52:43.657Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:52:43.658Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:52:43.658Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:52:43.658Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:52:43.658Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:52:43.658Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:52:43.658Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:52:43.658Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:52:43.658Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:52:43.658Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:52:43.658Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:52:43.658Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:52:43.658Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:52:43.658Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:52:43.658Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:52:43.658Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:52:43.659Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:52:43.659Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:52:43.659Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:52:43.659Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:52:43.659Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:52:43.659Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:52:43.659Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:52:43.659Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:52:43.659Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:52:43.659Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:52:43.659Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:52:43.659Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:52:43.660Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:52:43.660Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:52:43.660Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:52:43.660Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:52:43.660Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:52:43.660Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:52:43.660Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:52:43.660Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:52:43.660Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:52:43.660Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:52:43.660Z] [CONSOLE]   - Has active: true
[2025-06-07T21:52:43.660Z] [CONSOLE]   - Has active: true
[2025-06-07T21:52:43.660Z] [CONSOLE]   - Has active: true
[2025-06-07T21:52:43.661Z] [CONSOLE]   - Has active: true
[2025-06-07T21:52:43.661Z] [CONSOLE]   - Has active: true
[2025-06-07T21:52:43.661Z] [CONSOLE]   - Has active: true
[2025-06-07T21:52:43.661Z] [CONSOLE]   - Has active: true
[2025-06-07T21:52:43.661Z] [CONSOLE]   - Has active: true
[2025-06-07T21:52:43.661Z] [CONSOLE]   - Has active: true
[2025-06-07T21:52:43.661Z] [CONSOLE]   - Has active: true
[2025-06-07T21:52:43.661Z] [CONSOLE]   - Has active: true
[2025-06-07T21:52:43.661Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:52:43.661Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:52:43.661Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:52:43.661Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:52:43.661Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:52:43.661Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:52:43.661Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:52:43.661Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:52:43.661Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:52:43.661Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:52:43.661Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:52:43.662Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:52:43.662Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:52:43.662Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:52:43.662Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:52:43.662Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:52:43.662Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:52:43.662Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:52:43.662Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:52:43.662Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:52:43.662Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:52:43.662Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:52:43.662Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:52:43.662Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:52:43.662Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:52:43.662Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:52:43.662Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:52:43.663Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:52:43.663Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:52:43.663Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:52:43.663Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:52:43.663Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:52:43.663Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:52:43.663Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:43.663Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:43.663Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:43.663Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:43.663Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:43.663Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:43.663Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:43.663Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:43.663Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:43.664Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:43.664Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:43.664Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:43.664Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:43.664Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:43.664Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:43.664Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:43.664Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:43.664Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:43.664Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:43.664Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:43.664Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:43.664Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:43.664Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:43.664Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:43.664Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:43.664Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:43.665Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:43.665Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:43.665Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:43.665Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:43.665Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:43.665Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:43.665Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:43.665Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:43.665Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:43.665Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:43.665Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:43.665Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:43.665Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:43.665Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:43.665Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:43.665Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:43.665Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:43.665Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:43.665Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.665Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.665Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.666Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.666Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.666Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.666Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.666Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.666Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.666Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.666Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.666Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:52:43.666Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:52:43.666Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:52:43.666Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:52:43.666Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:52:43.666Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:52:43.666Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:52:43.666Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:52:43.666Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:52:43.666Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:52:43.666Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:52:43.667Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:52:43.667Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:52:43.667Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:52:43.667Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:52:43.667Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:52:43.667Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:52:43.667Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:52:43.667Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:52:43.667Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:52:43.667Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:52:43.667Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:52:43.667Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:52:43.667Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:52:43.667Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:52:43.667Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:52:43.668Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:52:43.668Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:52:43.668Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:52:43.668Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:52:43.668Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:52:43.668Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:52:43.668Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:52:43.668Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:52:43.668Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:52:43.668Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:52:43.668Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:52:43.668Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:52:43.668Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:52:43.668Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:52:43.668Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:52:43.668Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:52:43.668Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:52:43.668Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:52:43.668Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:52:43.669Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:52:43.669Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:52:43.669Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:52:43.669Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:52:43.669Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:52:43.669Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:52:43.669Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:52:43.669Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:52:43.669Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:52:43.669Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:52:43.669Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:43.670Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:43.670Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:43.670Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:43.670Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:43.670Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:43.670Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:43.670Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:43.670Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:43.670Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:43.670Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:52:43.670Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:43.670Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:43.670Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:43.670Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:43.670Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:43.670Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:43.670Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:43.670Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:43.670Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:43.670Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:43.671Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:52:43.671Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:43.671Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:43.671Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:43.671Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:43.671Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:43.671Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:43.671Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:43.671Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:43.671Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:43.671Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:43.671Z] [CONSOLE]     * Slack Error Notification: has otherOptions = false
[2025-06-07T21:52:43.671Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:43.671Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:43.671Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:43.671Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:43.671Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:43.672Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:43.672Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:43.672Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:43.672Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:43.672Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:43.672Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:52:43.672Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.672Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.672Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.672Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.672Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.672Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.672Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.672Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.672Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.672Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.672Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:52:43.672Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:52:43.672Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:52:43.672Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:52:43.672Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:52:43.673Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:52:43.673Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:52:43.673Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:52:43.673Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:52:43.673Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:52:43.673Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:52:43.673Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:52:43.673Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Client Email to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1...
[2025-06-07T21:52:43.673Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Client Email to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1...
[2025-06-07T21:52:43.673Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Client Email to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1...
[2025-06-07T21:52:43.673Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Client Email to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1...
[2025-06-07T21:52:43.673Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Client Email to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1...
[2025-06-07T21:52:43.673Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Client Email to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1...
[2025-06-07T21:52:43.673Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Client Email to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1...
[2025-06-07T21:52:43.673Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Client Email to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1...
[2025-06-07T21:52:43.673Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Client Email to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1...
[2025-06-07T21:52:43.673Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Client Email to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1...
[2025-06-07T21:52:43.673Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Client Email to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1...
[2025-06-07T21:52:44.379Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:52:44.379Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:52:44.379Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:52:44.380Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:52:44.380Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:52:44.380Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:52:44.380Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:52:44.380Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:52:44.380Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:52:44.380Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:52:44.380Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:53:18.517Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:53:18.517Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:53:18.517Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:53:18.518Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:53:18.518Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:53:18.518Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:53:18.518Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:53:18.518Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:53:18.518Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:53:18.518Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:53:18.518Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:53:18.518Z] [INFO] 🚀 [GENERATE V2] Request received
[2025-06-07T21:53:18.520Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:53:18.520Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:53:18.520Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:53:18.520Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:53:18.520Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:53:18.520Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:53:18.520Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:53:18.520Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:53:18.520Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:53:18.520Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:53:18.520Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:53:18.520Z] [INFO] 📝 [GENERATE V2] Body parsed: {
  "input": "Send a notification to #file-alerts channel in Slack when a new file is added to my Google Drive folder 'Shared Documents' (folder ID: 1abc123def456), include the filename and file type in the message",
  "platform": "n8n",
  "complexity": "complex",
  "errorHandling": true,
  "optimization": 50,
  "provider": "claude",
  "useRAG": true,
  "validateOutput": true
}
[2025-06-07T21:53:18.521Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:53:18.521Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:53:18.521Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:53:18.521Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:53:18.521Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:53:18.521Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:53:18.521Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:53:18.521Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:53:18.521Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:53:18.521Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:53:18.521Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:53:18.521Z] [INFO] ✅ [GENERATE V2] Request validated
[2025-06-07T21:53:18.521Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:53:18.521Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:53:18.521Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:53:18.521Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:53:18.521Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:53:18.521Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:53:18.521Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:53:18.521Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:53:18.522Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:53:18.522Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:53:18.522Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:53:18.529Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:53:18.529Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:53:18.529Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:53:18.529Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:53:18.529Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:53:18.529Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:53:18.529Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:53:18.529Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:53:18.529Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:53:18.530Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:53:18.531Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:53:18.531Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:53:18.531Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:53:18.531Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:53:18.531Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:53:18.531Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:53:18.531Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:53:18.531Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:53:18.531Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:53:18.531Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:53:18.531Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:53:18.531Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:53:18.718Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:53:18.718Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:53:18.718Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:53:18.718Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:53:18.719Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:53:18.719Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:53:18.719Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:53:18.719Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:53:18.719Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:53:18.719Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:53:18.719Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:53:18.719Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:53:18.719Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:53:18.719Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:53:18.719Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:53:18.719Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:53:18.719Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:53:18.719Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:53:18.719Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:53:18.719Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:53:18.719Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:53:18.719Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:53:19.666Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1144ms
[2025-06-07T21:53:19.667Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1144ms
[2025-06-07T21:53:19.667Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1144ms
[2025-06-07T21:53:19.667Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1144ms
[2025-06-07T21:53:19.668Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1144ms
[2025-06-07T21:53:19.668Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1144ms
[2025-06-07T21:53:19.668Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1144ms
[2025-06-07T21:53:19.668Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1144ms
[2025-06-07T21:53:19.668Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1144ms
[2025-06-07T21:53:19.668Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1144ms
[2025-06-07T21:53:19.668Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1144ms
[2025-06-07T21:53:19.668Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:53:19.668Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:53:19.668Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:53:19.668Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:53:19.668Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:53:19.668Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:53:19.669Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:53:19.669Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:53:19.669Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:53:19.669Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:53:19.669Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:53:19.675Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:53:19.675Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:53:19.675Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:53:19.675Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:53:19.675Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:53:19.675Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:53:19.675Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:53:19.675Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:53:19.676Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:53:19.676Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:53:19.676Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:53:19.676Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:53:19.676Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:53:19.676Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:53:19.676Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:53:19.676Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:53:19.676Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:53:19.677Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:53:19.677Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:53:19.677Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:53:19.677Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:53:19.677Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:53:19.677Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:53:19.677Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:53:19.677Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:53:19.677Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:53:19.677Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:53:19.677Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:53:19.677Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:53:19.678Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:53:19.678Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:53:19.678Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:53:19.678Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:54:01.761Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:54:01.762Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:54:01.763Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:54:01.763Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:54:01.763Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:54:01.763Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:54:01.763Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:54:01.763Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:54:01.763Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:54:01.763Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:54:01.763Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:54:01.774Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 42097 ms
[2025-06-07T21:54:01.775Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 42097 ms
[2025-06-07T21:54:01.775Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 42097 ms
[2025-06-07T21:54:01.775Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 42097 ms
[2025-06-07T21:54:01.782Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 42097 ms
[2025-06-07T21:54:01.782Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 42097 ms
[2025-06-07T21:54:01.782Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 42097 ms
[2025-06-07T21:54:01.782Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 42097 ms
[2025-06-07T21:54:01.782Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 42097 ms
[2025-06-07T21:54:01.782Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 42097 ms
[2025-06-07T21:54:01.782Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 42097 ms
[2025-06-07T21:54:01.783Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:54:01.783Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:54:01.783Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:54:01.783Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:54:01.783Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:54:01.783Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:54:01.783Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:54:01.783Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:54:01.783Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:54:01.783Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:54:01.783Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:54:01.783Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Drive File Alert to Slack",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "{{DRIVE_CRED_ID}}",
          "name": "Google Drive account"
        }
      },
      "parameters": {
        "triggerOn": "fileCreated",
        "driveId": {
          "__rl"
[2025-06-07T21:54:01.783Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Drive File Alert to Slack",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "{{DRIVE_CRED_ID}}",
          "name": "Google Drive account"
        }
      },
      "parameters": {
        "triggerOn": "fileCreated",
        "driveId": {
          "__rl"
[2025-06-07T21:54:01.783Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Drive File Alert to Slack",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "{{DRIVE_CRED_ID}}",
          "name": "Google Drive account"
        }
      },
      "parameters": {
        "triggerOn": "fileCreated",
        "driveId": {
          "__rl"
[2025-06-07T21:54:01.783Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Drive File Alert to Slack",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "{{DRIVE_CRED_ID}}",
          "name": "Google Drive account"
        }
      },
      "parameters": {
        "triggerOn": "fileCreated",
        "driveId": {
          "__rl"
[2025-06-07T21:54:01.783Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Drive File Alert to Slack",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "{{DRIVE_CRED_ID}}",
          "name": "Google Drive account"
        }
      },
      "parameters": {
        "triggerOn": "fileCreated",
        "driveId": {
          "__rl"
[2025-06-07T21:54:01.784Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Drive File Alert to Slack",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "{{DRIVE_CRED_ID}}",
          "name": "Google Drive account"
        }
      },
      "parameters": {
        "triggerOn": "fileCreated",
        "driveId": {
          "__rl"
[2025-06-07T21:54:01.784Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Drive File Alert to Slack",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "{{DRIVE_CRED_ID}}",
          "name": "Google Drive account"
        }
      },
      "parameters": {
        "triggerOn": "fileCreated",
        "driveId": {
          "__rl"
[2025-06-07T21:54:01.784Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Drive File Alert to Slack",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "{{DRIVE_CRED_ID}}",
          "name": "Google Drive account"
        }
      },
      "parameters": {
        "triggerOn": "fileCreated",
        "driveId": {
          "__rl"
[2025-06-07T21:54:01.784Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Drive File Alert to Slack",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "{{DRIVE_CRED_ID}}",
          "name": "Google Drive account"
        }
      },
      "parameters": {
        "triggerOn": "fileCreated",
        "driveId": {
          "__rl"
[2025-06-07T21:54:01.784Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Drive File Alert to Slack",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "{{DRIVE_CRED_ID}}",
          "name": "Google Drive account"
        }
      },
      "parameters": {
        "triggerOn": "fileCreated",
        "driveId": {
          "__rl"
[2025-06-07T21:54:01.784Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Drive File Alert to Slack",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "{{DRIVE_CRED_ID}}",
          "name": "Google Drive account"
        }
      },
      "parameters": {
        "triggerOn": "fileCreated",
        "driveId": {
          "__rl"
[2025-06-07T21:54:01.785Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:54:01.789Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:54:01.789Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:54:01.790Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:54:01.790Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:54:01.790Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:54:01.790Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:54:01.790Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:54:01.790Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:54:01.790Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:54:01.790Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:54:01.790Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:54:01.790Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:54:01.790Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:54:01.790Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:54:01.791Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:54:01.791Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:54:01.791Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:54:01.791Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:54:01.794Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:54:01.794Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:54:01.794Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:54:01.794Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:54:01.795Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:54:01.795Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:54:01.795Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:54:01.795Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:54:01.795Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:54:01.795Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:54:01.795Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:54:01.795Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:54:01.795Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:54:01.795Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:54:01.795Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:54:01.795Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:54:01.795Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:54:01.795Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:54:01.796Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:54:01.796Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:54:01.796Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:54:01.796Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:54:01.796Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:54:01.796Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:54:01.796Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:54:01.796Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:54:01.796Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:54:01.796Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:54:01.796Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:54:01.796Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:54:01.796Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:54:01.796Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:54:01.796Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:54:01.796Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:54:01.796Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:54:01.797Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:54:01.797Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:01.797Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:01.797Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:01.797Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:01.797Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:01.797Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:01.797Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:01.797Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:01.797Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:01.797Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:01.797Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:01.797Z] [CONSOLE]     * Send Slack Alert: has otherOptions = true
[2025-06-07T21:54:01.797Z] [CONSOLE]     * Send Slack Alert: has otherOptions = true
[2025-06-07T21:54:01.798Z] [CONSOLE]     * Send Slack Alert: has otherOptions = true
[2025-06-07T21:54:01.798Z] [CONSOLE]     * Send Slack Alert: has otherOptions = true
[2025-06-07T21:54:01.798Z] [CONSOLE]     * Send Slack Alert: has otherOptions = true
[2025-06-07T21:54:01.798Z] [CONSOLE]     * Send Slack Alert: has otherOptions = true
[2025-06-07T21:54:01.798Z] [CONSOLE]     * Send Slack Alert: has otherOptions = true
[2025-06-07T21:54:01.798Z] [CONSOLE]     * Send Slack Alert: has otherOptions = true
[2025-06-07T21:54:01.801Z] [CONSOLE]     * Send Slack Alert: has otherOptions = true
[2025-06-07T21:54:01.801Z] [CONSOLE]     * Send Slack Alert: has otherOptions = true
[2025-06-07T21:54:01.801Z] [CONSOLE]     * Send Slack Alert: has otherOptions = true
[2025-06-07T21:54:01.801Z] [CONSOLE]     * Google Doc Alert: has otherOptions = true
[2025-06-07T21:54:01.801Z] [CONSOLE]     * Google Doc Alert: has otherOptions = true
[2025-06-07T21:54:01.801Z] [CONSOLE]     * Google Doc Alert: has otherOptions = true
[2025-06-07T21:54:01.802Z] [CONSOLE]     * Google Doc Alert: has otherOptions = true
[2025-06-07T21:54:01.802Z] [CONSOLE]     * Google Doc Alert: has otherOptions = true
[2025-06-07T21:54:01.802Z] [CONSOLE]     * Google Doc Alert: has otherOptions = true
[2025-06-07T21:54:01.802Z] [CONSOLE]     * Google Doc Alert: has otherOptions = true
[2025-06-07T21:54:01.802Z] [CONSOLE]     * Google Doc Alert: has otherOptions = true
[2025-06-07T21:54:01.802Z] [CONSOLE]     * Google Doc Alert: has otherOptions = true
[2025-06-07T21:54:01.802Z] [CONSOLE]     * Google Doc Alert: has otherOptions = true
[2025-06-07T21:54:01.802Z] [CONSOLE]     * Google Doc Alert: has otherOptions = true
[2025-06-07T21:54:01.802Z] [CONSOLE]     * Send Error Alert: has otherOptions = true
[2025-06-07T21:54:01.802Z] [CONSOLE]     * Send Error Alert: has otherOptions = true
[2025-06-07T21:54:01.802Z] [CONSOLE]     * Send Error Alert: has otherOptions = true
[2025-06-07T21:54:01.802Z] [CONSOLE]     * Send Error Alert: has otherOptions = true
[2025-06-07T21:54:01.802Z] [CONSOLE]     * Send Error Alert: has otherOptions = true
[2025-06-07T21:54:01.802Z] [CONSOLE]     * Send Error Alert: has otherOptions = true
[2025-06-07T21:54:01.802Z] [CONSOLE]     * Send Error Alert: has otherOptions = true
[2025-06-07T21:54:01.802Z] [CONSOLE]     * Send Error Alert: has otherOptions = true
[2025-06-07T21:54:01.802Z] [CONSOLE]     * Send Error Alert: has otherOptions = true
[2025-06-07T21:54:01.802Z] [CONSOLE]     * Send Error Alert: has otherOptions = true
[2025-06-07T21:54:01.802Z] [CONSOLE]     * Send Error Alert: has otherOptions = true
[2025-06-07T21:54:01.802Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:01.802Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:01.802Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:01.802Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:01.802Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:01.802Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:01.802Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:01.802Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:01.802Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:01.802Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:01.802Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:01.803Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:54:01.803Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:54:01.803Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:54:01.803Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:54:01.803Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:54:01.803Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:54:01.803Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:54:01.803Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:54:01.803Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:54:01.803Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:54:01.803Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:54:01.803Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:54:01.803Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:54:01.803Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:54:01.803Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:54:01.803Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:54:01.803Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:54:01.803Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:54:01.804Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:54:01.804Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:54:01.804Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:54:01.804Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:54:01.804Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:54:01.804Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:54:01.804Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:54:01.804Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:54:01.804Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:54:01.804Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:54:01.804Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:54:01.804Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:54:01.804Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:54:01.804Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:54:01.804Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:54:01.804Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:54:01.804Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:54:01.808Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:54:01.808Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:54:01.808Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:54:01.808Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:54:01.808Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:54:01.808Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:54:01.808Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:54:01.809Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:54:01.809Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:54:01.809Z] [INFO] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:54:01.809Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:54:01.809Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:54:01.809Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:54:01.809Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:54:01.809Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:54:01.809Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:54:01.809Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:54:01.809Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:54:01.809Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:54:01.809Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:54:01.809Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:54:01.810Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["fileType"]}} → ={{$json.fileType}}
[2025-06-07T21:54:01.810Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["fileType"]}} → ={{$json.fileType}}
[2025-06-07T21:54:01.810Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["fileType"]}} → ={{$json.fileType}}
[2025-06-07T21:54:01.810Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["fileType"]}} → ={{$json.fileType}}
[2025-06-07T21:54:01.810Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["fileType"]}} → ={{$json.fileType}}
[2025-06-07T21:54:01.810Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["fileType"]}} → ={{$json.fileType}}
[2025-06-07T21:54:01.810Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["fileType"]}} → ={{$json.fileType}}
[2025-06-07T21:54:01.810Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["fileType"]}} → ={{$json.fileType}}
[2025-06-07T21:54:01.810Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["fileType"]}} → ={{$json.fileType}}
[2025-06-07T21:54:01.810Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["fileType"]}} → ={{$json.fileType}}
[2025-06-07T21:54:01.810Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["fileType"]}} → ={{$json.fileType}}
[2025-06-07T21:54:01.810Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:54:01.810Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:54:01.810Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:54:01.810Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:54:01.810Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:54:01.811Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:54:01.811Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:54:01.811Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:54:01.811Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:54:01.811Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:54:01.811Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:54:01.811Z] [CONSOLE]   ❌ No Gmail trigger found, skipping Gmail field fixes
[2025-06-07T21:54:01.811Z] [CONSOLE]   ❌ No Gmail trigger found, skipping Gmail field fixes
[2025-06-07T21:54:01.811Z] [CONSOLE]   ❌ No Gmail trigger found, skipping Gmail field fixes
[2025-06-07T21:54:01.811Z] [CONSOLE]   ❌ No Gmail trigger found, skipping Gmail field fixes
[2025-06-07T21:54:01.811Z] [CONSOLE]   ❌ No Gmail trigger found, skipping Gmail field fixes
[2025-06-07T21:54:01.811Z] [CONSOLE]   ❌ No Gmail trigger found, skipping Gmail field fixes
[2025-06-07T21:54:01.811Z] [CONSOLE]   ❌ No Gmail trigger found, skipping Gmail field fixes
[2025-06-07T21:54:01.811Z] [CONSOLE]   ❌ No Gmail trigger found, skipping Gmail field fixes
[2025-06-07T21:54:01.811Z] [CONSOLE]   ❌ No Gmail trigger found, skipping Gmail field fixes
[2025-06-07T21:54:01.811Z] [CONSOLE]   ❌ No Gmail trigger found, skipping Gmail field fixes
[2025-06-07T21:54:01.811Z] [CONSOLE]   ❌ No Gmail trigger found, skipping Gmail field fixes
[2025-06-07T21:54:01.811Z] [CONSOLE] 🔧 Fixing IF node: Check File Type
[2025-06-07T21:54:01.811Z] [CONSOLE] 🔧 Fixing IF node: Check File Type
[2025-06-07T21:54:01.812Z] [CONSOLE] 🔧 Fixing IF node: Check File Type
[2025-06-07T21:54:01.812Z] [CONSOLE] 🔧 Fixing IF node: Check File Type
[2025-06-07T21:54:01.812Z] [CONSOLE] 🔧 Fixing IF node: Check File Type
[2025-06-07T21:54:01.812Z] [CONSOLE] 🔧 Fixing IF node: Check File Type
[2025-06-07T21:54:01.812Z] [CONSOLE] 🔧 Fixing IF node: Check File Type
[2025-06-07T21:54:01.812Z] [CONSOLE] 🔧 Fixing IF node: Check File Type
[2025-06-07T21:54:01.812Z] [CONSOLE] 🔧 Fixing IF node: Check File Type
[2025-06-07T21:54:01.812Z] [CONSOLE] 🔧 Fixing IF node: Check File Type
[2025-06-07T21:54:01.812Z] [CONSOLE] 🔧 Fixing IF node: Check File Type
[2025-06-07T21:54:01.812Z] [INFO] 🔧 Fixing IF node: Check File Type
[2025-06-07T21:54:01.812Z] [CONSOLE]   🔍 Processing condition 1: {
  "id": "condition_001",
  "leftValue": "={{$json.fileType}}",
  "rightValue": "application/vnd.google-apps",
  "operator": {
    "type": "string",
    "operation": "notContains"
  }
}
[2025-06-07T21:54:01.812Z] [CONSOLE]   🔍 Processing condition 1: {
  "id": "condition_001",
  "leftValue": "={{$json.fileType}}",
  "rightValue": "application/vnd.google-apps",
  "operator": {
    "type": "string",
    "operation": "notContains"
  }
}
[2025-06-07T21:54:01.812Z] [CONSOLE]   🔍 Processing condition 1: {
  "id": "condition_001",
  "leftValue": "={{$json.fileType}}",
  "rightValue": "application/vnd.google-apps",
  "operator": {
    "type": "string",
    "operation": "notContains"
  }
}
[2025-06-07T21:54:01.812Z] [CONSOLE]   🔍 Processing condition 1: {
  "id": "condition_001",
  "leftValue": "={{$json.fileType}}",
  "rightValue": "application/vnd.google-apps",
  "operator": {
    "type": "string",
    "operation": "notContains"
  }
}
[2025-06-07T21:54:01.812Z] [CONSOLE]   🔍 Processing condition 1: {
  "id": "condition_001",
  "leftValue": "={{$json.fileType}}",
  "rightValue": "application/vnd.google-apps",
  "operator": {
    "type": "string",
    "operation": "notContains"
  }
}
[2025-06-07T21:54:01.813Z] [CONSOLE]   🔍 Processing condition 1: {
  "id": "condition_001",
  "leftValue": "={{$json.fileType}}",
  "rightValue": "application/vnd.google-apps",
  "operator": {
    "type": "string",
    "operation": "notContains"
  }
}
[2025-06-07T21:54:01.813Z] [CONSOLE]   🔍 Processing condition 1: {
  "id": "condition_001",
  "leftValue": "={{$json.fileType}}",
  "rightValue": "application/vnd.google-apps",
  "operator": {
    "type": "string",
    "operation": "notContains"
  }
}
[2025-06-07T21:54:01.813Z] [CONSOLE]   🔍 Processing condition 1: {
  "id": "condition_001",
  "leftValue": "={{$json.fileType}}",
  "rightValue": "application/vnd.google-apps",
  "operator": {
    "type": "string",
    "operation": "notContains"
  }
}
[2025-06-07T21:54:01.813Z] [CONSOLE]   🔍 Processing condition 1: {
  "id": "condition_001",
  "leftValue": "={{$json.fileType}}",
  "rightValue": "application/vnd.google-apps",
  "operator": {
    "type": "string",
    "operation": "notContains"
  }
}
[2025-06-07T21:54:01.813Z] [CONSOLE]   🔍 Processing condition 1: {
  "id": "condition_001",
  "leftValue": "={{$json.fileType}}",
  "rightValue": "application/vnd.google-apps",
  "operator": {
    "type": "string",
    "operation": "notContains"
  }
}
[2025-06-07T21:54:01.813Z] [CONSOLE]   🔍 Processing condition 1: {
  "id": "condition_001",
  "leftValue": "={{$json.fileType}}",
  "rightValue": "application/vnd.google-apps",
  "operator": {
    "type": "string",
    "operation": "notContains"
  }
}
[2025-06-07T21:54:01.813Z] [CONSOLE]   ❌ Removing invalid "combinator" field
[2025-06-07T21:54:01.813Z] [CONSOLE]   ❌ Removing invalid "combinator" field
[2025-06-07T21:54:01.813Z] [CONSOLE]   ❌ Removing invalid "combinator" field
[2025-06-07T21:54:01.813Z] [CONSOLE]   ❌ Removing invalid "combinator" field
[2025-06-07T21:54:01.813Z] [CONSOLE]   ❌ Removing invalid "combinator" field
[2025-06-07T21:54:01.813Z] [CONSOLE]   ❌ Removing invalid "combinator" field
[2025-06-07T21:54:01.813Z] [CONSOLE]   ❌ Removing invalid "combinator" field
[2025-06-07T21:54:01.813Z] [CONSOLE]   ❌ Removing invalid "combinator" field
[2025-06-07T21:54:01.813Z] [CONSOLE]   ❌ Removing invalid "combinator" field
[2025-06-07T21:54:01.813Z] [CONSOLE]   ❌ Removing invalid "combinator" field
[2025-06-07T21:54:01.813Z] [CONSOLE]   ❌ Removing invalid "combinator" field
[2025-06-07T21:54:01.813Z] [CONSOLE]   ✅ Final IF node structure for "Check File Type": {
  "options": {
    "caseSensitive": true,
    "leftValue": "",
    "typeValidation": "strict"
  },
  "conditions": [
    {
      "leftValue": "={{$json.fileType}}",
      "rightValue": "application/vnd.google-apps",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:54:01.813Z] [CONSOLE]   ✅ Final IF node structure for "Check File Type": {
  "options": {
    "caseSensitive": true,
    "leftValue": "",
    "typeValidation": "strict"
  },
  "conditions": [
    {
      "leftValue": "={{$json.fileType}}",
      "rightValue": "application/vnd.google-apps",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:54:01.813Z] [CONSOLE]   ✅ Final IF node structure for "Check File Type": {
  "options": {
    "caseSensitive": true,
    "leftValue": "",
    "typeValidation": "strict"
  },
  "conditions": [
    {
      "leftValue": "={{$json.fileType}}",
      "rightValue": "application/vnd.google-apps",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:54:01.813Z] [CONSOLE]   ✅ Final IF node structure for "Check File Type": {
  "options": {
    "caseSensitive": true,
    "leftValue": "",
    "typeValidation": "strict"
  },
  "conditions": [
    {
      "leftValue": "={{$json.fileType}}",
      "rightValue": "application/vnd.google-apps",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:54:01.814Z] [CONSOLE]   ✅ Final IF node structure for "Check File Type": {
  "options": {
    "caseSensitive": true,
    "leftValue": "",
    "typeValidation": "strict"
  },
  "conditions": [
    {
      "leftValue": "={{$json.fileType}}",
      "rightValue": "application/vnd.google-apps",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:54:01.814Z] [CONSOLE]   ✅ Final IF node structure for "Check File Type": {
  "options": {
    "caseSensitive": true,
    "leftValue": "",
    "typeValidation": "strict"
  },
  "conditions": [
    {
      "leftValue": "={{$json.fileType}}",
      "rightValue": "application/vnd.google-apps",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:54:01.814Z] [CONSOLE]   ✅ Final IF node structure for "Check File Type": {
  "options": {
    "caseSensitive": true,
    "leftValue": "",
    "typeValidation": "strict"
  },
  "conditions": [
    {
      "leftValue": "={{$json.fileType}}",
      "rightValue": "application/vnd.google-apps",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:54:01.814Z] [CONSOLE]   ✅ Final IF node structure for "Check File Type": {
  "options": {
    "caseSensitive": true,
    "leftValue": "",
    "typeValidation": "strict"
  },
  "conditions": [
    {
      "leftValue": "={{$json.fileType}}",
      "rightValue": "application/vnd.google-apps",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:54:01.814Z] [CONSOLE]   ✅ Final IF node structure for "Check File Type": {
  "options": {
    "caseSensitive": true,
    "leftValue": "",
    "typeValidation": "strict"
  },
  "conditions": [
    {
      "leftValue": "={{$json.fileType}}",
      "rightValue": "application/vnd.google-apps",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:54:01.814Z] [CONSOLE]   ✅ Final IF node structure for "Check File Type": {
  "options": {
    "caseSensitive": true,
    "leftValue": "",
    "typeValidation": "strict"
  },
  "conditions": [
    {
      "leftValue": "={{$json.fileType}}",
      "rightValue": "application/vnd.google-apps",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:54:01.814Z] [CONSOLE]   ✅ Final IF node structure for "Check File Type": {
  "options": {
    "caseSensitive": true,
    "leftValue": "",
    "typeValidation": "strict"
  },
  "conditions": [
    {
      "leftValue": "={{$json.fileType}}",
      "rightValue": "application/vnd.google-apps",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:54:01.814Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Send Slack Alert"
[2025-06-07T21:54:01.814Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Send Slack Alert"
[2025-06-07T21:54:01.814Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Send Slack Alert"
[2025-06-07T21:54:01.814Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Send Slack Alert"
[2025-06-07T21:54:01.814Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Send Slack Alert"
[2025-06-07T21:54:01.814Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Send Slack Alert"
[2025-06-07T21:54:01.814Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Send Slack Alert"
[2025-06-07T21:54:01.814Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Send Slack Alert"
[2025-06-07T21:54:01.814Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Send Slack Alert"
[2025-06-07T21:54:01.814Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Send Slack Alert"
[2025-06-07T21:54:01.814Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Send Slack Alert"
[2025-06-07T21:54:01.814Z] [CONSOLE] ℹ️ Processed Slack node "Send Slack Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.815Z] [CONSOLE] ℹ️ Processed Slack node "Send Slack Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.815Z] [CONSOLE] ℹ️ Processed Slack node "Send Slack Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.815Z] [CONSOLE] ℹ️ Processed Slack node "Send Slack Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.815Z] [CONSOLE] ℹ️ Processed Slack node "Send Slack Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.815Z] [CONSOLE] ℹ️ Processed Slack node "Send Slack Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.815Z] [CONSOLE] ℹ️ Processed Slack node "Send Slack Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.815Z] [CONSOLE] ℹ️ Processed Slack node "Send Slack Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.815Z] [CONSOLE] ℹ️ Processed Slack node "Send Slack Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.815Z] [CONSOLE] ℹ️ Processed Slack node "Send Slack Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.815Z] [CONSOLE] ℹ️ Processed Slack node "Send Slack Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.815Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Google Doc Alert"
[2025-06-07T21:54:01.815Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Google Doc Alert"
[2025-06-07T21:54:01.815Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Google Doc Alert"
[2025-06-07T21:54:01.815Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Google Doc Alert"
[2025-06-07T21:54:01.815Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Google Doc Alert"
[2025-06-07T21:54:01.815Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Google Doc Alert"
[2025-06-07T21:54:01.815Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Google Doc Alert"
[2025-06-07T21:54:01.815Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Google Doc Alert"
[2025-06-07T21:54:01.815Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Google Doc Alert"
[2025-06-07T21:54:01.815Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Google Doc Alert"
[2025-06-07T21:54:01.815Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Google Doc Alert"
[2025-06-07T21:54:01.815Z] [CONSOLE] ℹ️ Processed Slack node "Google Doc Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.815Z] [CONSOLE] ℹ️ Processed Slack node "Google Doc Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.815Z] [CONSOLE] ℹ️ Processed Slack node "Google Doc Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.815Z] [CONSOLE] ℹ️ Processed Slack node "Google Doc Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.815Z] [CONSOLE] ℹ️ Processed Slack node "Google Doc Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.816Z] [CONSOLE] ℹ️ Processed Slack node "Google Doc Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.816Z] [CONSOLE] ℹ️ Processed Slack node "Google Doc Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.816Z] [CONSOLE] ℹ️ Processed Slack node "Google Doc Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.816Z] [CONSOLE] ℹ️ Processed Slack node "Google Doc Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.816Z] [CONSOLE] ℹ️ Processed Slack node "Google Doc Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.816Z] [CONSOLE] ℹ️ Processed Slack node "Google Doc Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.816Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Send Error Alert"
[2025-06-07T21:54:01.816Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Send Error Alert"
[2025-06-07T21:54:01.816Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Send Error Alert"
[2025-06-07T21:54:01.816Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Send Error Alert"
[2025-06-07T21:54:01.816Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Send Error Alert"
[2025-06-07T21:54:01.816Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Send Error Alert"
[2025-06-07T21:54:01.816Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Send Error Alert"
[2025-06-07T21:54:01.816Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Send Error Alert"
[2025-06-07T21:54:01.816Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Send Error Alert"
[2025-06-07T21:54:01.816Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Send Error Alert"
[2025-06-07T21:54:01.816Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Send Error Alert"
[2025-06-07T21:54:01.816Z] [CONSOLE] ℹ️ Processed Slack node "Send Error Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.816Z] [CONSOLE] ℹ️ Processed Slack node "Send Error Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.816Z] [CONSOLE] ℹ️ Processed Slack node "Send Error Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.816Z] [CONSOLE] ℹ️ Processed Slack node "Send Error Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.816Z] [CONSOLE] ℹ️ Processed Slack node "Send Error Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.816Z] [CONSOLE] ℹ️ Processed Slack node "Send Error Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.816Z] [CONSOLE] ℹ️ Processed Slack node "Send Error Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.816Z] [CONSOLE] ℹ️ Processed Slack node "Send Error Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.816Z] [CONSOLE] ℹ️ Processed Slack node "Send Error Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.817Z] [CONSOLE] ℹ️ Processed Slack node "Send Error Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.817Z] [CONSOLE] ℹ️ Processed Slack node "Send Error Alert" - ensured no otherOptions field
[2025-06-07T21:54:01.817Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:54:01.817Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:54:01.817Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:54:01.817Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:54:01.817Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:54:01.817Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:54:01.817Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:54:01.817Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:54:01.817Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:54:01.817Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:54:01.817Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:54:01.817Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:54:01.817Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:54:01.817Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:54:01.817Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:54:01.817Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:54:01.817Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:54:01.817Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:54:01.817Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:54:01.817Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:54:01.817Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:54:01.817Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:54:01.817Z] [CONSOLE] 
Node 0: Google Drive Trigger (n8n-nodes-base.googleDriveTrigger)
[2025-06-07T21:54:01.818Z] [CONSOLE] 
Node 0: Google Drive Trigger (n8n-nodes-base.googleDriveTrigger)
[2025-06-07T21:54:01.818Z] [CONSOLE] 
Node 0: Google Drive Trigger (n8n-nodes-base.googleDriveTrigger)
[2025-06-07T21:54:01.818Z] [CONSOLE] 
Node 0: Google Drive Trigger (n8n-nodes-base.googleDriveTrigger)
[2025-06-07T21:54:01.818Z] [CONSOLE] 
Node 0: Google Drive Trigger (n8n-nodes-base.googleDriveTrigger)
[2025-06-07T21:54:01.818Z] [CONSOLE] 
Node 0: Google Drive Trigger (n8n-nodes-base.googleDriveTrigger)
[2025-06-07T21:54:01.818Z] [CONSOLE] 
Node 0: Google Drive Trigger (n8n-nodes-base.googleDriveTrigger)
[2025-06-07T21:54:01.818Z] [CONSOLE] 
Node 0: Google Drive Trigger (n8n-nodes-base.googleDriveTrigger)
[2025-06-07T21:54:01.818Z] [CONSOLE] 
Node 0: Google Drive Trigger (n8n-nodes-base.googleDriveTrigger)
[2025-06-07T21:54:01.818Z] [CONSOLE] 
Node 0: Google Drive Trigger (n8n-nodes-base.googleDriveTrigger)
[2025-06-07T21:54:01.818Z] [CONSOLE] 
Node 0: Google Drive Trigger (n8n-nodes-base.googleDriveTrigger)
[2025-06-07T21:54:01.818Z] [CONSOLE] Parameters: {
  "triggerOn": "fileCreated",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": "1abc123def456",
  "event": "fileCreated",
  "pollTimes": {
    "item": [
      {
        "mode": "everyMinute"
      }
    ]
  }
}
[2025-06-07T21:54:01.818Z] [CONSOLE] Parameters: {
  "triggerOn": "fileCreated",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": "1abc123def456",
  "event": "fileCreated",
  "pollTimes": {
    "item": [
      {
        "mode": "everyMinute"
      }
    ]
  }
}
[2025-06-07T21:54:01.818Z] [CONSOLE] Parameters: {
  "triggerOn": "fileCreated",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": "1abc123def456",
  "event": "fileCreated",
  "pollTimes": {
    "item": [
      {
        "mode": "everyMinute"
      }
    ]
  }
}
[2025-06-07T21:54:01.818Z] [CONSOLE] Parameters: {
  "triggerOn": "fileCreated",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": "1abc123def456",
  "event": "fileCreated",
  "pollTimes": {
    "item": [
      {
        "mode": "everyMinute"
      }
    ]
  }
}
[2025-06-07T21:54:01.818Z] [CONSOLE] Parameters: {
  "triggerOn": "fileCreated",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": "1abc123def456",
  "event": "fileCreated",
  "pollTimes": {
    "item": [
      {
        "mode": "everyMinute"
      }
    ]
  }
}
[2025-06-07T21:54:01.818Z] [CONSOLE] Parameters: {
  "triggerOn": "fileCreated",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": "1abc123def456",
  "event": "fileCreated",
  "pollTimes": {
    "item": [
      {
        "mode": "everyMinute"
      }
    ]
  }
}
[2025-06-07T21:54:01.818Z] [CONSOLE] Parameters: {
  "triggerOn": "fileCreated",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": "1abc123def456",
  "event": "fileCreated",
  "pollTimes": {
    "item": [
      {
        "mode": "everyMinute"
      }
    ]
  }
}
[2025-06-07T21:54:01.818Z] [CONSOLE] Parameters: {
  "triggerOn": "fileCreated",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": "1abc123def456",
  "event": "fileCreated",
  "pollTimes": {
    "item": [
      {
        "mode": "everyMinute"
      }
    ]
  }
}
[2025-06-07T21:54:01.818Z] [CONSOLE] Parameters: {
  "triggerOn": "fileCreated",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": "1abc123def456",
  "event": "fileCreated",
  "pollTimes": {
    "item": [
      {
        "mode": "everyMinute"
      }
    ]
  }
}
[2025-06-07T21:54:01.818Z] [CONSOLE] Parameters: {
  "triggerOn": "fileCreated",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": "1abc123def456",
  "event": "fileCreated",
  "pollTimes": {
    "item": [
      {
        "mode": "everyMinute"
      }
    ]
  }
}
[2025-06-07T21:54:01.818Z] [CONSOLE] Parameters: {
  "triggerOn": "fileCreated",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": "1abc123def456",
  "event": "fileCreated",
  "pollTimes": {
    "item": [
      {
        "mode": "everyMinute"
      }
    ]
  }
}
[2025-06-07T21:54:01.818Z] [CONSOLE] 
Node 1: Format File Info (n8n-nodes-base.set)
[2025-06-07T21:54:01.818Z] [CONSOLE] 
Node 1: Format File Info (n8n-nodes-base.set)
[2025-06-07T21:54:01.818Z] [CONSOLE] 
Node 1: Format File Info (n8n-nodes-base.set)
[2025-06-07T21:54:01.818Z] [CONSOLE] 
Node 1: Format File Info (n8n-nodes-base.set)
[2025-06-07T21:54:01.819Z] [CONSOLE] 
Node 1: Format File Info (n8n-nodes-base.set)
[2025-06-07T21:54:01.819Z] [CONSOLE] 
Node 1: Format File Info (n8n-nodes-base.set)
[2025-06-07T21:54:01.819Z] [CONSOLE] 
Node 1: Format File Info (n8n-nodes-base.set)
[2025-06-07T21:54:01.819Z] [CONSOLE] 
Node 1: Format File Info (n8n-nodes-base.set)
[2025-06-07T21:54:01.819Z] [CONSOLE] 
Node 1: Format File Info (n8n-nodes-base.set)
[2025-06-07T21:54:01.819Z] [CONSOLE] 
Node 1: Format File Info (n8n-nodes-base.set)
[2025-06-07T21:54:01.819Z] [CONSOLE] 
Node 1: Format File Info (n8n-nodes-base.set)
[2025-06-07T21:54:01.819Z] [CONSOLE] Parameters: {
  "mode": "manual",
  "duplicateItem": false,
  "fields": {
    "values": [
      {
        "name": "fileName",
        "type": "string",
        "value": "={{$json.name}}"
      },
      {
        "name": "fileType",
        "type": "string",
        "value": "={{$json.mimeType}}"
      },
      {
        "name": "fileId",
        "type": "string",
        "value": "={{$json.id}}"
      },
      {
        "name": "createdTime",
        "type": "string",
        "value": "={{$json.createdTime}}"
      },
      {
        "name": "webViewLink",
        "type": "string",
        "value": "={{$json.webViewLink}}"
      }
    ]
  },
  "values": {
    "string": [
      {
        "name": "success",
        "value": "true"
      }
    ]
  }
}
[2025-06-07T21:54:01.819Z] [CONSOLE] Parameters: {
  "mode": "manual",
  "duplicateItem": false,
  "fields": {
    "values": [
      {
        "name": "fileName",
        "type": "string",
        "value": "={{$json.name}}"
      },
      {
        "name": "fileType",
        "type": "string",
        "value": "={{$json.mimeType}}"
      },
      {
        "name": "fileId",
        "type": "string",
        "value": "={{$json.id}}"
      },
      {
        "name": "createdTime",
        "type": "string",
        "value": "={{$json.createdTime}}"
      },
      {
        "name": "webViewLink",
        "type": "string",
        "value": "={{$json.webViewLink}}"
      }
    ]
  },
  "values": {
    "string": [
      {
        "name": "success",
        "value": "true"
      }
    ]
  }
}
[2025-06-07T21:54:01.819Z] [CONSOLE] Parameters: {
  "mode": "manual",
  "duplicateItem": false,
  "fields": {
    "values": [
      {
        "name": "fileName",
        "type": "string",
        "value": "={{$json.name}}"
      },
      {
        "name": "fileType",
        "type": "string",
        "value": "={{$json.mimeType}}"
      },
      {
        "name": "fileId",
        "type": "string",
        "value": "={{$json.id}}"
      },
      {
        "name": "createdTime",
        "type": "string",
        "value": "={{$json.createdTime}}"
      },
      {
        "name": "webViewLink",
        "type": "string",
        "value": "={{$json.webViewLink}}"
      }
    ]
  },
  "values": {
    "string": [
      {
        "name": "success",
        "value": "true"
      }
    ]
  }
}
[2025-06-07T21:54:01.819Z] [CONSOLE] Parameters: {
  "mode": "manual",
  "duplicateItem": false,
  "fields": {
    "values": [
      {
        "name": "fileName",
        "type": "string",
        "value": "={{$json.name}}"
      },
      {
        "name": "fileType",
        "type": "string",
        "value": "={{$json.mimeType}}"
      },
      {
        "name": "fileId",
        "type": "string",
        "value": "={{$json.id}}"
      },
      {
        "name": "createdTime",
        "type": "string",
        "value": "={{$json.createdTime}}"
      },
      {
        "name": "webViewLink",
        "type": "string",
        "value": "={{$json.webViewLink}}"
      }
    ]
  },
  "values": {
    "string": [
      {
        "name": "success",
        "value": "true"
      }
    ]
  }
}
[2025-06-07T21:54:01.819Z] [CONSOLE] Parameters: {
  "mode": "manual",
  "duplicateItem": false,
  "fields": {
    "values": [
      {
        "name": "fileName",
        "type": "string",
        "value": "={{$json.name}}"
      },
      {
        "name": "fileType",
        "type": "string",
        "value": "={{$json.mimeType}}"
      },
      {
        "name": "fileId",
        "type": "string",
        "value": "={{$json.id}}"
      },
      {
        "name": "createdTime",
        "type": "string",
        "value": "={{$json.createdTime}}"
      },
      {
        "name": "webViewLink",
        "type": "string",
        "value": "={{$json.webViewLink}}"
      }
    ]
  },
  "values": {
    "string": [
      {
        "name": "success",
        "value": "true"
      }
    ]
  }
}
[2025-06-07T21:54:01.819Z] [CONSOLE] Parameters: {
  "mode": "manual",
  "duplicateItem": false,
  "fields": {
    "values": [
      {
        "name": "fileName",
        "type": "string",
        "value": "={{$json.name}}"
      },
      {
        "name": "fileType",
        "type": "string",
        "value": "={{$json.mimeType}}"
      },
      {
        "name": "fileId",
        "type": "string",
        "value": "={{$json.id}}"
      },
      {
        "name": "createdTime",
        "type": "string",
        "value": "={{$json.createdTime}}"
      },
      {
        "name": "webViewLink",
        "type": "string",
        "value": "={{$json.webViewLink}}"
      }
    ]
  },
  "values": {
    "string": [
      {
        "name": "success",
        "value": "true"
      }
    ]
  }
}
[2025-06-07T21:54:01.819Z] [CONSOLE] Parameters: {
  "mode": "manual",
  "duplicateItem": false,
  "fields": {
    "values": [
      {
        "name": "fileName",
        "type": "string",
        "value": "={{$json.name}}"
      },
      {
        "name": "fileType",
        "type": "string",
        "value": "={{$json.mimeType}}"
      },
      {
        "name": "fileId",
        "type": "string",
        "value": "={{$json.id}}"
      },
      {
        "name": "createdTime",
        "type": "string",
        "value": "={{$json.createdTime}}"
      },
      {
        "name": "webViewLink",
        "type": "string",
        "value": "={{$json.webViewLink}}"
      }
    ]
  },
  "values": {
    "string": [
      {
        "name": "success",
        "value": "true"
      }
    ]
  }
}
[2025-06-07T21:54:01.819Z] [CONSOLE] Parameters: {
  "mode": "manual",
  "duplicateItem": false,
  "fields": {
    "values": [
      {
        "name": "fileName",
        "type": "string",
        "value": "={{$json.name}}"
      },
      {
        "name": "fileType",
        "type": "string",
        "value": "={{$json.mimeType}}"
      },
      {
        "name": "fileId",
        "type": "string",
        "value": "={{$json.id}}"
      },
      {
        "name": "createdTime",
        "type": "string",
        "value": "={{$json.createdTime}}"
      },
      {
        "name": "webViewLink",
        "type": "string",
        "value": "={{$json.webViewLink}}"
      }
    ]
  },
  "values": {
    "string": [
      {
        "name": "success",
        "value": "true"
      }
    ]
  }
}
[2025-06-07T21:54:01.819Z] [CONSOLE] Parameters: {
  "mode": "manual",
  "duplicateItem": false,
  "fields": {
    "values": [
      {
        "name": "fileName",
        "type": "string",
        "value": "={{$json.name}}"
      },
      {
        "name": "fileType",
        "type": "string",
        "value": "={{$json.mimeType}}"
      },
      {
        "name": "fileId",
        "type": "string",
        "value": "={{$json.id}}"
      },
      {
        "name": "createdTime",
        "type": "string",
        "value": "={{$json.createdTime}}"
      },
      {
        "name": "webViewLink",
        "type": "string",
        "value": "={{$json.webViewLink}}"
      }
    ]
  },
  "values": {
    "string": [
      {
        "name": "success",
        "value": "true"
      }
    ]
  }
}
[2025-06-07T21:54:01.819Z] [CONSOLE] Parameters: {
  "mode": "manual",
  "duplicateItem": false,
  "fields": {
    "values": [
      {
        "name": "fileName",
        "type": "string",
        "value": "={{$json.name}}"
      },
      {
        "name": "fileType",
        "type": "string",
        "value": "={{$json.mimeType}}"
      },
      {
        "name": "fileId",
        "type": "string",
        "value": "={{$json.id}}"
      },
      {
        "name": "createdTime",
        "type": "string",
        "value": "={{$json.createdTime}}"
      },
      {
        "name": "webViewLink",
        "type": "string",
        "value": "={{$json.webViewLink}}"
      }
    ]
  },
  "values": {
    "string": [
      {
        "name": "success",
        "value": "true"
      }
    ]
  }
}
[2025-06-07T21:54:01.819Z] [CONSOLE] Parameters: {
  "mode": "manual",
  "duplicateItem": false,
  "fields": {
    "values": [
      {
        "name": "fileName",
        "type": "string",
        "value": "={{$json.name}}"
      },
      {
        "name": "fileType",
        "type": "string",
        "value": "={{$json.mimeType}}"
      },
      {
        "name": "fileId",
        "type": "string",
        "value": "={{$json.id}}"
      },
      {
        "name": "createdTime",
        "type": "string",
        "value": "={{$json.createdTime}}"
      },
      {
        "name": "webViewLink",
        "type": "string",
        "value": "={{$json.webViewLink}}"
      }
    ]
  },
  "values": {
    "string": [
      {
        "name": "success",
        "value": "true"
      }
    ]
  }
}
[2025-06-07T21:54:01.819Z] [CONSOLE] 
Node 2: Check File Type (n8n-nodes-base.if)
[2025-06-07T21:54:01.819Z] [CONSOLE] 
Node 2: Check File Type (n8n-nodes-base.if)
[2025-06-07T21:54:01.819Z] [CONSOLE] 
Node 2: Check File Type (n8n-nodes-base.if)
[2025-06-07T21:54:01.819Z] [CONSOLE] 
Node 2: Check File Type (n8n-nodes-base.if)
[2025-06-07T21:54:01.819Z] [CONSOLE] 
Node 2: Check File Type (n8n-nodes-base.if)
[2025-06-07T21:54:01.820Z] [CONSOLE] 
Node 2: Check File Type (n8n-nodes-base.if)
[2025-06-07T21:54:01.820Z] [CONSOLE] 
Node 2: Check File Type (n8n-nodes-base.if)
[2025-06-07T21:54:01.820Z] [CONSOLE] 
Node 2: Check File Type (n8n-nodes-base.if)
[2025-06-07T21:54:01.820Z] [CONSOLE] 
Node 2: Check File Type (n8n-nodes-base.if)
[2025-06-07T21:54:01.820Z] [CONSOLE] 
Node 2: Check File Type (n8n-nodes-base.if)
[2025-06-07T21:54:01.820Z] [CONSOLE] 
Node 2: Check File Type (n8n-nodes-base.if)
[2025-06-07T21:54:01.820Z] [CONSOLE] Parameters: {
  "conditions": {
    "options": {
      "caseSensitive": true,
      "leftValue": "",
      "typeValidation": "strict"
    },
    "conditions": [
      {
        "leftValue": "={{$json.fileType}}",
        "rightValue": "application/vnd.google-apps",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:54:01.820Z] [CONSOLE] Parameters: {
  "conditions": {
    "options": {
      "caseSensitive": true,
      "leftValue": "",
      "typeValidation": "strict"
    },
    "conditions": [
      {
        "leftValue": "={{$json.fileType}}",
        "rightValue": "application/vnd.google-apps",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:54:01.820Z] [CONSOLE] Parameters: {
  "conditions": {
    "options": {
      "caseSensitive": true,
      "leftValue": "",
      "typeValidation": "strict"
    },
    "conditions": [
      {
        "leftValue": "={{$json.fileType}}",
        "rightValue": "application/vnd.google-apps",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:54:01.820Z] [CONSOLE] Parameters: {
  "conditions": {
    "options": {
      "caseSensitive": true,
      "leftValue": "",
      "typeValidation": "strict"
    },
    "conditions": [
      {
        "leftValue": "={{$json.fileType}}",
        "rightValue": "application/vnd.google-apps",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:54:01.820Z] [CONSOLE] Parameters: {
  "conditions": {
    "options": {
      "caseSensitive": true,
      "leftValue": "",
      "typeValidation": "strict"
    },
    "conditions": [
      {
        "leftValue": "={{$json.fileType}}",
        "rightValue": "application/vnd.google-apps",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:54:01.820Z] [CONSOLE] Parameters: {
  "conditions": {
    "options": {
      "caseSensitive": true,
      "leftValue": "",
      "typeValidation": "strict"
    },
    "conditions": [
      {
        "leftValue": "={{$json.fileType}}",
        "rightValue": "application/vnd.google-apps",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:54:01.820Z] [CONSOLE] Parameters: {
  "conditions": {
    "options": {
      "caseSensitive": true,
      "leftValue": "",
      "typeValidation": "strict"
    },
    "conditions": [
      {
        "leftValue": "={{$json.fileType}}",
        "rightValue": "application/vnd.google-apps",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:54:01.820Z] [CONSOLE] Parameters: {
  "conditions": {
    "options": {
      "caseSensitive": true,
      "leftValue": "",
      "typeValidation": "strict"
    },
    "conditions": [
      {
        "leftValue": "={{$json.fileType}}",
        "rightValue": "application/vnd.google-apps",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:54:01.820Z] [CONSOLE] Parameters: {
  "conditions": {
    "options": {
      "caseSensitive": true,
      "leftValue": "",
      "typeValidation": "strict"
    },
    "conditions": [
      {
        "leftValue": "={{$json.fileType}}",
        "rightValue": "application/vnd.google-apps",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:54:01.820Z] [CONSOLE] Parameters: {
  "conditions": {
    "options": {
      "caseSensitive": true,
      "leftValue": "",
      "typeValidation": "strict"
    },
    "conditions": [
      {
        "leftValue": "={{$json.fileType}}",
        "rightValue": "application/vnd.google-apps",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:54:01.820Z] [CONSOLE] Parameters: {
  "conditions": {
    "options": {
      "caseSensitive": true,
      "leftValue": "",
      "typeValidation": "strict"
    },
    "conditions": [
      {
        "leftValue": "={{$json.fileType}}",
        "rightValue": "application/vnd.google-apps",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:54:01.820Z] [CONSOLE] 
Node 3: Send Slack Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.820Z] [CONSOLE] 
Node 3: Send Slack Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.820Z] [CONSOLE] 
Node 3: Send Slack Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.820Z] [CONSOLE] 
Node 3: Send Slack Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.820Z] [CONSOLE] 
Node 3: Send Slack Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.820Z] [CONSOLE] 
Node 3: Send Slack Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.820Z] [CONSOLE] 
Node 3: Send Slack Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.820Z] [CONSOLE] 
Node 3: Send Slack Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.820Z] [CONSOLE] 
Node 3: Send Slack Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.820Z] [CONSOLE] 
Node 3: Send Slack Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.820Z] [CONSOLE] 
Node 3: Send Slack Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.820Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":file_folder: New file added to Shared Documents",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.820Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":file_folder: New file added to Shared Documents",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.820Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":file_folder: New file added to Shared Documents",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.820Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":file_folder: New file added to Shared Documents",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.820Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":file_folder: New file added to Shared Documents",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.820Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":file_folder: New file added to Shared Documents",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.821Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":file_folder: New file added to Shared Documents",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.821Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":file_folder: New file added to Shared Documents",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.821Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":file_folder: New file added to Shared Documents",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.821Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":file_folder: New file added to Shared Documents",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.821Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":file_folder: New file added to Shared Documents",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.821Z] [CONSOLE] 
Node 4: Google Doc Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.821Z] [CONSOLE] 
Node 4: Google Doc Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.821Z] [CONSOLE] 
Node 4: Google Doc Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.821Z] [CONSOLE] 
Node 4: Google Doc Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.821Z] [CONSOLE] 
Node 4: Google Doc Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.821Z] [CONSOLE] 
Node 4: Google Doc Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.821Z] [CONSOLE] 
Node 4: Google Doc Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.821Z] [CONSOLE] 
Node 4: Google Doc Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.821Z] [CONSOLE] 
Node 4: Google Doc Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.821Z] [CONSOLE] 
Node 4: Google Doc Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.821Z] [CONSOLE] 
Node 4: Google Doc Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.821Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":page_facing_up: New Google Doc added to Shared Documents",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.821Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":page_facing_up: New Google Doc added to Shared Documents",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.821Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":page_facing_up: New Google Doc added to Shared Documents",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.821Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":page_facing_up: New Google Doc added to Shared Documents",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.821Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":page_facing_up: New Google Doc added to Shared Documents",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.821Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":page_facing_up: New Google Doc added to Shared Documents",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.821Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":page_facing_up: New Google Doc added to Shared Documents",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.821Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":page_facing_up: New Google Doc added to Shared Documents",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.821Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":page_facing_up: New Google Doc added to Shared Documents",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.821Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":page_facing_up: New Google Doc added to Shared Documents",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.821Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":page_facing_up: New Google Doc added to Shared Documents",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.821Z] [CONSOLE] 
Node 5: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:54:01.821Z] [CONSOLE] 
Node 5: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:54:01.821Z] [CONSOLE] 
Node 5: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:54:01.821Z] [CONSOLE] 
Node 5: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:54:01.821Z] [CONSOLE] 
Node 5: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:54:01.821Z] [CONSOLE] 
Node 5: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:54:01.821Z] [CONSOLE] 
Node 5: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:54:01.822Z] [CONSOLE] 
Node 5: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:54:01.822Z] [CONSOLE] 
Node 5: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:54:01.822Z] [CONSOLE] 
Node 5: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:54:01.822Z] [CONSOLE] 
Node 5: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:54:01.822Z] [CONSOLE] Parameters: {}
[2025-06-07T21:54:01.822Z] [CONSOLE] Parameters: {}
[2025-06-07T21:54:01.822Z] [CONSOLE] Parameters: {}
[2025-06-07T21:54:01.822Z] [CONSOLE] Parameters: {}
[2025-06-07T21:54:01.822Z] [CONSOLE] Parameters: {}
[2025-06-07T21:54:01.822Z] [CONSOLE] Parameters: {}
[2025-06-07T21:54:01.822Z] [CONSOLE] Parameters: {}
[2025-06-07T21:54:01.822Z] [CONSOLE] Parameters: {}
[2025-06-07T21:54:01.822Z] [CONSOLE] Parameters: {}
[2025-06-07T21:54:01.822Z] [CONSOLE] Parameters: {}
[2025-06-07T21:54:01.822Z] [CONSOLE] Parameters: {}
[2025-06-07T21:54:01.822Z] [CONSOLE] 
Node 6: Send Error Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.822Z] [CONSOLE] 
Node 6: Send Error Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.822Z] [CONSOLE] 
Node 6: Send Error Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.822Z] [CONSOLE] 
Node 6: Send Error Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.822Z] [CONSOLE] 
Node 6: Send Error Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.822Z] [CONSOLE] 
Node 6: Send Error Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.822Z] [CONSOLE] 
Node 6: Send Error Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.822Z] [CONSOLE] 
Node 6: Send Error Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.822Z] [CONSOLE] 
Node 6: Send Error Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.822Z] [CONSOLE] 
Node 6: Send Error Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.822Z] [CONSOLE] 
Node 6: Send Error Alert (n8n-nodes-base.slack)
[2025-06-07T21:54:01.822Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":warning: Error in Google Drive File Alert workflow",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.822Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":warning: Error in Google Drive File Alert workflow",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.822Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":warning: Error in Google Drive File Alert workflow",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.822Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":warning: Error in Google Drive File Alert workflow",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.822Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":warning: Error in Google Drive File Alert workflow",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.822Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":warning: Error in Google Drive File Alert workflow",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.822Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":warning: Error in Google Drive File Alert workflow",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.823Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":warning: Error in Google Drive File Alert workflow",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.823Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":warning: Error in Google Drive File Alert workflow",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.823Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":warning: Error in Google Drive File Alert workflow",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.823Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#file-alerts",
  "text": ":warning: Error in Google Drive File Alert workflow",
  "authentication": "accessToken"
}
[2025-06-07T21:54:01.823Z] [CONSOLE] 
Connections: {
  "Google Drive Trigger": {
    "main": [
      [
        {
          "node": "Format File Info",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Format File Info": {
    "main": [
      [
        {
          "node": "Check File Type",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check File Type": {
    "main": [
      [
        {
          "node": "Send Slack Alert",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Google Doc Alert",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Send Error Alert",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:54:01.823Z] [CONSOLE] 
Connections: {
  "Google Drive Trigger": {
    "main": [
      [
        {
          "node": "Format File Info",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Format File Info": {
    "main": [
      [
        {
          "node": "Check File Type",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check File Type": {
    "main": [
      [
        {
          "node": "Send Slack Alert",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Google Doc Alert",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Send Error Alert",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:54:01.823Z] [CONSOLE] 
Connections: {
  "Google Drive Trigger": {
    "main": [
      [
        {
          "node": "Format File Info",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Format File Info": {
    "main": [
      [
        {
          "node": "Check File Type",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check File Type": {
    "main": [
      [
        {
          "node": "Send Slack Alert",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Google Doc Alert",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Send Error Alert",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:54:01.823Z] [CONSOLE] 
Connections: {
  "Google Drive Trigger": {
    "main": [
      [
        {
          "node": "Format File Info",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Format File Info": {
    "main": [
      [
        {
          "node": "Check File Type",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check File Type": {
    "main": [
      [
        {
          "node": "Send Slack Alert",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Google Doc Alert",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Send Error Alert",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:54:01.823Z] [CONSOLE] 
Connections: {
  "Google Drive Trigger": {
    "main": [
      [
        {
          "node": "Format File Info",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Format File Info": {
    "main": [
      [
        {
          "node": "Check File Type",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check File Type": {
    "main": [
      [
        {
          "node": "Send Slack Alert",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Google Doc Alert",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Send Error Alert",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:54:01.823Z] [CONSOLE] 
Connections: {
  "Google Drive Trigger": {
    "main": [
      [
        {
          "node": "Format File Info",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Format File Info": {
    "main": [
      [
        {
          "node": "Check File Type",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check File Type": {
    "main": [
      [
        {
          "node": "Send Slack Alert",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Google Doc Alert",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Send Error Alert",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:54:01.823Z] [CONSOLE] 
Connections: {
  "Google Drive Trigger": {
    "main": [
      [
        {
          "node": "Format File Info",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Format File Info": {
    "main": [
      [
        {
          "node": "Check File Type",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check File Type": {
    "main": [
      [
        {
          "node": "Send Slack Alert",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Google Doc Alert",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Send Error Alert",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:54:01.823Z] [CONSOLE] 
Connections: {
  "Google Drive Trigger": {
    "main": [
      [
        {
          "node": "Format File Info",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Format File Info": {
    "main": [
      [
        {
          "node": "Check File Type",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check File Type": {
    "main": [
      [
        {
          "node": "Send Slack Alert",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Google Doc Alert",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Send Error Alert",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:54:01.823Z] [CONSOLE] 
Connections: {
  "Google Drive Trigger": {
    "main": [
      [
        {
          "node": "Format File Info",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Format File Info": {
    "main": [
      [
        {
          "node": "Check File Type",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check File Type": {
    "main": [
      [
        {
          "node": "Send Slack Alert",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Google Doc Alert",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Send Error Alert",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:54:01.823Z] [CONSOLE] 
Connections: {
  "Google Drive Trigger": {
    "main": [
      [
        {
          "node": "Format File Info",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Format File Info": {
    "main": [
      [
        {
          "node": "Check File Type",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check File Type": {
    "main": [
      [
        {
          "node": "Send Slack Alert",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Google Doc Alert",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Send Error Alert",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:54:01.823Z] [CONSOLE] 
Connections: {
  "Google Drive Trigger": {
    "main": [
      [
        {
          "node": "Format File Info",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Format File Info": {
    "main": [
      [
        {
          "node": "Check File Type",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check File Type": {
    "main": [
      [
        {
          "node": "Send Slack Alert",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Google Doc Alert",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Send Error Alert",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:54:01.823Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "error_handler_006",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:54:01.823Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "error_handler_006",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:54:01.823Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "error_handler_006",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:54:01.823Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "error_handler_006",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:54:01.823Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "error_handler_006",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:54:01.823Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "error_handler_006",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:54:01.823Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "error_handler_006",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:54:01.823Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "error_handler_006",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:54:01.823Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "error_handler_006",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:54:01.823Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "error_handler_006",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:54:01.823Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "error_handler_006",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:54:01.824Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:54:01.824Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:54:01.824Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:54:01.824Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:54:01.824Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:54:01.824Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:54:01.824Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:54:01.824Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:54:01.824Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:54:01.824Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:54:01.824Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:54:01.824Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:54:01.824Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:54:01.824Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:54:01.824Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:54:01.824Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:54:01.824Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:54:01.825Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:54:01.825Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:54:01.825Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:54:01.825Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:54:01.825Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:54:01.826Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:54:01.826Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:54:01.826Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:54:01.826Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:54:01.826Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:54:01.826Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:54:01.826Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:54:01.826Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:54:01.826Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:54:01.826Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:54:01.826Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:54:01.826Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:54:01.826Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:54:01.826Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:54:01.826Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:54:01.826Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:54:01.826Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:54:01.826Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:54:01.826Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:54:01.826Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:54:01.826Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:54:01.826Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:54:01.826Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:54:01.826Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:54:01.826Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:54:01.827Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:54:01.827Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:54:01.827Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:54:01.827Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:54:01.827Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:54:01.827Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:54:01.827Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:54:01.827Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:54:01.827Z] [INFO] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:54:01.827Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:54:01.827Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:54:01.827Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:54:01.827Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:54:01.827Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:54:01.827Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:54:01.827Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:54:01.827Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:54:01.827Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:54:01.827Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:54:01.827Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:54:01.827Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:54:01.827Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:54:01.827Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:54:01.827Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:54:01.827Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:54:01.827Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:54:01.827Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:54:01.827Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:54:01.827Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:54:01.827Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:54:01.827Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:54:01.827Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:01.828Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:01.828Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:01.828Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:01.828Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:01.828Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:01.828Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:01.828Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:01.828Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:01.828Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:01.828Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:01.828Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:01.828Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:01.828Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:01.828Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:01.828Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:01.828Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:01.828Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:01.828Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:01.828Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:01.828Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:01.828Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:01.828Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:01.828Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:01.828Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:01.828Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:01.828Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:01.828Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:01.828Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:01.828Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:01.828Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:01.828Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:01.828Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:01.828Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:01.829Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:01.829Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:01.829Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:01.829Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:01.829Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:01.829Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:01.829Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:01.829Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:01.829Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:01.829Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:01.829Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:01.829Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:01.829Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:01.829Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:01.829Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:01.829Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:01.829Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:01.829Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:01.829Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:01.829Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:01.829Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:01.829Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:54:01.829Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:54:01.829Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:54:01.829Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:54:01.829Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:54:01.829Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:54:01.830Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:54:01.830Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:54:01.830Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:54:01.830Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:54:01.830Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:54:01.830Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:54:01.830Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:54:01.830Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:54:01.830Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:54:01.830Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:54:01.830Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:54:01.830Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:54:01.830Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:54:01.830Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:54:01.830Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:54:01.830Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:54:01.830Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:54:01.830Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:54:01.830Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:54:01.830Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:54:01.830Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:54:01.830Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:54:01.830Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:54:01.830Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:54:01.830Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:54:01.830Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:54:01.830Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:54:01.830Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:54:01.831Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:54:01.831Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:54:01.831Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:54:01.831Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:54:01.831Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:54:01.831Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:54:01.831Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:54:01.831Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:54:01.831Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:54:01.831Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:54:01.831Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:54:01.831Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:54:01.831Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:54:01.831Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:54:01.831Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:54:01.831Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:54:01.831Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:54:01.831Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:54:01.831Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:54:01.831Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:54:01.831Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:54:01.831Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:54:01.831Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:54:01.831Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:54:01.831Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:54:01.831Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:54:01.831Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:54:01.831Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:54:01.831Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:54:01.831Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:54:01.831Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:54:01.831Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:54:01.832Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:54:01.832Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:54:01.832Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:54:01.832Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:54:01.832Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:54:01.832Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:54:01.832Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:54:01.832Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:54:01.832Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:54:01.832Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:54:01.832Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:54:01.832Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:54:01.832Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:54:01.832Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:54:01.832Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:54:01.832Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:54:01.832Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:54:01.832Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:54:01.832Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:54:01.832Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:54:01.832Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:54:01.832Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:54:01.832Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:54:01.832Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:54:01.832Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:54:01.832Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:54:01.833Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:54:01.833Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:54:01.833Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:54:01.833Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:54:01.833Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:54:01.833Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:54:01.833Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:54:01.833Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:54:01.833Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:54:01.833Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:54:01.833Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:54:01.833Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:54:01.833Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:54:01.833Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:54:01.833Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:54:01.833Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:54:01.833Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:54:01.833Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:54:01.833Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333241833",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "triggerOn": "fileCreated",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": "1abc123def456",
        "event": "fileCreated",
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        }
      }
    },
    {
      "id": "set_data_002",
      "name": "Format File Info",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "mode": "manual",
        "duplicateItem": false,
        "fields": {
          "values": [
            {
              "name": "fileName",
              "type": "string",
              "value": "={{$json.name}}"
            },
            {
              "name": "fileType",
              "type": "string",
              "value": "={{$json.mimeType}}"
            },
            {
              "name": "fileId",
              "type": "string",
              "value": "={{$json.id}}"
            },
            {
              "name": "createdTime",
              "type": "string",
              "value": "={{$json.createdTime}}"
            },
            {
              "name": "webViewLink",
              "type": "string",
              "value": "={{$json.webViewLink}}"
            }
          ]
        },
        "values": {
          "string": [
            {
              "name": "success",
              "value": "true"
            }
          ]
        }
      }
    },
    {
      "id": "if_node_003",
      "name": "Check File Type",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        650,
        300
      ],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.fileType}}",
              "rightValue": "application/vnd.google-apps",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "slack_notify_004",
      "name": "Send Slack Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        850,
        200
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":file_folder: New file added to Shared Documents",
        "authentication": "accessToken"
      }
    },
    {
      "id": "slack_google_doc_005",
      "name": "Google Doc Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        850,
        400
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":page_facing_up: New Google Doc added to Shared Documents",
        "authentication": "accessToken"
      }
    },
    {
      "id": "error_handler_006",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ],
      "parameters": {}
    },
    {
      "id": "slack_error_007",
      "name": "Send Error Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        450,
        500
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":warning: Error in Google Drive File Alert workflow",
        "authentication": "accessToken"
      }
    }
  ],
  "connections": {
    "Google Drive Trigger": {
      "main": [
        [
          {
            "node": "Format File Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format File Info": {
      "main": [
        [
          {
            "node": "Check File Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check File Type": {
      "main": [
        [
          {
            "node": "Send Slack Alert",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Doc Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Send Error Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:54:01.833Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333241833",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "triggerOn": "fileCreated",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": "1abc123def456",
        "event": "fileCreated",
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        }
      }
    },
    {
      "id": "set_data_002",
      "name": "Format File Info",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "mode": "manual",
        "duplicateItem": false,
        "fields": {
          "values": [
            {
              "name": "fileName",
              "type": "string",
              "value": "={{$json.name}}"
            },
            {
              "name": "fileType",
              "type": "string",
              "value": "={{$json.mimeType}}"
            },
            {
              "name": "fileId",
              "type": "string",
              "value": "={{$json.id}}"
            },
            {
              "name": "createdTime",
              "type": "string",
              "value": "={{$json.createdTime}}"
            },
            {
              "name": "webViewLink",
              "type": "string",
              "value": "={{$json.webViewLink}}"
            }
          ]
        },
        "values": {
          "string": [
            {
              "name": "success",
              "value": "true"
            }
          ]
        }
      }
    },
    {
      "id": "if_node_003",
      "name": "Check File Type",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        650,
        300
      ],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.fileType}}",
              "rightValue": "application/vnd.google-apps",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "slack_notify_004",
      "name": "Send Slack Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        850,
        200
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":file_folder: New file added to Shared Documents",
        "authentication": "accessToken"
      }
    },
    {
      "id": "slack_google_doc_005",
      "name": "Google Doc Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        850,
        400
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":page_facing_up: New Google Doc added to Shared Documents",
        "authentication": "accessToken"
      }
    },
    {
      "id": "error_handler_006",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ],
      "parameters": {}
    },
    {
      "id": "slack_error_007",
      "name": "Send Error Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        450,
        500
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":warning: Error in Google Drive File Alert workflow",
        "authentication": "accessToken"
      }
    }
  ],
  "connections": {
    "Google Drive Trigger": {
      "main": [
        [
          {
            "node": "Format File Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format File Info": {
      "main": [
        [
          {
            "node": "Check File Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check File Type": {
      "main": [
        [
          {
            "node": "Send Slack Alert",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Doc Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Send Error Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:54:01.834Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333241833",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "triggerOn": "fileCreated",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": "1abc123def456",
        "event": "fileCreated",
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        }
      }
    },
    {
      "id": "set_data_002",
      "name": "Format File Info",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "mode": "manual",
        "duplicateItem": false,
        "fields": {
          "values": [
            {
              "name": "fileName",
              "type": "string",
              "value": "={{$json.name}}"
            },
            {
              "name": "fileType",
              "type": "string",
              "value": "={{$json.mimeType}}"
            },
            {
              "name": "fileId",
              "type": "string",
              "value": "={{$json.id}}"
            },
            {
              "name": "createdTime",
              "type": "string",
              "value": "={{$json.createdTime}}"
            },
            {
              "name": "webViewLink",
              "type": "string",
              "value": "={{$json.webViewLink}}"
            }
          ]
        },
        "values": {
          "string": [
            {
              "name": "success",
              "value": "true"
            }
          ]
        }
      }
    },
    {
      "id": "if_node_003",
      "name": "Check File Type",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        650,
        300
      ],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.fileType}}",
              "rightValue": "application/vnd.google-apps",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "slack_notify_004",
      "name": "Send Slack Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        850,
        200
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":file_folder: New file added to Shared Documents",
        "authentication": "accessToken"
      }
    },
    {
      "id": "slack_google_doc_005",
      "name": "Google Doc Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        850,
        400
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":page_facing_up: New Google Doc added to Shared Documents",
        "authentication": "accessToken"
      }
    },
    {
      "id": "error_handler_006",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ],
      "parameters": {}
    },
    {
      "id": "slack_error_007",
      "name": "Send Error Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        450,
        500
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":warning: Error in Google Drive File Alert workflow",
        "authentication": "accessToken"
      }
    }
  ],
  "connections": {
    "Google Drive Trigger": {
      "main": [
        [
          {
            "node": "Format File Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format File Info": {
      "main": [
        [
          {
            "node": "Check File Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check File Type": {
      "main": [
        [
          {
            "node": "Send Slack Alert",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Doc Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Send Error Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:54:01.834Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333241833",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "triggerOn": "fileCreated",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": "1abc123def456",
        "event": "fileCreated",
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        }
      }
    },
    {
      "id": "set_data_002",
      "name": "Format File Info",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "mode": "manual",
        "duplicateItem": false,
        "fields": {
          "values": [
            {
              "name": "fileName",
              "type": "string",
              "value": "={{$json.name}}"
            },
            {
              "name": "fileType",
              "type": "string",
              "value": "={{$json.mimeType}}"
            },
            {
              "name": "fileId",
              "type": "string",
              "value": "={{$json.id}}"
            },
            {
              "name": "createdTime",
              "type": "string",
              "value": "={{$json.createdTime}}"
            },
            {
              "name": "webViewLink",
              "type": "string",
              "value": "={{$json.webViewLink}}"
            }
          ]
        },
        "values": {
          "string": [
            {
              "name": "success",
              "value": "true"
            }
          ]
        }
      }
    },
    {
      "id": "if_node_003",
      "name": "Check File Type",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        650,
        300
      ],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.fileType}}",
              "rightValue": "application/vnd.google-apps",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "slack_notify_004",
      "name": "Send Slack Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        850,
        200
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":file_folder: New file added to Shared Documents",
        "authentication": "accessToken"
      }
    },
    {
      "id": "slack_google_doc_005",
      "name": "Google Doc Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        850,
        400
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":page_facing_up: New Google Doc added to Shared Documents",
        "authentication": "accessToken"
      }
    },
    {
      "id": "error_handler_006",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ],
      "parameters": {}
    },
    {
      "id": "slack_error_007",
      "name": "Send Error Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        450,
        500
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":warning: Error in Google Drive File Alert workflow",
        "authentication": "accessToken"
      }
    }
  ],
  "connections": {
    "Google Drive Trigger": {
      "main": [
        [
          {
            "node": "Format File Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format File Info": {
      "main": [
        [
          {
            "node": "Check File Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check File Type": {
      "main": [
        [
          {
            "node": "Send Slack Alert",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Doc Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Send Error Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:54:01.834Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333241833",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "triggerOn": "fileCreated",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": "1abc123def456",
        "event": "fileCreated",
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        }
      }
    },
    {
      "id": "set_data_002",
      "name": "Format File Info",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "mode": "manual",
        "duplicateItem": false,
        "fields": {
          "values": [
            {
              "name": "fileName",
              "type": "string",
              "value": "={{$json.name}}"
            },
            {
              "name": "fileType",
              "type": "string",
              "value": "={{$json.mimeType}}"
            },
            {
              "name": "fileId",
              "type": "string",
              "value": "={{$json.id}}"
            },
            {
              "name": "createdTime",
              "type": "string",
              "value": "={{$json.createdTime}}"
            },
            {
              "name": "webViewLink",
              "type": "string",
              "value": "={{$json.webViewLink}}"
            }
          ]
        },
        "values": {
          "string": [
            {
              "name": "success",
              "value": "true"
            }
          ]
        }
      }
    },
    {
      "id": "if_node_003",
      "name": "Check File Type",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        650,
        300
      ],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.fileType}}",
              "rightValue": "application/vnd.google-apps",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "slack_notify_004",
      "name": "Send Slack Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        850,
        200
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":file_folder: New file added to Shared Documents",
        "authentication": "accessToken"
      }
    },
    {
      "id": "slack_google_doc_005",
      "name": "Google Doc Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        850,
        400
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":page_facing_up: New Google Doc added to Shared Documents",
        "authentication": "accessToken"
      }
    },
    {
      "id": "error_handler_006",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ],
      "parameters": {}
    },
    {
      "id": "slack_error_007",
      "name": "Send Error Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        450,
        500
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":warning: Error in Google Drive File Alert workflow",
        "authentication": "accessToken"
      }
    }
  ],
  "connections": {
    "Google Drive Trigger": {
      "main": [
        [
          {
            "node": "Format File Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format File Info": {
      "main": [
        [
          {
            "node": "Check File Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check File Type": {
      "main": [
        [
          {
            "node": "Send Slack Alert",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Doc Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Send Error Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:54:01.834Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333241833",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "triggerOn": "fileCreated",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": "1abc123def456",
        "event": "fileCreated",
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        }
      }
    },
    {
      "id": "set_data_002",
      "name": "Format File Info",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "mode": "manual",
        "duplicateItem": false,
        "fields": {
          "values": [
            {
              "name": "fileName",
              "type": "string",
              "value": "={{$json.name}}"
            },
            {
              "name": "fileType",
              "type": "string",
              "value": "={{$json.mimeType}}"
            },
            {
              "name": "fileId",
              "type": "string",
              "value": "={{$json.id}}"
            },
            {
              "name": "createdTime",
              "type": "string",
              "value": "={{$json.createdTime}}"
            },
            {
              "name": "webViewLink",
              "type": "string",
              "value": "={{$json.webViewLink}}"
            }
          ]
        },
        "values": {
          "string": [
            {
              "name": "success",
              "value": "true"
            }
          ]
        }
      }
    },
    {
      "id": "if_node_003",
      "name": "Check File Type",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        650,
        300
      ],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.fileType}}",
              "rightValue": "application/vnd.google-apps",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "slack_notify_004",
      "name": "Send Slack Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        850,
        200
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":file_folder: New file added to Shared Documents",
        "authentication": "accessToken"
      }
    },
    {
      "id": "slack_google_doc_005",
      "name": "Google Doc Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        850,
        400
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":page_facing_up: New Google Doc added to Shared Documents",
        "authentication": "accessToken"
      }
    },
    {
      "id": "error_handler_006",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ],
      "parameters": {}
    },
    {
      "id": "slack_error_007",
      "name": "Send Error Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        450,
        500
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":warning: Error in Google Drive File Alert workflow",
        "authentication": "accessToken"
      }
    }
  ],
  "connections": {
    "Google Drive Trigger": {
      "main": [
        [
          {
            "node": "Format File Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format File Info": {
      "main": [
        [
          {
            "node": "Check File Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check File Type": {
      "main": [
        [
          {
            "node": "Send Slack Alert",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Doc Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Send Error Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:54:01.834Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333241833",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "triggerOn": "fileCreated",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": "1abc123def456",
        "event": "fileCreated",
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        }
      }
    },
    {
      "id": "set_data_002",
      "name": "Format File Info",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "mode": "manual",
        "duplicateItem": false,
        "fields": {
          "values": [
            {
              "name": "fileName",
              "type": "string",
              "value": "={{$json.name}}"
            },
            {
              "name": "fileType",
              "type": "string",
              "value": "={{$json.mimeType}}"
            },
            {
              "name": "fileId",
              "type": "string",
              "value": "={{$json.id}}"
            },
            {
              "name": "createdTime",
              "type": "string",
              "value": "={{$json.createdTime}}"
            },
            {
              "name": "webViewLink",
              "type": "string",
              "value": "={{$json.webViewLink}}"
            }
          ]
        },
        "values": {
          "string": [
            {
              "name": "success",
              "value": "true"
            }
          ]
        }
      }
    },
    {
      "id": "if_node_003",
      "name": "Check File Type",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        650,
        300
      ],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.fileType}}",
              "rightValue": "application/vnd.google-apps",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "slack_notify_004",
      "name": "Send Slack Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        850,
        200
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":file_folder: New file added to Shared Documents",
        "authentication": "accessToken"
      }
    },
    {
      "id": "slack_google_doc_005",
      "name": "Google Doc Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        850,
        400
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":page_facing_up: New Google Doc added to Shared Documents",
        "authentication": "accessToken"
      }
    },
    {
      "id": "error_handler_006",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ],
      "parameters": {}
    },
    {
      "id": "slack_error_007",
      "name": "Send Error Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        450,
        500
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":warning: Error in Google Drive File Alert workflow",
        "authentication": "accessToken"
      }
    }
  ],
  "connections": {
    "Google Drive Trigger": {
      "main": [
        [
          {
            "node": "Format File Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format File Info": {
      "main": [
        [
          {
            "node": "Check File Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check File Type": {
      "main": [
        [
          {
            "node": "Send Slack Alert",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Doc Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Send Error Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:54:01.834Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333241833",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "triggerOn": "fileCreated",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": "1abc123def456",
        "event": "fileCreated",
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        }
      }
    },
    {
      "id": "set_data_002",
      "name": "Format File Info",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "mode": "manual",
        "duplicateItem": false,
        "fields": {
          "values": [
            {
              "name": "fileName",
              "type": "string",
              "value": "={{$json.name}}"
            },
            {
              "name": "fileType",
              "type": "string",
              "value": "={{$json.mimeType}}"
            },
            {
              "name": "fileId",
              "type": "string",
              "value": "={{$json.id}}"
            },
            {
              "name": "createdTime",
              "type": "string",
              "value": "={{$json.createdTime}}"
            },
            {
              "name": "webViewLink",
              "type": "string",
              "value": "={{$json.webViewLink}}"
            }
          ]
        },
        "values": {
          "string": [
            {
              "name": "success",
              "value": "true"
            }
          ]
        }
      }
    },
    {
      "id": "if_node_003",
      "name": "Check File Type",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        650,
        300
      ],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.fileType}}",
              "rightValue": "application/vnd.google-apps",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "slack_notify_004",
      "name": "Send Slack Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        850,
        200
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":file_folder: New file added to Shared Documents",
        "authentication": "accessToken"
      }
    },
    {
      "id": "slack_google_doc_005",
      "name": "Google Doc Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        850,
        400
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":page_facing_up: New Google Doc added to Shared Documents",
        "authentication": "accessToken"
      }
    },
    {
      "id": "error_handler_006",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ],
      "parameters": {}
    },
    {
      "id": "slack_error_007",
      "name": "Send Error Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        450,
        500
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":warning: Error in Google Drive File Alert workflow",
        "authentication": "accessToken"
      }
    }
  ],
  "connections": {
    "Google Drive Trigger": {
      "main": [
        [
          {
            "node": "Format File Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format File Info": {
      "main": [
        [
          {
            "node": "Check File Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check File Type": {
      "main": [
        [
          {
            "node": "Send Slack Alert",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Doc Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Send Error Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:54:01.834Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333241833",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "triggerOn": "fileCreated",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": "1abc123def456",
        "event": "fileCreated",
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        }
      }
    },
    {
      "id": "set_data_002",
      "name": "Format File Info",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "mode": "manual",
        "duplicateItem": false,
        "fields": {
          "values": [
            {
              "name": "fileName",
              "type": "string",
              "value": "={{$json.name}}"
            },
            {
              "name": "fileType",
              "type": "string",
              "value": "={{$json.mimeType}}"
            },
            {
              "name": "fileId",
              "type": "string",
              "value": "={{$json.id}}"
            },
            {
              "name": "createdTime",
              "type": "string",
              "value": "={{$json.createdTime}}"
            },
            {
              "name": "webViewLink",
              "type": "string",
              "value": "={{$json.webViewLink}}"
            }
          ]
        },
        "values": {
          "string": [
            {
              "name": "success",
              "value": "true"
            }
          ]
        }
      }
    },
    {
      "id": "if_node_003",
      "name": "Check File Type",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        650,
        300
      ],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.fileType}}",
              "rightValue": "application/vnd.google-apps",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "slack_notify_004",
      "name": "Send Slack Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        850,
        200
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":file_folder: New file added to Shared Documents",
        "authentication": "accessToken"
      }
    },
    {
      "id": "slack_google_doc_005",
      "name": "Google Doc Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        850,
        400
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":page_facing_up: New Google Doc added to Shared Documents",
        "authentication": "accessToken"
      }
    },
    {
      "id": "error_handler_006",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ],
      "parameters": {}
    },
    {
      "id": "slack_error_007",
      "name": "Send Error Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        450,
        500
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":warning: Error in Google Drive File Alert workflow",
        "authentication": "accessToken"
      }
    }
  ],
  "connections": {
    "Google Drive Trigger": {
      "main": [
        [
          {
            "node": "Format File Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format File Info": {
      "main": [
        [
          {
            "node": "Check File Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check File Type": {
      "main": [
        [
          {
            "node": "Send Slack Alert",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Doc Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Send Error Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:54:01.834Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333241833",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "triggerOn": "fileCreated",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": "1abc123def456",
        "event": "fileCreated",
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        }
      }
    },
    {
      "id": "set_data_002",
      "name": "Format File Info",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "mode": "manual",
        "duplicateItem": false,
        "fields": {
          "values": [
            {
              "name": "fileName",
              "type": "string",
              "value": "={{$json.name}}"
            },
            {
              "name": "fileType",
              "type": "string",
              "value": "={{$json.mimeType}}"
            },
            {
              "name": "fileId",
              "type": "string",
              "value": "={{$json.id}}"
            },
            {
              "name": "createdTime",
              "type": "string",
              "value": "={{$json.createdTime}}"
            },
            {
              "name": "webViewLink",
              "type": "string",
              "value": "={{$json.webViewLink}}"
            }
          ]
        },
        "values": {
          "string": [
            {
              "name": "success",
              "value": "true"
            }
          ]
        }
      }
    },
    {
      "id": "if_node_003",
      "name": "Check File Type",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        650,
        300
      ],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.fileType}}",
              "rightValue": "application/vnd.google-apps",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "slack_notify_004",
      "name": "Send Slack Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        850,
        200
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":file_folder: New file added to Shared Documents",
        "authentication": "accessToken"
      }
    },
    {
      "id": "slack_google_doc_005",
      "name": "Google Doc Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        850,
        400
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":page_facing_up: New Google Doc added to Shared Documents",
        "authentication": "accessToken"
      }
    },
    {
      "id": "error_handler_006",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ],
      "parameters": {}
    },
    {
      "id": "slack_error_007",
      "name": "Send Error Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        450,
        500
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":warning: Error in Google Drive File Alert workflow",
        "authentication": "accessToken"
      }
    }
  ],
  "connections": {
    "Google Drive Trigger": {
      "main": [
        [
          {
            "node": "Format File Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format File Info": {
      "main": [
        [
          {
            "node": "Check File Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check File Type": {
      "main": [
        [
          {
            "node": "Send Slack Alert",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Doc Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Send Error Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:54:01.834Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333241833",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "triggerOn": "fileCreated",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": "1abc123def456",
        "event": "fileCreated",
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        }
      }
    },
    {
      "id": "set_data_002",
      "name": "Format File Info",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "mode": "manual",
        "duplicateItem": false,
        "fields": {
          "values": [
            {
              "name": "fileName",
              "type": "string",
              "value": "={{$json.name}}"
            },
            {
              "name": "fileType",
              "type": "string",
              "value": "={{$json.mimeType}}"
            },
            {
              "name": "fileId",
              "type": "string",
              "value": "={{$json.id}}"
            },
            {
              "name": "createdTime",
              "type": "string",
              "value": "={{$json.createdTime}}"
            },
            {
              "name": "webViewLink",
              "type": "string",
              "value": "={{$json.webViewLink}}"
            }
          ]
        },
        "values": {
          "string": [
            {
              "name": "success",
              "value": "true"
            }
          ]
        }
      }
    },
    {
      "id": "if_node_003",
      "name": "Check File Type",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        650,
        300
      ],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.fileType}}",
              "rightValue": "application/vnd.google-apps",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "slack_notify_004",
      "name": "Send Slack Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        850,
        200
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":file_folder: New file added to Shared Documents",
        "authentication": "accessToken"
      }
    },
    {
      "id": "slack_google_doc_005",
      "name": "Google Doc Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        850,
        400
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":page_facing_up: New Google Doc added to Shared Documents",
        "authentication": "accessToken"
      }
    },
    {
      "id": "error_handler_006",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ],
      "parameters": {}
    },
    {
      "id": "slack_error_007",
      "name": "Send Error Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        450,
        500
      ],
      "parameters": {
        "operation": "post",
        "channel": "#file-alerts",
        "text": ":warning: Error in Google Drive File Alert workflow",
        "authentication": "accessToken"
      }
    }
  ],
  "connections": {
    "Google Drive Trigger": {
      "main": [
        [
          {
            "node": "Format File Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format File Info": {
      "main": [
        [
          {
            "node": "Check File Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check File Type": {
      "main": [
        [
          {
            "node": "Send Slack Alert",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Doc Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Send Error Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:54:02.575Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:54:02.575Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:54:02.575Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:54:02.575Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:54:02.575Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:54:02.575Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:54:02.576Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:54:02.576Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:54:02.576Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:54:02.576Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:54:02.576Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:54:02.576Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:54:02.576Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:54:02.576Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:54:02.576Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:54:02.576Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:54:02.576Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:54:02.576Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:54:02.576Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:54:02.576Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:54:02.576Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:54:02.576Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:54:02.576Z] [CONSOLE] Cleanup completed
[2025-06-07T21:54:02.576Z] [CONSOLE] Cleanup completed
[2025-06-07T21:54:02.576Z] [CONSOLE] Cleanup completed
[2025-06-07T21:54:02.577Z] [CONSOLE] Cleanup completed
[2025-06-07T21:54:02.577Z] [CONSOLE] Cleanup completed
[2025-06-07T21:54:02.577Z] [CONSOLE] Cleanup completed
[2025-06-07T21:54:02.577Z] [CONSOLE] Cleanup completed
[2025-06-07T21:54:02.577Z] [CONSOLE] Cleanup completed
[2025-06-07T21:54:02.577Z] [CONSOLE] Cleanup completed
[2025-06-07T21:54:02.577Z] [CONSOLE] Cleanup completed
[2025-06-07T21:54:02.577Z] [CONSOLE] Cleanup completed
[2025-06-07T21:54:02.577Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:54:02.577Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:54:02.577Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:54:02.577Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:54:02.577Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:54:02.577Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:54:02.577Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:54:02.577Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:54:02.577Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:54:02.577Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:54:02.577Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:54:02.577Z] [CONSOLE] IF node leftValue: ={{$json.fileType}}
[2025-06-07T21:54:02.578Z] [CONSOLE] IF node leftValue: ={{$json.fileType}}
[2025-06-07T21:54:02.578Z] [CONSOLE] IF node leftValue: ={{$json.fileType}}
[2025-06-07T21:54:02.578Z] [CONSOLE] IF node leftValue: ={{$json.fileType}}
[2025-06-07T21:54:02.578Z] [CONSOLE] IF node leftValue: ={{$json.fileType}}
[2025-06-07T21:54:02.578Z] [CONSOLE] IF node leftValue: ={{$json.fileType}}
[2025-06-07T21:54:02.578Z] [CONSOLE] IF node leftValue: ={{$json.fileType}}
[2025-06-07T21:54:02.578Z] [CONSOLE] IF node leftValue: ={{$json.fileType}}
[2025-06-07T21:54:02.578Z] [CONSOLE] IF node leftValue: ={{$json.fileType}}
[2025-06-07T21:54:02.578Z] [CONSOLE] IF node leftValue: ={{$json.fileType}}
[2025-06-07T21:54:02.578Z] [CONSOLE] IF node leftValue: ={{$json.fileType}}
[2025-06-07T21:54:02.578Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:54:02.578Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:54:02.578Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:54:02.578Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:54:02.578Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:54:02.578Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:54:02.578Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:54:02.578Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:54:02.578Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:54:02.578Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:54:02.578Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:54:02.578Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:54:02.578Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:54:02.578Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:54:02.578Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:54:02.578Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:54:02.578Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:54:02.578Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:54:02.578Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:54:02.578Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:54:02.578Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:54:02.578Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:54:02.579Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:54:02.579Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:54:02.579Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:54:02.579Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:54:02.579Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:54:02.579Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:54:02.579Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:54:02.579Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:54:02.579Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:54:02.579Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:54:02.579Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:54:02.579Z] [CONSOLE]   * Slack node Send Slack Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.579Z] [CONSOLE]   * Slack node Send Slack Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.579Z] [CONSOLE]   * Slack node Send Slack Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.579Z] [CONSOLE]   * Slack node Send Slack Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.579Z] [CONSOLE]   * Slack node Send Slack Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.579Z] [CONSOLE]   * Slack node Send Slack Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.579Z] [CONSOLE]   * Slack node Send Slack Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.579Z] [CONSOLE]   * Slack node Send Slack Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.579Z] [CONSOLE]   * Slack node Send Slack Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.579Z] [CONSOLE]   * Slack node Send Slack Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.579Z] [CONSOLE]   * Slack node Send Slack Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.579Z] [CONSOLE]   * Slack node Google Doc Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.579Z] [CONSOLE]   * Slack node Google Doc Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.579Z] [CONSOLE]   * Slack node Google Doc Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.579Z] [CONSOLE]   * Slack node Google Doc Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.579Z] [CONSOLE]   * Slack node Google Doc Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.579Z] [CONSOLE]   * Slack node Google Doc Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.579Z] [CONSOLE]   * Slack node Google Doc Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.579Z] [CONSOLE]   * Slack node Google Doc Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.579Z] [CONSOLE]   * Slack node Google Doc Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.579Z] [CONSOLE]   * Slack node Google Doc Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.579Z] [CONSOLE]   * Slack node Google Doc Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.580Z] [CONSOLE]   * Slack node Send Error Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.580Z] [CONSOLE]   * Slack node Send Error Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.580Z] [CONSOLE]   * Slack node Send Error Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.580Z] [CONSOLE]   * Slack node Send Error Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.580Z] [CONSOLE]   * Slack node Send Error Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.580Z] [CONSOLE]   * Slack node Send Error Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.580Z] [CONSOLE]   * Slack node Send Error Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.580Z] [CONSOLE]   * Slack node Send Error Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.580Z] [CONSOLE]   * Slack node Send Error Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.580Z] [CONSOLE]   * Slack node Send Error Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.580Z] [CONSOLE]   * Slack node Send Error Alert: no otherOptions field found (good)
[2025-06-07T21:54:02.581Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:54:02.581Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:54:02.581Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:54:02.581Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:54:02.581Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:54:02.581Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:54:02.581Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:54:02.581Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:54:02.581Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:54:02.581Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:54:02.581Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:54:02.581Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:54:02.581Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:54:02.581Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:54:02.581Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:54:02.581Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:54:02.581Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:54:02.581Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:54:02.581Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:54:02.581Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:54:02.581Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:54:02.581Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:54:02.581Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:54:02.581Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:54:02.581Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:54:02.581Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:54:02.581Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:54:02.581Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:54:02.581Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:54:02.581Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:54:02.581Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:54:02.581Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:54:02.581Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has active: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has active: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has active: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has active: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has active: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has active: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has active: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has active: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has active: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has active: true
[2025-06-07T21:54:02.582Z] [CONSOLE]   - Has active: true
[2025-06-07T21:54:02.582Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:54:02.583Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:54:02.583Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:54:02.583Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:54:02.583Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:54:02.583Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:54:02.583Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:54:02.583Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:54:02.583Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:54:02.583Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:54:02.583Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:54:02.583Z] [CONSOLE] IF node leftValue: ={{$json.fileType}}
[2025-06-07T21:54:02.583Z] [CONSOLE] IF node leftValue: ={{$json.fileType}}
[2025-06-07T21:54:02.583Z] [CONSOLE] IF node leftValue: ={{$json.fileType}}
[2025-06-07T21:54:02.583Z] [CONSOLE] IF node leftValue: ={{$json.fileType}}
[2025-06-07T21:54:02.583Z] [CONSOLE] IF node leftValue: ={{$json.fileType}}
[2025-06-07T21:54:02.583Z] [CONSOLE] IF node leftValue: ={{$json.fileType}}
[2025-06-07T21:54:02.583Z] [CONSOLE] IF node leftValue: ={{$json.fileType}}
[2025-06-07T21:54:02.583Z] [CONSOLE] IF node leftValue: ={{$json.fileType}}
[2025-06-07T21:54:02.583Z] [CONSOLE] IF node leftValue: ={{$json.fileType}}
[2025-06-07T21:54:02.583Z] [CONSOLE] IF node leftValue: ={{$json.fileType}}
[2025-06-07T21:54:02.583Z] [CONSOLE] IF node leftValue: ={{$json.fileType}}
[2025-06-07T21:54:02.583Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:54:02.583Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:54:02.583Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:54:02.583Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:54:02.583Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:54:02.583Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:54:02.583Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:54:02.583Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:54:02.583Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:54:02.583Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:54:02.583Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:54:02.583Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:02.583Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:02.583Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:02.583Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:02.583Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:02.584Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:02.584Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:02.584Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:02.584Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:02.584Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:02.584Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:02.584Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:02.585Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:02.585Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:02.585Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:02.585Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:02.585Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:02.585Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:02.585Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:02.585Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:02.585Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:02.585Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:02.585Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:02.585Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:54:02.585Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:54:02.585Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:54:02.585Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:54:02.585Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:54:02.585Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:54:02.585Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:54:02.585Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:54:02.585Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:54:02.585Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:54:02.585Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:54:02.587Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:54:02.587Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:54:02.587Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:54:02.587Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:54:02.587Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:54:02.587Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:54:02.587Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:54:02.587Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:54:02.587Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:54:02.587Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:54:02.587Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:54:02.587Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:54:02.587Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:54:02.587Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:54:02.587Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:54:02.587Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:54:02.587Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:54:02.587Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:54:02.587Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:54:02.587Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:54:02.587Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:54:02.587Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:54:02.587Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:54:02.587Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:54:02.587Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:54:02.587Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:54:02.587Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:54:02.587Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:54:02.587Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:54:02.587Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:54:02.587Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:54:02.587Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:54:02.587Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:54:02.588Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:54:02.588Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:54:02.588Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:54:02.588Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:54:02.588Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:54:02.588Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:54:02.588Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:54:02.588Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:54:02.588Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:54:02.588Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:54:02.588Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:54:02.588Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:02.588Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:02.588Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:02.588Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:02.588Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:02.588Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:02.588Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:02.588Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:02.588Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:02.588Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:02.588Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:54:02.588Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:02.588Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:02.588Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:02.588Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:02.588Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:02.588Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:02.588Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:02.588Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:02.588Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:02.588Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:02.588Z] [CONSOLE]     * Send Slack Alert: has otherOptions = false
[2025-06-07T21:54:02.588Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:02.588Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:02.588Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:02.588Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:02.588Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:02.589Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:02.589Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:02.589Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:02.589Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:02.589Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:02.589Z] [CONSOLE]     * Google Doc Alert: has otherOptions = false
[2025-06-07T21:54:02.589Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:02.589Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:02.589Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:02.589Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:02.589Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:02.589Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:02.589Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:02.589Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:02.589Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:02.589Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:02.589Z] [CONSOLE]     * Send Error Alert: has otherOptions = false
[2025-06-07T21:54:02.589Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:02.589Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:02.589Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:02.589Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:02.589Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:02.589Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:02.589Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:02.589Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:02.589Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:02.589Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:02.589Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:54:02.589Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:54:02.589Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:54:02.589Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:54:02.589Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:54:02.589Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:54:02.589Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:54:02.589Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:54:02.589Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:54:02.589Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:54:02.589Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:54:02.590Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:54:02.590Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Drive File Alert to Slack",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "type...
[2025-06-07T21:54:02.590Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Drive File Alert to Slack",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "type...
[2025-06-07T21:54:02.590Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Drive File Alert to Slack",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "type...
[2025-06-07T21:54:02.590Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Drive File Alert to Slack",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "type...
[2025-06-07T21:54:02.590Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Drive File Alert to Slack",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "type...
[2025-06-07T21:54:02.590Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Drive File Alert to Slack",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "type...
[2025-06-07T21:54:02.590Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Drive File Alert to Slack",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "type...
[2025-06-07T21:54:02.590Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Drive File Alert to Slack",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "type...
[2025-06-07T21:54:02.590Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Drive File Alert to Slack",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "type...
[2025-06-07T21:54:02.590Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Drive File Alert to Slack",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "type...
[2025-06-07T21:54:02.590Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Drive File Alert to Slack",
  "nodes": [
    {
      "id": "drive_trigger_001",
      "name": "Google Drive Trigger",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "type...
[2025-06-07T21:54:03.054Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:54:03.054Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:54:03.054Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:54:03.054Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:54:03.054Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:54:03.054Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:54:03.054Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:54:03.054Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:54:03.054Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:54:03.054Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:54:03.054Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:54:33.130Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:54:33.131Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:54:33.131Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:54:33.131Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:54:33.131Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:54:33.131Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:54:33.131Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:54:33.131Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:54:33.131Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:54:33.131Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:54:33.131Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:54:33.131Z] [INFO] 🚀 [GENERATE V2] Request received
[2025-06-07T21:54:33.131Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:54:33.132Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:54:33.132Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:54:33.132Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:54:33.132Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:54:33.132Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:54:33.132Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:54:33.132Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:54:33.132Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:54:33.132Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:54:33.132Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:54:33.132Z] [INFO] 📝 [GENERATE V2] Body parsed: {
  "input": "When someone submits my Google Form 'Customer Feedback' (form ID: 1xyz789abc123), save their name, email, rating (1-5), and comments to the 'Feedback Responses' Google Sheet in columns A, B, C, and D respectively",
  "platform": "n8n",
  "complexity": "complex",
  "errorHandling": true,
  "optimization": 50,
  "provider": "claude",
  "useRAG": true,
  "validateOutput": true
}
[2025-06-07T21:54:33.132Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:54:33.132Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:54:33.132Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:54:33.132Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:54:33.132Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:54:33.132Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:54:33.132Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:54:33.132Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:54:33.132Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:54:33.132Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:54:33.132Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:54:33.132Z] [INFO] ✅ [GENERATE V2] Request validated
[2025-06-07T21:54:33.132Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:54:33.132Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:54:33.132Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:54:33.132Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:54:33.132Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:54:33.132Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:54:33.132Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:54:33.132Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:54:33.132Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:54:33.132Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:54:33.132Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:54:33.133Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:54:33.133Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:54:33.133Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:54:33.133Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:54:33.133Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:54:33.133Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:54:33.133Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:54:33.133Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:54:33.133Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:54:33.133Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:54:33.133Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:54:33.133Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:54:33.133Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:54:33.133Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:54:33.133Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:54:33.133Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:54:33.133Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:54:33.133Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:54:33.133Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:54:33.134Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:54:33.134Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:54:33.134Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:54:33.327Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:54:33.327Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:54:33.327Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:54:33.327Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:54:33.327Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:54:33.327Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:54:33.327Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:54:33.327Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:54:33.327Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:54:33.327Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:54:33.327Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:54:33.328Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:54:33.328Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:54:33.328Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:54:33.328Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:54:33.328Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:54:33.328Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:54:33.328Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:54:33.328Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:54:33.328Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:54:33.328Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:54:33.328Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:54:34.401Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1269ms
[2025-06-07T21:54:34.402Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1269ms
[2025-06-07T21:54:34.402Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1269ms
[2025-06-07T21:54:34.402Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1269ms
[2025-06-07T21:54:34.402Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1269ms
[2025-06-07T21:54:34.402Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1269ms
[2025-06-07T21:54:34.402Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1269ms
[2025-06-07T21:54:34.402Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1269ms
[2025-06-07T21:54:34.402Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1269ms
[2025-06-07T21:54:34.402Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1269ms
[2025-06-07T21:54:34.402Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1269ms
[2025-06-07T21:54:34.402Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:54:34.402Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:54:34.402Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:54:34.402Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:54:34.402Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:54:34.402Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:54:34.403Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:54:34.403Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:54:34.403Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:54:34.403Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:54:34.403Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:54:34.404Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:54:34.404Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:54:34.405Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:54:34.405Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:54:34.405Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:54:34.405Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:54:34.405Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:54:34.405Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:54:34.405Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:54:34.405Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:54:34.405Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:54:34.405Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:54:34.405Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:54:34.405Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:54:34.405Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:54:34.405Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:54:34.405Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:54:34.405Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:54:34.405Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:54:34.405Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:54:34.405Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:54:34.405Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:54:34.405Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:54:34.405Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:54:34.405Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:54:34.405Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:54:34.406Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:54:34.406Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:54:34.406Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:54:34.406Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:54:34.406Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:54:34.406Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:54:34.406Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:55:26.252Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:55:26.254Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:55:26.254Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:55:26.254Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:55:26.254Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:55:26.254Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:55:26.255Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:55:26.255Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:55:26.255Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:55:26.255Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:55:26.255Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:55:26.263Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 51858 ms
[2025-06-07T21:55:26.263Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 51858 ms
[2025-06-07T21:55:26.263Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 51858 ms
[2025-06-07T21:55:26.263Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 51858 ms
[2025-06-07T21:55:26.263Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 51858 ms
[2025-06-07T21:55:26.263Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 51858 ms
[2025-06-07T21:55:26.263Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 51858 ms
[2025-06-07T21:55:26.263Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 51858 ms
[2025-06-07T21:55:26.263Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 51858 ms
[2025-06-07T21:55:26.263Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 51858 ms
[2025-06-07T21:55:26.264Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 51858 ms
[2025-06-07T21:55:26.264Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:55:26.264Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:55:26.264Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:55:26.264Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:55:26.264Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:55:26.264Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:55:26.264Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:55:26.264Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:55:26.264Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:55:26.264Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:55:26.264Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:55:26.264Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Form to Sheet with Email Notification",
  "nodes": [
    {
      "id": "1",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "position": [250, 300],
      "parameters": {
        "formId": "1xyz789abc123",
        "resolveData": true
      },
      "typeVersion": 1,
      "credentials": {
        "googleFormsOAuth2Api": {
          "id": "1",
          "name": "Google Forms account"
        }
      }
    },
    {
      "id
[2025-06-07T21:55:26.264Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Form to Sheet with Email Notification",
  "nodes": [
    {
      "id": "1",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "position": [250, 300],
      "parameters": {
        "formId": "1xyz789abc123",
        "resolveData": true
      },
      "typeVersion": 1,
      "credentials": {
        "googleFormsOAuth2Api": {
          "id": "1",
          "name": "Google Forms account"
        }
      }
    },
    {
      "id
[2025-06-07T21:55:26.265Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Form to Sheet with Email Notification",
  "nodes": [
    {
      "id": "1",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "position": [250, 300],
      "parameters": {
        "formId": "1xyz789abc123",
        "resolveData": true
      },
      "typeVersion": 1,
      "credentials": {
        "googleFormsOAuth2Api": {
          "id": "1",
          "name": "Google Forms account"
        }
      }
    },
    {
      "id
[2025-06-07T21:55:26.265Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Form to Sheet with Email Notification",
  "nodes": [
    {
      "id": "1",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "position": [250, 300],
      "parameters": {
        "formId": "1xyz789abc123",
        "resolveData": true
      },
      "typeVersion": 1,
      "credentials": {
        "googleFormsOAuth2Api": {
          "id": "1",
          "name": "Google Forms account"
        }
      }
    },
    {
      "id
[2025-06-07T21:55:26.265Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Form to Sheet with Email Notification",
  "nodes": [
    {
      "id": "1",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "position": [250, 300],
      "parameters": {
        "formId": "1xyz789abc123",
        "resolveData": true
      },
      "typeVersion": 1,
      "credentials": {
        "googleFormsOAuth2Api": {
          "id": "1",
          "name": "Google Forms account"
        }
      }
    },
    {
      "id
[2025-06-07T21:55:26.265Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Form to Sheet with Email Notification",
  "nodes": [
    {
      "id": "1",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "position": [250, 300],
      "parameters": {
        "formId": "1xyz789abc123",
        "resolveData": true
      },
      "typeVersion": 1,
      "credentials": {
        "googleFormsOAuth2Api": {
          "id": "1",
          "name": "Google Forms account"
        }
      }
    },
    {
      "id
[2025-06-07T21:55:26.265Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Form to Sheet with Email Notification",
  "nodes": [
    {
      "id": "1",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "position": [250, 300],
      "parameters": {
        "formId": "1xyz789abc123",
        "resolveData": true
      },
      "typeVersion": 1,
      "credentials": {
        "googleFormsOAuth2Api": {
          "id": "1",
          "name": "Google Forms account"
        }
      }
    },
    {
      "id
[2025-06-07T21:55:26.265Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Form to Sheet with Email Notification",
  "nodes": [
    {
      "id": "1",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "position": [250, 300],
      "parameters": {
        "formId": "1xyz789abc123",
        "resolveData": true
      },
      "typeVersion": 1,
      "credentials": {
        "googleFormsOAuth2Api": {
          "id": "1",
          "name": "Google Forms account"
        }
      }
    },
    {
      "id
[2025-06-07T21:55:26.265Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Form to Sheet with Email Notification",
  "nodes": [
    {
      "id": "1",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "position": [250, 300],
      "parameters": {
        "formId": "1xyz789abc123",
        "resolveData": true
      },
      "typeVersion": 1,
      "credentials": {
        "googleFormsOAuth2Api": {
          "id": "1",
          "name": "Google Forms account"
        }
      }
    },
    {
      "id
[2025-06-07T21:55:26.265Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Form to Sheet with Email Notification",
  "nodes": [
    {
      "id": "1",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "position": [250, 300],
      "parameters": {
        "formId": "1xyz789abc123",
        "resolveData": true
      },
      "typeVersion": 1,
      "credentials": {
        "googleFormsOAuth2Api": {
          "id": "1",
          "name": "Google Forms account"
        }
      }
    },
    {
      "id
[2025-06-07T21:55:26.265Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Form to Sheet with Email Notification",
  "nodes": [
    {
      "id": "1",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "position": [250, 300],
      "parameters": {
        "formId": "1xyz789abc123",
        "resolveData": true
      },
      "typeVersion": 1,
      "credentials": {
        "googleFormsOAuth2Api": {
          "id": "1",
          "name": "Google Forms account"
        }
      }
    },
    {
      "id
[2025-06-07T21:55:26.266Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:55:26.266Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:55:26.266Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:55:26.267Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:55:26.267Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:55:26.267Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:55:26.267Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:55:26.267Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:55:26.267Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:55:26.267Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:55:26.267Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:55:26.267Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:55:26.267Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:55:26.267Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:55:26.268Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:55:26.268Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:55:26.268Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:55:26.268Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:55:26.268Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:55:26.268Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:55:26.268Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:55:26.268Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:55:26.268Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:55:26.268Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:55:26.268Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:55:26.268Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:55:26.268Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:55:26.268Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:55:26.269Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:55:26.269Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:55:26.269Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:55:26.269Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:55:26.269Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:55:26.269Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:55:26.269Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:55:26.269Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:55:26.269Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:55:26.269Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:55:26.269Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:55:26.269Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:55:26.269Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:55:26.269Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:55:26.269Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:55:26.270Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:55:26.270Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:55:26.270Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:55:26.270Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:55:26.270Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:55:26.270Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:55:26.270Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:55:26.270Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:55:26.270Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:55:26.270Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:55:26.270Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:55:26.270Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:55:26.270Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:26.270Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:26.270Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:26.270Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:26.270Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:26.270Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:26.270Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:26.270Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:26.270Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:26.270Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:26.270Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:26.271Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = true
[2025-06-07T21:55:26.271Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = true
[2025-06-07T21:55:26.271Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = true
[2025-06-07T21:55:26.271Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = true
[2025-06-07T21:55:26.271Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = true
[2025-06-07T21:55:26.271Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = true
[2025-06-07T21:55:26.271Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = true
[2025-06-07T21:55:26.271Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = true
[2025-06-07T21:55:26.271Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = true
[2025-06-07T21:55:26.271Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = true
[2025-06-07T21:55:26.271Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = true
[2025-06-07T21:55:26.271Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:26.271Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:26.271Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:26.271Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:26.271Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:26.271Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:26.271Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:26.271Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:26.271Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:26.271Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:26.271Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:26.271Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.271Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.272Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.272Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.272Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.272Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.272Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.272Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.272Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.272Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.272Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.272Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.272Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.272Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.272Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.272Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.272Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.272Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.272Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.272Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.272Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.272Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.272Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:55:26.272Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:55:26.272Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:55:26.272Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:55:26.272Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:55:26.273Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:55:26.273Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:55:26.273Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:55:26.273Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:55:26.273Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:55:26.273Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:55:26.273Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:55:26.273Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:55:26.273Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:55:26.273Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:55:26.273Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:55:26.273Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:55:26.273Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:55:26.273Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:55:26.273Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:55:26.273Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:55:26.273Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:55:26.273Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:55:26.273Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:55:26.273Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:55:26.273Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:55:26.273Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:55:26.273Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:55:26.273Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:55:26.273Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:55:26.273Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:55:26.273Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:55:26.273Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:55:26.274Z] [CONSOLE] 🔍 Google Drive nodes BEFORE formatFixer:
[2025-06-07T21:55:26.274Z] [CONSOLE] 🔍 Google Drive nodes BEFORE formatFixer:
[2025-06-07T21:55:26.274Z] [CONSOLE] 🔍 Google Drive nodes BEFORE formatFixer:
[2025-06-07T21:55:26.274Z] [CONSOLE] 🔍 Google Drive nodes BEFORE formatFixer:
[2025-06-07T21:55:26.274Z] [CONSOLE] 🔍 Google Drive nodes BEFORE formatFixer:
[2025-06-07T21:55:26.274Z] [CONSOLE] 🔍 Google Drive nodes BEFORE formatFixer:
[2025-06-07T21:55:26.274Z] [CONSOLE] 🔍 Google Drive nodes BEFORE formatFixer:
[2025-06-07T21:55:26.274Z] [CONSOLE] 🔍 Google Drive nodes BEFORE formatFixer:
[2025-06-07T21:55:26.274Z] [CONSOLE] 🔍 Google Drive nodes BEFORE formatFixer:
[2025-06-07T21:55:26.274Z] [CONSOLE] 🔍 Google Drive nodes BEFORE formatFixer:
[2025-06-07T21:55:26.274Z] [CONSOLE] 🔍 Google Drive nodes BEFORE formatFixer:
[2025-06-07T21:55:26.274Z] [CONSOLE]   - Log Success: parents = undefined
[2025-06-07T21:55:26.274Z] [CONSOLE]   - Log Success: parents = undefined
[2025-06-07T21:55:26.274Z] [CONSOLE]   - Log Success: parents = undefined
[2025-06-07T21:55:26.275Z] [CONSOLE]   - Log Success: parents = undefined
[2025-06-07T21:55:26.275Z] [CONSOLE]   - Log Success: parents = undefined
[2025-06-07T21:55:26.275Z] [CONSOLE]   - Log Success: parents = undefined
[2025-06-07T21:55:26.275Z] [CONSOLE]   - Log Success: parents = undefined
[2025-06-07T21:55:26.275Z] [CONSOLE]   - Log Success: parents = undefined
[2025-06-07T21:55:26.275Z] [CONSOLE]   - Log Success: parents = undefined
[2025-06-07T21:55:26.275Z] [CONSOLE]   - Log Success: parents = undefined
[2025-06-07T21:55:26.275Z] [CONSOLE]   - Log Success: parents = undefined
[2025-06-07T21:55:26.275Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:55:26.275Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:55:26.275Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:55:26.275Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:55:26.275Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:55:26.275Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:55:26.275Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:55:26.275Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:55:26.275Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:55:26.275Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:55:26.275Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:55:26.275Z] [INFO] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:55:26.276Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:55:26.276Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:55:26.276Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:55:26.276Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:55:26.276Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:55:26.276Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:55:26.276Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:55:26.276Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:55:26.276Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:55:26.276Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:55:26.276Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:55:26.277Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:55:26.277Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:55:26.277Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:55:26.277Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:55:26.277Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:55:26.277Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:55:26.277Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:55:26.277Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:55:26.277Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:55:26.277Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:55:26.277Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:55:26.277Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:55:26.277Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:55:26.277Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:55:26.277Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:55:26.277Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:55:26.277Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:55:26.277Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:55:26.277Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:55:26.277Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:55:26.278Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:55:26.278Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:55:26.278Z] [CONSOLE]     ✅ Fixed Gmail field in Sheets column B
[2025-06-07T21:55:26.278Z] [CONSOLE]     ✅ Fixed Gmail field in Sheets column B
[2025-06-07T21:55:26.278Z] [CONSOLE]     ✅ Fixed Gmail field in Sheets column B
[2025-06-07T21:55:26.278Z] [CONSOLE]     ✅ Fixed Gmail field in Sheets column B
[2025-06-07T21:55:26.278Z] [CONSOLE]     ✅ Fixed Gmail field in Sheets column B
[2025-06-07T21:55:26.278Z] [CONSOLE]     ✅ Fixed Gmail field in Sheets column B
[2025-06-07T21:55:26.278Z] [CONSOLE]     ✅ Fixed Gmail field in Sheets column B
[2025-06-07T21:55:26.278Z] [CONSOLE]     ✅ Fixed Gmail field in Sheets column B
[2025-06-07T21:55:26.278Z] [CONSOLE]     ✅ Fixed Gmail field in Sheets column B
[2025-06-07T21:55:26.278Z] [CONSOLE]     ✅ Fixed Gmail field in Sheets column B
[2025-06-07T21:55:26.278Z] [CONSOLE]     ✅ Fixed Gmail field in Sheets column B
[2025-06-07T21:55:26.279Z] [CONSOLE] 🔧 Fixing IF node: Validate Form Data
[2025-06-07T21:55:26.280Z] [CONSOLE] 🔧 Fixing IF node: Validate Form Data
[2025-06-07T21:55:26.280Z] [CONSOLE] 🔧 Fixing IF node: Validate Form Data
[2025-06-07T21:55:26.280Z] [CONSOLE] 🔧 Fixing IF node: Validate Form Data
[2025-06-07T21:55:26.280Z] [CONSOLE] 🔧 Fixing IF node: Validate Form Data
[2025-06-07T21:55:26.280Z] [CONSOLE] 🔧 Fixing IF node: Validate Form Data
[2025-06-07T21:55:26.280Z] [CONSOLE] 🔧 Fixing IF node: Validate Form Data
[2025-06-07T21:55:26.280Z] [CONSOLE] 🔧 Fixing IF node: Validate Form Data
[2025-06-07T21:55:26.280Z] [CONSOLE] 🔧 Fixing IF node: Validate Form Data
[2025-06-07T21:55:26.280Z] [CONSOLE] 🔧 Fixing IF node: Validate Form Data
[2025-06-07T21:55:26.280Z] [CONSOLE] 🔧 Fixing IF node: Validate Form Data
[2025-06-07T21:55:26.281Z] [INFO] 🔧 Fixing IF node: Validate Form Data
[2025-06-07T21:55:26.281Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:55:26.281Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:55:26.281Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:55:26.281Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:55:26.281Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:55:26.281Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:55:26.281Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:55:26.281Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:55:26.281Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:55:26.281Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:55:26.281Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:55:26.281Z] [CONSOLE]   ✅ Final IF node structure for "Validate Form Data": {
  "boolean": [
    {
      "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
      "value2": true
    }
  ],
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:55:26.281Z] [CONSOLE]   ✅ Final IF node structure for "Validate Form Data": {
  "boolean": [
    {
      "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
      "value2": true
    }
  ],
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:55:26.281Z] [CONSOLE]   ✅ Final IF node structure for "Validate Form Data": {
  "boolean": [
    {
      "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
      "value2": true
    }
  ],
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:55:26.281Z] [CONSOLE]   ✅ Final IF node structure for "Validate Form Data": {
  "boolean": [
    {
      "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
      "value2": true
    }
  ],
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:55:26.281Z] [CONSOLE]   ✅ Final IF node structure for "Validate Form Data": {
  "boolean": [
    {
      "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
      "value2": true
    }
  ],
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:55:26.281Z] [CONSOLE]   ✅ Final IF node structure for "Validate Form Data": {
  "boolean": [
    {
      "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
      "value2": true
    }
  ],
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:55:26.281Z] [CONSOLE]   ✅ Final IF node structure for "Validate Form Data": {
  "boolean": [
    {
      "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
      "value2": true
    }
  ],
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:55:26.281Z] [CONSOLE]   ✅ Final IF node structure for "Validate Form Data": {
  "boolean": [
    {
      "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
      "value2": true
    }
  ],
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:55:26.281Z] [CONSOLE]   ✅ Final IF node structure for "Validate Form Data": {
  "boolean": [
    {
      "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
      "value2": true
    }
  ],
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:55:26.281Z] [CONSOLE]   ✅ Final IF node structure for "Validate Form Data": {
  "boolean": [
    {
      "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
      "value2": true
    }
  ],
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:55:26.281Z] [CONSOLE]   ✅ Final IF node structure for "Validate Form Data": {
  "boolean": [
    {
      "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
      "value2": true
    }
  ],
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: name
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: name
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: name
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: name
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: name
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: name
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: name
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: name
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: name
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: name
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: name
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: email
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: email
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: email
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: email
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: email
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: email
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: email
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: email
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: email
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: email
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: email
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: rating
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: rating
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: rating
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: rating
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: rating
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: rating
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: rating
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: rating
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: rating
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: rating
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: rating
[2025-06-07T21:55:26.282Z] [CONSOLE] Fixed mixed expression syntax in Set node value: comments
[2025-06-07T21:55:26.283Z] [CONSOLE] Fixed mixed expression syntax in Set node value: comments
[2025-06-07T21:55:26.283Z] [CONSOLE] Fixed mixed expression syntax in Set node value: comments
[2025-06-07T21:55:26.283Z] [CONSOLE] Fixed mixed expression syntax in Set node value: comments
[2025-06-07T21:55:26.283Z] [CONSOLE] Fixed mixed expression syntax in Set node value: comments
[2025-06-07T21:55:26.283Z] [CONSOLE] Fixed mixed expression syntax in Set node value: comments
[2025-06-07T21:55:26.283Z] [CONSOLE] Fixed mixed expression syntax in Set node value: comments
[2025-06-07T21:55:26.283Z] [CONSOLE] Fixed mixed expression syntax in Set node value: comments
[2025-06-07T21:55:26.283Z] [CONSOLE] Fixed mixed expression syntax in Set node value: comments
[2025-06-07T21:55:26.283Z] [CONSOLE] Fixed mixed expression syntax in Set node value: comments
[2025-06-07T21:55:26.283Z] [CONSOLE] Fixed mixed expression syntax in Set node value: comments
[2025-06-07T21:55:26.283Z] [CONSOLE] Fixed mixed expression syntax in Set node value: timestamp
[2025-06-07T21:55:26.283Z] [CONSOLE] Fixed mixed expression syntax in Set node value: timestamp
[2025-06-07T21:55:26.283Z] [CONSOLE] Fixed mixed expression syntax in Set node value: timestamp
[2025-06-07T21:55:26.283Z] [CONSOLE] Fixed mixed expression syntax in Set node value: timestamp
[2025-06-07T21:55:26.283Z] [CONSOLE] Fixed mixed expression syntax in Set node value: timestamp
[2025-06-07T21:55:26.283Z] [CONSOLE] Fixed mixed expression syntax in Set node value: timestamp
[2025-06-07T21:55:26.283Z] [CONSOLE] Fixed mixed expression syntax in Set node value: timestamp
[2025-06-07T21:55:26.283Z] [CONSOLE] Fixed mixed expression syntax in Set node value: timestamp
[2025-06-07T21:55:26.283Z] [CONSOLE] Fixed mixed expression syntax in Set node value: timestamp
[2025-06-07T21:55:26.283Z] [CONSOLE] Fixed mixed expression syntax in Set node value: timestamp
[2025-06-07T21:55:26.283Z] [CONSOLE] Fixed mixed expression syntax in Set node value: timestamp
[2025-06-07T21:55:26.283Z] [CONSOLE] 🔧 Fixing IF node: Check Rating
[2025-06-07T21:55:26.283Z] [CONSOLE] 🔧 Fixing IF node: Check Rating
[2025-06-07T21:55:26.283Z] [CONSOLE] 🔧 Fixing IF node: Check Rating
[2025-06-07T21:55:26.283Z] [CONSOLE] 🔧 Fixing IF node: Check Rating
[2025-06-07T21:55:26.283Z] [CONSOLE] 🔧 Fixing IF node: Check Rating
[2025-06-07T21:55:26.283Z] [CONSOLE] 🔧 Fixing IF node: Check Rating
[2025-06-07T21:55:26.283Z] [CONSOLE] 🔧 Fixing IF node: Check Rating
[2025-06-07T21:55:26.283Z] [CONSOLE] 🔧 Fixing IF node: Check Rating
[2025-06-07T21:55:26.283Z] [CONSOLE] 🔧 Fixing IF node: Check Rating
[2025-06-07T21:55:26.283Z] [CONSOLE] 🔧 Fixing IF node: Check Rating
[2025-06-07T21:55:26.284Z] [CONSOLE] 🔧 Fixing IF node: Check Rating
[2025-06-07T21:55:26.284Z] [INFO] 🔧 Fixing IF node: Check Rating
[2025-06-07T21:55:26.284Z] [CONSOLE]   ❌ Removing invalid "number" field from IF node conditions
[2025-06-07T21:55:26.284Z] [CONSOLE]   ❌ Removing invalid "number" field from IF node conditions
[2025-06-07T21:55:26.284Z] [CONSOLE]   ❌ Removing invalid "number" field from IF node conditions
[2025-06-07T21:55:26.284Z] [CONSOLE]   ❌ Removing invalid "number" field from IF node conditions
[2025-06-07T21:55:26.284Z] [CONSOLE]   ❌ Removing invalid "number" field from IF node conditions
[2025-06-07T21:55:26.284Z] [CONSOLE]   ❌ Removing invalid "number" field from IF node conditions
[2025-06-07T21:55:26.284Z] [CONSOLE]   ❌ Removing invalid "number" field from IF node conditions
[2025-06-07T21:55:26.284Z] [CONSOLE]   ❌ Removing invalid "number" field from IF node conditions
[2025-06-07T21:55:26.284Z] [CONSOLE]   ❌ Removing invalid "number" field from IF node conditions
[2025-06-07T21:55:26.284Z] [CONSOLE]   ❌ Removing invalid "number" field from IF node conditions
[2025-06-07T21:55:26.284Z] [CONSOLE]   ❌ Removing invalid "number" field from IF node conditions
[2025-06-07T21:55:26.285Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:55:26.285Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:55:26.285Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:55:26.285Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:55:26.285Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:55:26.285Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:55:26.285Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:55:26.285Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:55:26.285Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:55:26.285Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:55:26.285Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:55:26.285Z] [CONSOLE]   ✅ Final IF node structure for "Check Rating": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:55:26.285Z] [CONSOLE]   ✅ Final IF node structure for "Check Rating": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:55:26.285Z] [CONSOLE]   ✅ Final IF node structure for "Check Rating": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:55:26.285Z] [CONSOLE]   ✅ Final IF node structure for "Check Rating": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:55:26.285Z] [CONSOLE]   ✅ Final IF node structure for "Check Rating": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:55:26.285Z] [CONSOLE]   ✅ Final IF node structure for "Check Rating": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:55:26.285Z] [CONSOLE]   ✅ Final IF node structure for "Check Rating": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:55:26.285Z] [CONSOLE]   ✅ Final IF node structure for "Check Rating": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:55:26.285Z] [CONSOLE]   ✅ Final IF node structure for "Check Rating": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:55:26.285Z] [CONSOLE]   ✅ Final IF node structure for "Check Rating": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:55:26.285Z] [CONSOLE]   ✅ Final IF node structure for "Check Rating": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:55:26.285Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Thank You Email
[2025-06-07T21:55:26.285Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Thank You Email
[2025-06-07T21:55:26.285Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Thank You Email
[2025-06-07T21:55:26.285Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Thank You Email
[2025-06-07T21:55:26.285Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Thank You Email
[2025-06-07T21:55:26.285Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Thank You Email
[2025-06-07T21:55:26.285Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Thank You Email
[2025-06-07T21:55:26.285Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Thank You Email
[2025-06-07T21:55:26.286Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Thank You Email
[2025-06-07T21:55:26.286Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Thank You Email
[2025-06-07T21:55:26.286Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Thank You Email
[2025-06-07T21:55:26.286Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Follow-up Email
[2025-06-07T21:55:26.286Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Follow-up Email
[2025-06-07T21:55:26.286Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Follow-up Email
[2025-06-07T21:55:26.286Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Follow-up Email
[2025-06-07T21:55:26.286Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Follow-up Email
[2025-06-07T21:55:26.286Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Follow-up Email
[2025-06-07T21:55:26.286Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Follow-up Email
[2025-06-07T21:55:26.286Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Follow-up Email
[2025-06-07T21:55:26.286Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Follow-up Email
[2025-06-07T21:55:26.286Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Follow-up Email
[2025-06-07T21:55:26.286Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Follow-up Email
[2025-06-07T21:55:26.286Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Notify Team on Slack"
[2025-06-07T21:55:26.286Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Notify Team on Slack"
[2025-06-07T21:55:26.286Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Notify Team on Slack"
[2025-06-07T21:55:26.286Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Notify Team on Slack"
[2025-06-07T21:55:26.286Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Notify Team on Slack"
[2025-06-07T21:55:26.286Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Notify Team on Slack"
[2025-06-07T21:55:26.286Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Notify Team on Slack"
[2025-06-07T21:55:26.286Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Notify Team on Slack"
[2025-06-07T21:55:26.286Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Notify Team on Slack"
[2025-06-07T21:55:26.286Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Notify Team on Slack"
[2025-06-07T21:55:26.286Z] [CONSOLE] ✅ Removed otherOptions from Slack node "Notify Team on Slack"
[2025-06-07T21:55:26.286Z] [CONSOLE] ℹ️ Processed Slack node "Notify Team on Slack" - ensured no otherOptions field
[2025-06-07T21:55:26.286Z] [CONSOLE] ℹ️ Processed Slack node "Notify Team on Slack" - ensured no otherOptions field
[2025-06-07T21:55:26.287Z] [CONSOLE] ℹ️ Processed Slack node "Notify Team on Slack" - ensured no otherOptions field
[2025-06-07T21:55:26.287Z] [CONSOLE] ℹ️ Processed Slack node "Notify Team on Slack" - ensured no otherOptions field
[2025-06-07T21:55:26.287Z] [CONSOLE] ℹ️ Processed Slack node "Notify Team on Slack" - ensured no otherOptions field
[2025-06-07T21:55:26.287Z] [CONSOLE] ℹ️ Processed Slack node "Notify Team on Slack" - ensured no otherOptions field
[2025-06-07T21:55:26.287Z] [CONSOLE] ℹ️ Processed Slack node "Notify Team on Slack" - ensured no otherOptions field
[2025-06-07T21:55:26.287Z] [CONSOLE] ℹ️ Processed Slack node "Notify Team on Slack" - ensured no otherOptions field
[2025-06-07T21:55:26.287Z] [CONSOLE] ℹ️ Processed Slack node "Notify Team on Slack" - ensured no otherOptions field
[2025-06-07T21:55:26.287Z] [CONSOLE] ℹ️ Processed Slack node "Notify Team on Slack" - ensured no otherOptions field
[2025-06-07T21:55:26.287Z] [CONSOLE] ℹ️ Processed Slack node "Notify Team on Slack" - ensured no otherOptions field
[2025-06-07T21:55:26.287Z] [CONSOLE] 🔧 Processing Google Drive node: Log Success
[2025-06-07T21:55:26.287Z] [CONSOLE] 🔧 Processing Google Drive node: Log Success
[2025-06-07T21:55:26.287Z] [CONSOLE] 🔧 Processing Google Drive node: Log Success
[2025-06-07T21:55:26.287Z] [CONSOLE] 🔧 Processing Google Drive node: Log Success
[2025-06-07T21:55:26.287Z] [CONSOLE] 🔧 Processing Google Drive node: Log Success
[2025-06-07T21:55:26.287Z] [CONSOLE] 🔧 Processing Google Drive node: Log Success
[2025-06-07T21:55:26.287Z] [CONSOLE] 🔧 Processing Google Drive node: Log Success
[2025-06-07T21:55:26.287Z] [CONSOLE] 🔧 Processing Google Drive node: Log Success
[2025-06-07T21:55:26.287Z] [CONSOLE] 🔧 Processing Google Drive node: Log Success
[2025-06-07T21:55:26.287Z] [CONSOLE] 🔧 Processing Google Drive node: Log Success
[2025-06-07T21:55:26.287Z] [CONSOLE] 🔧 Processing Google Drive node: Log Success
[2025-06-07T21:55:26.288Z] [CONSOLE]   🔧 Converting Google Drive node to match n8n example
[2025-06-07T21:55:26.288Z] [CONSOLE]   🔧 Converting Google Drive node to match n8n example
[2025-06-07T21:55:26.288Z] [CONSOLE]   🔧 Converting Google Drive node to match n8n example
[2025-06-07T21:55:26.288Z] [CONSOLE]   🔧 Converting Google Drive node to match n8n example
[2025-06-07T21:55:26.288Z] [CONSOLE]   🔧 Converting Google Drive node to match n8n example
[2025-06-07T21:55:26.288Z] [CONSOLE]   🔧 Converting Google Drive node to match n8n example
[2025-06-07T21:55:26.288Z] [CONSOLE]   🔧 Converting Google Drive node to match n8n example
[2025-06-07T21:55:26.288Z] [CONSOLE]   🔧 Converting Google Drive node to match n8n example
[2025-06-07T21:55:26.288Z] [CONSOLE]   🔧 Converting Google Drive node to match n8n example
[2025-06-07T21:55:26.288Z] [CONSOLE]   🔧 Converting Google Drive node to match n8n example
[2025-06-07T21:55:26.288Z] [CONSOLE]   🔧 Converting Google Drive node to match n8n example
[2025-06-07T21:55:26.288Z] [CONSOLE]   ✅ Fixed Google Drive node structure: {
  "operation": "upload",
  "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": {
    "__rl": true,
    "mode": "list",
    "value": "root",
    "cachedResultName": "/ (Root folder)"
  },
  "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
  "options": {}
}
[2025-06-07T21:55:26.288Z] [CONSOLE]   ✅ Fixed Google Drive node structure: {
  "operation": "upload",
  "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": {
    "__rl": true,
    "mode": "list",
    "value": "root",
    "cachedResultName": "/ (Root folder)"
  },
  "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
  "options": {}
}
[2025-06-07T21:55:26.288Z] [CONSOLE]   ✅ Fixed Google Drive node structure: {
  "operation": "upload",
  "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": {
    "__rl": true,
    "mode": "list",
    "value": "root",
    "cachedResultName": "/ (Root folder)"
  },
  "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
  "options": {}
}
[2025-06-07T21:55:26.288Z] [CONSOLE]   ✅ Fixed Google Drive node structure: {
  "operation": "upload",
  "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": {
    "__rl": true,
    "mode": "list",
    "value": "root",
    "cachedResultName": "/ (Root folder)"
  },
  "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
  "options": {}
}
[2025-06-07T21:55:26.288Z] [CONSOLE]   ✅ Fixed Google Drive node structure: {
  "operation": "upload",
  "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": {
    "__rl": true,
    "mode": "list",
    "value": "root",
    "cachedResultName": "/ (Root folder)"
  },
  "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
  "options": {}
}
[2025-06-07T21:55:26.288Z] [CONSOLE]   ✅ Fixed Google Drive node structure: {
  "operation": "upload",
  "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": {
    "__rl": true,
    "mode": "list",
    "value": "root",
    "cachedResultName": "/ (Root folder)"
  },
  "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
  "options": {}
}
[2025-06-07T21:55:26.288Z] [CONSOLE]   ✅ Fixed Google Drive node structure: {
  "operation": "upload",
  "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": {
    "__rl": true,
    "mode": "list",
    "value": "root",
    "cachedResultName": "/ (Root folder)"
  },
  "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
  "options": {}
}
[2025-06-07T21:55:26.288Z] [CONSOLE]   ✅ Fixed Google Drive node structure: {
  "operation": "upload",
  "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": {
    "__rl": true,
    "mode": "list",
    "value": "root",
    "cachedResultName": "/ (Root folder)"
  },
  "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
  "options": {}
}
[2025-06-07T21:55:26.289Z] [CONSOLE]   ✅ Fixed Google Drive node structure: {
  "operation": "upload",
  "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": {
    "__rl": true,
    "mode": "list",
    "value": "root",
    "cachedResultName": "/ (Root folder)"
  },
  "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
  "options": {}
}
[2025-06-07T21:55:26.289Z] [CONSOLE]   ✅ Fixed Google Drive node structure: {
  "operation": "upload",
  "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": {
    "__rl": true,
    "mode": "list",
    "value": "root",
    "cachedResultName": "/ (Root folder)"
  },
  "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
  "options": {}
}
[2025-06-07T21:55:26.289Z] [CONSOLE]   ✅ Fixed Google Drive node structure: {
  "operation": "upload",
  "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": {
    "__rl": true,
    "mode": "list",
    "value": "root",
    "cachedResultName": "/ (Root folder)"
  },
  "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
  "options": {}
}
[2025-06-07T21:55:26.289Z] [CONSOLE]   ℹ️ Preserving required options field for n8n-nodes-base.googleDrive node "Log Success"
[2025-06-07T21:55:26.289Z] [CONSOLE]   ℹ️ Preserving required options field for n8n-nodes-base.googleDrive node "Log Success"
[2025-06-07T21:55:26.289Z] [CONSOLE]   ℹ️ Preserving required options field for n8n-nodes-base.googleDrive node "Log Success"
[2025-06-07T21:55:26.289Z] [CONSOLE]   ℹ️ Preserving required options field for n8n-nodes-base.googleDrive node "Log Success"
[2025-06-07T21:55:26.289Z] [CONSOLE]   ℹ️ Preserving required options field for n8n-nodes-base.googleDrive node "Log Success"
[2025-06-07T21:55:26.289Z] [CONSOLE]   ℹ️ Preserving required options field for n8n-nodes-base.googleDrive node "Log Success"
[2025-06-07T21:55:26.289Z] [CONSOLE]   ℹ️ Preserving required options field for n8n-nodes-base.googleDrive node "Log Success"
[2025-06-07T21:55:26.289Z] [CONSOLE]   ℹ️ Preserving required options field for n8n-nodes-base.googleDrive node "Log Success"
[2025-06-07T21:55:26.289Z] [CONSOLE]   ℹ️ Preserving required options field for n8n-nodes-base.googleDrive node "Log Success"
[2025-06-07T21:55:26.289Z] [CONSOLE]   ℹ️ Preserving required options field for n8n-nodes-base.googleDrive node "Log Success"
[2025-06-07T21:55:26.289Z] [CONSOLE]   ℹ️ Preserving required options field for n8n-nodes-base.googleDrive node "Log Success"
[2025-06-07T21:55:26.289Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:55:26.289Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:55:26.289Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:55:26.289Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:55:26.289Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:55:26.289Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:55:26.289Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:55:26.289Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:55:26.289Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:55:26.289Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:55:26.289Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:55:26.290Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:55:26.290Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:55:26.290Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:55:26.290Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:55:26.290Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:55:26.290Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:55:26.290Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:55:26.290Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:55:26.290Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:55:26.290Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:55:26.290Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:55:26.290Z] [CONSOLE] 
Node 0: Google Forms Trigger (n8n-nodes-base.googleFormsTrigger)
[2025-06-07T21:55:26.290Z] [CONSOLE] 
Node 0: Google Forms Trigger (n8n-nodes-base.googleFormsTrigger)
[2025-06-07T21:55:26.290Z] [CONSOLE] 
Node 0: Google Forms Trigger (n8n-nodes-base.googleFormsTrigger)
[2025-06-07T21:55:26.290Z] [CONSOLE] 
Node 0: Google Forms Trigger (n8n-nodes-base.googleFormsTrigger)
[2025-06-07T21:55:26.290Z] [CONSOLE] 
Node 0: Google Forms Trigger (n8n-nodes-base.googleFormsTrigger)
[2025-06-07T21:55:26.290Z] [CONSOLE] 
Node 0: Google Forms Trigger (n8n-nodes-base.googleFormsTrigger)
[2025-06-07T21:55:26.290Z] [CONSOLE] 
Node 0: Google Forms Trigger (n8n-nodes-base.googleFormsTrigger)
[2025-06-07T21:55:26.290Z] [CONSOLE] 
Node 0: Google Forms Trigger (n8n-nodes-base.googleFormsTrigger)
[2025-06-07T21:55:26.290Z] [CONSOLE] 
Node 0: Google Forms Trigger (n8n-nodes-base.googleFormsTrigger)
[2025-06-07T21:55:26.290Z] [CONSOLE] 
Node 0: Google Forms Trigger (n8n-nodes-base.googleFormsTrigger)
[2025-06-07T21:55:26.290Z] [CONSOLE] 
Node 0: Google Forms Trigger (n8n-nodes-base.googleFormsTrigger)
[2025-06-07T21:55:26.291Z] [CONSOLE] Parameters: {
  "formId": "1xyz789abc123",
  "resolveData": true
}
[2025-06-07T21:55:26.291Z] [CONSOLE] Parameters: {
  "formId": "1xyz789abc123",
  "resolveData": true
}
[2025-06-07T21:55:26.291Z] [CONSOLE] Parameters: {
  "formId": "1xyz789abc123",
  "resolveData": true
}
[2025-06-07T21:55:26.291Z] [CONSOLE] Parameters: {
  "formId": "1xyz789abc123",
  "resolveData": true
}
[2025-06-07T21:55:26.291Z] [CONSOLE] Parameters: {
  "formId": "1xyz789abc123",
  "resolveData": true
}
[2025-06-07T21:55:26.291Z] [CONSOLE] Parameters: {
  "formId": "1xyz789abc123",
  "resolveData": true
}
[2025-06-07T21:55:26.291Z] [CONSOLE] Parameters: {
  "formId": "1xyz789abc123",
  "resolveData": true
}
[2025-06-07T21:55:26.291Z] [CONSOLE] Parameters: {
  "formId": "1xyz789abc123",
  "resolveData": true
}
[2025-06-07T21:55:26.291Z] [CONSOLE] Parameters: {
  "formId": "1xyz789abc123",
  "resolveData": true
}
[2025-06-07T21:55:26.291Z] [CONSOLE] Parameters: {
  "formId": "1xyz789abc123",
  "resolveData": true
}
[2025-06-07T21:55:26.291Z] [CONSOLE] Parameters: {
  "formId": "1xyz789abc123",
  "resolveData": true
}
[2025-06-07T21:55:26.291Z] [CONSOLE] 
Node 1: Validate Form Data (n8n-nodes-base.if)
[2025-06-07T21:55:26.291Z] [CONSOLE] 
Node 1: Validate Form Data (n8n-nodes-base.if)
[2025-06-07T21:55:26.291Z] [CONSOLE] 
Node 1: Validate Form Data (n8n-nodes-base.if)
[2025-06-07T21:55:26.291Z] [CONSOLE] 
Node 1: Validate Form Data (n8n-nodes-base.if)
[2025-06-07T21:55:26.291Z] [CONSOLE] 
Node 1: Validate Form Data (n8n-nodes-base.if)
[2025-06-07T21:55:26.291Z] [CONSOLE] 
Node 1: Validate Form Data (n8n-nodes-base.if)
[2025-06-07T21:55:26.291Z] [CONSOLE] 
Node 1: Validate Form Data (n8n-nodes-base.if)
[2025-06-07T21:55:26.291Z] [CONSOLE] 
Node 1: Validate Form Data (n8n-nodes-base.if)
[2025-06-07T21:55:26.291Z] [CONSOLE] 
Node 1: Validate Form Data (n8n-nodes-base.if)
[2025-06-07T21:55:26.291Z] [CONSOLE] 
Node 1: Validate Form Data (n8n-nodes-base.if)
[2025-06-07T21:55:26.291Z] [CONSOLE] 
Node 1: Validate Form Data (n8n-nodes-base.if)
[2025-06-07T21:55:26.291Z] [CONSOLE] Parameters: {
  "conditions": {
    "boolean": [
      {
        "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
        "value2": true
      }
    ],
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:55:26.291Z] [CONSOLE] Parameters: {
  "conditions": {
    "boolean": [
      {
        "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
        "value2": true
      }
    ],
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:55:26.291Z] [CONSOLE] Parameters: {
  "conditions": {
    "boolean": [
      {
        "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
        "value2": true
      }
    ],
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:55:26.291Z] [CONSOLE] Parameters: {
  "conditions": {
    "boolean": [
      {
        "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
        "value2": true
      }
    ],
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:55:26.291Z] [CONSOLE] Parameters: {
  "conditions": {
    "boolean": [
      {
        "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
        "value2": true
      }
    ],
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:55:26.292Z] [CONSOLE] Parameters: {
  "conditions": {
    "boolean": [
      {
        "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
        "value2": true
      }
    ],
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:55:26.292Z] [CONSOLE] Parameters: {
  "conditions": {
    "boolean": [
      {
        "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
        "value2": true
      }
    ],
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:55:26.292Z] [CONSOLE] Parameters: {
  "conditions": {
    "boolean": [
      {
        "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
        "value2": true
      }
    ],
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:55:26.292Z] [CONSOLE] Parameters: {
  "conditions": {
    "boolean": [
      {
        "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
        "value2": true
      }
    ],
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:55:26.292Z] [CONSOLE] Parameters: {
  "conditions": {
    "boolean": [
      {
        "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
        "value2": true
      }
    ],
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:55:26.292Z] [CONSOLE] Parameters: {
  "conditions": {
    "boolean": [
      {
        "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
        "value2": true
      }
    ],
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:55:26.292Z] [CONSOLE] 
Node 2: Format Data (n8n-nodes-base.set)
[2025-06-07T21:55:26.292Z] [CONSOLE] 
Node 2: Format Data (n8n-nodes-base.set)
[2025-06-07T21:55:26.292Z] [CONSOLE] 
Node 2: Format Data (n8n-nodes-base.set)
[2025-06-07T21:55:26.292Z] [CONSOLE] 
Node 2: Format Data (n8n-nodes-base.set)
[2025-06-07T21:55:26.292Z] [CONSOLE] 
Node 2: Format Data (n8n-nodes-base.set)
[2025-06-07T21:55:26.292Z] [CONSOLE] 
Node 2: Format Data (n8n-nodes-base.set)
[2025-06-07T21:55:26.292Z] [CONSOLE] 
Node 2: Format Data (n8n-nodes-base.set)
[2025-06-07T21:55:26.292Z] [CONSOLE] 
Node 2: Format Data (n8n-nodes-base.set)
[2025-06-07T21:55:26.292Z] [CONSOLE] 
Node 2: Format Data (n8n-nodes-base.set)
[2025-06-07T21:55:26.292Z] [CONSOLE] 
Node 2: Format Data (n8n-nodes-base.set)
[2025-06-07T21:55:26.292Z] [CONSOLE] 
Node 2: Format Data (n8n-nodes-base.set)
[2025-06-07T21:55:26.292Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "name",
        "value": "{{$json.answers['Name']}}"
      },
      {
        "name": "email",
        "value": "{{$json.answers['Email']}}"
      },
      {
        "name": "rating",
        "value": "{{$json.answers['Rating']}}"
      },
      {
        "name": "comments",
        "value": "{{$json.answers['Comments'] || ''}}"
      },
      {
        "name": "timestamp",
        "value": "{{$now.format('yyyy-MM-dd HH:mm:ss')}}"
      }
    ]
  }
}
[2025-06-07T21:55:26.292Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "name",
        "value": "{{$json.answers['Name']}}"
      },
      {
        "name": "email",
        "value": "{{$json.answers['Email']}}"
      },
      {
        "name": "rating",
        "value": "{{$json.answers['Rating']}}"
      },
      {
        "name": "comments",
        "value": "{{$json.answers['Comments'] || ''}}"
      },
      {
        "name": "timestamp",
        "value": "{{$now.format('yyyy-MM-dd HH:mm:ss')}}"
      }
    ]
  }
}
[2025-06-07T21:55:26.292Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "name",
        "value": "{{$json.answers['Name']}}"
      },
      {
        "name": "email",
        "value": "{{$json.answers['Email']}}"
      },
      {
        "name": "rating",
        "value": "{{$json.answers['Rating']}}"
      },
      {
        "name": "comments",
        "value": "{{$json.answers['Comments'] || ''}}"
      },
      {
        "name": "timestamp",
        "value": "{{$now.format('yyyy-MM-dd HH:mm:ss')}}"
      }
    ]
  }
}
[2025-06-07T21:55:26.292Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "name",
        "value": "{{$json.answers['Name']}}"
      },
      {
        "name": "email",
        "value": "{{$json.answers['Email']}}"
      },
      {
        "name": "rating",
        "value": "{{$json.answers['Rating']}}"
      },
      {
        "name": "comments",
        "value": "{{$json.answers['Comments'] || ''}}"
      },
      {
        "name": "timestamp",
        "value": "{{$now.format('yyyy-MM-dd HH:mm:ss')}}"
      }
    ]
  }
}
[2025-06-07T21:55:26.292Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "name",
        "value": "{{$json.answers['Name']}}"
      },
      {
        "name": "email",
        "value": "{{$json.answers['Email']}}"
      },
      {
        "name": "rating",
        "value": "{{$json.answers['Rating']}}"
      },
      {
        "name": "comments",
        "value": "{{$json.answers['Comments'] || ''}}"
      },
      {
        "name": "timestamp",
        "value": "{{$now.format('yyyy-MM-dd HH:mm:ss')}}"
      }
    ]
  }
}
[2025-06-07T21:55:26.293Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "name",
        "value": "{{$json.answers['Name']}}"
      },
      {
        "name": "email",
        "value": "{{$json.answers['Email']}}"
      },
      {
        "name": "rating",
        "value": "{{$json.answers['Rating']}}"
      },
      {
        "name": "comments",
        "value": "{{$json.answers['Comments'] || ''}}"
      },
      {
        "name": "timestamp",
        "value": "{{$now.format('yyyy-MM-dd HH:mm:ss')}}"
      }
    ]
  }
}
[2025-06-07T21:55:26.293Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "name",
        "value": "{{$json.answers['Name']}}"
      },
      {
        "name": "email",
        "value": "{{$json.answers['Email']}}"
      },
      {
        "name": "rating",
        "value": "{{$json.answers['Rating']}}"
      },
      {
        "name": "comments",
        "value": "{{$json.answers['Comments'] || ''}}"
      },
      {
        "name": "timestamp",
        "value": "{{$now.format('yyyy-MM-dd HH:mm:ss')}}"
      }
    ]
  }
}
[2025-06-07T21:55:26.293Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "name",
        "value": "{{$json.answers['Name']}}"
      },
      {
        "name": "email",
        "value": "{{$json.answers['Email']}}"
      },
      {
        "name": "rating",
        "value": "{{$json.answers['Rating']}}"
      },
      {
        "name": "comments",
        "value": "{{$json.answers['Comments'] || ''}}"
      },
      {
        "name": "timestamp",
        "value": "{{$now.format('yyyy-MM-dd HH:mm:ss')}}"
      }
    ]
  }
}
[2025-06-07T21:55:26.293Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "name",
        "value": "{{$json.answers['Name']}}"
      },
      {
        "name": "email",
        "value": "{{$json.answers['Email']}}"
      },
      {
        "name": "rating",
        "value": "{{$json.answers['Rating']}}"
      },
      {
        "name": "comments",
        "value": "{{$json.answers['Comments'] || ''}}"
      },
      {
        "name": "timestamp",
        "value": "{{$now.format('yyyy-MM-dd HH:mm:ss')}}"
      }
    ]
  }
}
[2025-06-07T21:55:26.293Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "name",
        "value": "{{$json.answers['Name']}}"
      },
      {
        "name": "email",
        "value": "{{$json.answers['Email']}}"
      },
      {
        "name": "rating",
        "value": "{{$json.answers['Rating']}}"
      },
      {
        "name": "comments",
        "value": "{{$json.answers['Comments'] || ''}}"
      },
      {
        "name": "timestamp",
        "value": "{{$now.format('yyyy-MM-dd HH:mm:ss')}}"
      }
    ]
  }
}
[2025-06-07T21:55:26.293Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "name",
        "value": "{{$json.answers['Name']}}"
      },
      {
        "name": "email",
        "value": "{{$json.answers['Email']}}"
      },
      {
        "name": "rating",
        "value": "{{$json.answers['Rating']}}"
      },
      {
        "name": "comments",
        "value": "{{$json.answers['Comments'] || ''}}"
      },
      {
        "name": "timestamp",
        "value": "{{$now.format('yyyy-MM-dd HH:mm:ss')}}"
      }
    ]
  }
}
[2025-06-07T21:55:26.293Z] [CONSOLE] 
Node 3: Append to Google Sheet (n8n-nodes-base.googleSheets)
[2025-06-07T21:55:26.293Z] [CONSOLE] 
Node 3: Append to Google Sheet (n8n-nodes-base.googleSheets)
[2025-06-07T21:55:26.293Z] [CONSOLE] 
Node 3: Append to Google Sheet (n8n-nodes-base.googleSheets)
[2025-06-07T21:55:26.293Z] [CONSOLE] 
Node 3: Append to Google Sheet (n8n-nodes-base.googleSheets)
[2025-06-07T21:55:26.293Z] [CONSOLE] 
Node 3: Append to Google Sheet (n8n-nodes-base.googleSheets)
[2025-06-07T21:55:26.293Z] [CONSOLE] 
Node 3: Append to Google Sheet (n8n-nodes-base.googleSheets)
[2025-06-07T21:55:26.293Z] [CONSOLE] 
Node 3: Append to Google Sheet (n8n-nodes-base.googleSheets)
[2025-06-07T21:55:26.293Z] [CONSOLE] 
Node 3: Append to Google Sheet (n8n-nodes-base.googleSheets)
[2025-06-07T21:55:26.293Z] [CONSOLE] 
Node 3: Append to Google Sheet (n8n-nodes-base.googleSheets)
[2025-06-07T21:55:26.293Z] [CONSOLE] 
Node 3: Append to Google Sheet (n8n-nodes-base.googleSheets)
[2025-06-07T21:55:26.293Z] [CONSOLE] 
Node 3: Append to Google Sheet (n8n-nodes-base.googleSheets)
[2025-06-07T21:55:26.293Z] [CONSOLE] Parameters: {
  "operation": "append",
  "sheetName": "Feedback Responses",
  "columns": {
    "mappingMode": "defineBelow",
    "value": {
      "A": "={{$json.name}}",
      "B": "={{$json[\"headers\"][\"from\"]}}",
      "C": "={{$json.rating}}",
      "D": "={{$json.comments}}",
      "E": "={{$json.timestamp}}"
    }
  }
}
[2025-06-07T21:55:26.293Z] [CONSOLE] Parameters: {
  "operation": "append",
  "sheetName": "Feedback Responses",
  "columns": {
    "mappingMode": "defineBelow",
    "value": {
      "A": "={{$json.name}}",
      "B": "={{$json[\"headers\"][\"from\"]}}",
      "C": "={{$json.rating}}",
      "D": "={{$json.comments}}",
      "E": "={{$json.timestamp}}"
    }
  }
}
[2025-06-07T21:55:26.293Z] [CONSOLE] Parameters: {
  "operation": "append",
  "sheetName": "Feedback Responses",
  "columns": {
    "mappingMode": "defineBelow",
    "value": {
      "A": "={{$json.name}}",
      "B": "={{$json[\"headers\"][\"from\"]}}",
      "C": "={{$json.rating}}",
      "D": "={{$json.comments}}",
      "E": "={{$json.timestamp}}"
    }
  }
}
[2025-06-07T21:55:26.293Z] [CONSOLE] Parameters: {
  "operation": "append",
  "sheetName": "Feedback Responses",
  "columns": {
    "mappingMode": "defineBelow",
    "value": {
      "A": "={{$json.name}}",
      "B": "={{$json[\"headers\"][\"from\"]}}",
      "C": "={{$json.rating}}",
      "D": "={{$json.comments}}",
      "E": "={{$json.timestamp}}"
    }
  }
}
[2025-06-07T21:55:26.294Z] [CONSOLE] Parameters: {
  "operation": "append",
  "sheetName": "Feedback Responses",
  "columns": {
    "mappingMode": "defineBelow",
    "value": {
      "A": "={{$json.name}}",
      "B": "={{$json[\"headers\"][\"from\"]}}",
      "C": "={{$json.rating}}",
      "D": "={{$json.comments}}",
      "E": "={{$json.timestamp}}"
    }
  }
}
[2025-06-07T21:55:26.294Z] [CONSOLE] Parameters: {
  "operation": "append",
  "sheetName": "Feedback Responses",
  "columns": {
    "mappingMode": "defineBelow",
    "value": {
      "A": "={{$json.name}}",
      "B": "={{$json[\"headers\"][\"from\"]}}",
      "C": "={{$json.rating}}",
      "D": "={{$json.comments}}",
      "E": "={{$json.timestamp}}"
    }
  }
}
[2025-06-07T21:55:26.294Z] [CONSOLE] Parameters: {
  "operation": "append",
  "sheetName": "Feedback Responses",
  "columns": {
    "mappingMode": "defineBelow",
    "value": {
      "A": "={{$json.name}}",
      "B": "={{$json[\"headers\"][\"from\"]}}",
      "C": "={{$json.rating}}",
      "D": "={{$json.comments}}",
      "E": "={{$json.timestamp}}"
    }
  }
}
[2025-06-07T21:55:26.294Z] [CONSOLE] Parameters: {
  "operation": "append",
  "sheetName": "Feedback Responses",
  "columns": {
    "mappingMode": "defineBelow",
    "value": {
      "A": "={{$json.name}}",
      "B": "={{$json[\"headers\"][\"from\"]}}",
      "C": "={{$json.rating}}",
      "D": "={{$json.comments}}",
      "E": "={{$json.timestamp}}"
    }
  }
}
[2025-06-07T21:55:26.294Z] [CONSOLE] Parameters: {
  "operation": "append",
  "sheetName": "Feedback Responses",
  "columns": {
    "mappingMode": "defineBelow",
    "value": {
      "A": "={{$json.name}}",
      "B": "={{$json[\"headers\"][\"from\"]}}",
      "C": "={{$json.rating}}",
      "D": "={{$json.comments}}",
      "E": "={{$json.timestamp}}"
    }
  }
}
[2025-06-07T21:55:26.294Z] [CONSOLE] Parameters: {
  "operation": "append",
  "sheetName": "Feedback Responses",
  "columns": {
    "mappingMode": "defineBelow",
    "value": {
      "A": "={{$json.name}}",
      "B": "={{$json[\"headers\"][\"from\"]}}",
      "C": "={{$json.rating}}",
      "D": "={{$json.comments}}",
      "E": "={{$json.timestamp}}"
    }
  }
}
[2025-06-07T21:55:26.294Z] [CONSOLE] Parameters: {
  "operation": "append",
  "sheetName": "Feedback Responses",
  "columns": {
    "mappingMode": "defineBelow",
    "value": {
      "A": "={{$json.name}}",
      "B": "={{$json[\"headers\"][\"from\"]}}",
      "C": "={{$json.rating}}",
      "D": "={{$json.comments}}",
      "E": "={{$json.timestamp}}"
    }
  }
}
[2025-06-07T21:55:26.294Z] [CONSOLE] 
Node 4: Check Rating (n8n-nodes-base.if)
[2025-06-07T21:55:26.294Z] [CONSOLE] 
Node 4: Check Rating (n8n-nodes-base.if)
[2025-06-07T21:55:26.294Z] [CONSOLE] 
Node 4: Check Rating (n8n-nodes-base.if)
[2025-06-07T21:55:26.294Z] [CONSOLE] 
Node 4: Check Rating (n8n-nodes-base.if)
[2025-06-07T21:55:26.294Z] [CONSOLE] 
Node 4: Check Rating (n8n-nodes-base.if)
[2025-06-07T21:55:26.294Z] [CONSOLE] 
Node 4: Check Rating (n8n-nodes-base.if)
[2025-06-07T21:55:26.294Z] [CONSOLE] 
Node 4: Check Rating (n8n-nodes-base.if)
[2025-06-07T21:55:26.294Z] [CONSOLE] 
Node 4: Check Rating (n8n-nodes-base.if)
[2025-06-07T21:55:26.294Z] [CONSOLE] 
Node 4: Check Rating (n8n-nodes-base.if)
[2025-06-07T21:55:26.294Z] [CONSOLE] 
Node 4: Check Rating (n8n-nodes-base.if)
[2025-06-07T21:55:26.294Z] [CONSOLE] 
Node 4: Check Rating (n8n-nodes-base.if)
[2025-06-07T21:55:26.294Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:55:26.294Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:55:26.294Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:55:26.294Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:55:26.294Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:55:26.294Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:55:26.294Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:55:26.294Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:55:26.294Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:55:26.294Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:55:26.294Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:55:26.294Z] [CONSOLE] 
Node 5: Send Thank You Email (n8n-nodes-base.gmail)
[2025-06-07T21:55:26.294Z] [CONSOLE] 
Node 5: Send Thank You Email (n8n-nodes-base.gmail)
[2025-06-07T21:55:26.294Z] [CONSOLE] 
Node 5: Send Thank You Email (n8n-nodes-base.gmail)
[2025-06-07T21:55:26.294Z] [CONSOLE] 
Node 5: Send Thank You Email (n8n-nodes-base.gmail)
[2025-06-07T21:55:26.294Z] [CONSOLE] 
Node 5: Send Thank You Email (n8n-nodes-base.gmail)
[2025-06-07T21:55:26.294Z] [CONSOLE] 
Node 5: Send Thank You Email (n8n-nodes-base.gmail)
[2025-06-07T21:55:26.294Z] [CONSOLE] 
Node 5: Send Thank You Email (n8n-nodes-base.gmail)
[2025-06-07T21:55:26.295Z] [CONSOLE] 
Node 5: Send Thank You Email (n8n-nodes-base.gmail)
[2025-06-07T21:55:26.295Z] [CONSOLE] 
Node 5: Send Thank You Email (n8n-nodes-base.gmail)
[2025-06-07T21:55:26.295Z] [CONSOLE] 
Node 5: Send Thank You Email (n8n-nodes-base.gmail)
[2025-06-07T21:55:26.295Z] [CONSOLE] 
Node 5: Send Thank You Email (n8n-nodes-base.gmail)
[2025-06-07T21:55:26.295Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "={{$node['Format Data'].json.email}}",
  "subject": "Thank you for your positive feedback!",
  "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for taking the time to provide feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe're thrilled to hear from you and appreciate your comments:\n\"{{$node['Format Data'].json.comments}}\"\n\nBest regards,\nCustomer Service Team",
  "resource": "message"
}
[2025-06-07T21:55:26.295Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "={{$node['Format Data'].json.email}}",
  "subject": "Thank you for your positive feedback!",
  "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for taking the time to provide feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe're thrilled to hear from you and appreciate your comments:\n\"{{$node['Format Data'].json.comments}}\"\n\nBest regards,\nCustomer Service Team",
  "resource": "message"
}
[2025-06-07T21:55:26.295Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "={{$node['Format Data'].json.email}}",
  "subject": "Thank you for your positive feedback!",
  "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for taking the time to provide feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe're thrilled to hear from you and appreciate your comments:\n\"{{$node['Format Data'].json.comments}}\"\n\nBest regards,\nCustomer Service Team",
  "resource": "message"
}
[2025-06-07T21:55:26.295Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "={{$node['Format Data'].json.email}}",
  "subject": "Thank you for your positive feedback!",
  "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for taking the time to provide feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe're thrilled to hear from you and appreciate your comments:\n\"{{$node['Format Data'].json.comments}}\"\n\nBest regards,\nCustomer Service Team",
  "resource": "message"
}
[2025-06-07T21:55:26.295Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "={{$node['Format Data'].json.email}}",
  "subject": "Thank you for your positive feedback!",
  "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for taking the time to provide feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe're thrilled to hear from you and appreciate your comments:\n\"{{$node['Format Data'].json.comments}}\"\n\nBest regards,\nCustomer Service Team",
  "resource": "message"
}
[2025-06-07T21:55:26.295Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "={{$node['Format Data'].json.email}}",
  "subject": "Thank you for your positive feedback!",
  "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for taking the time to provide feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe're thrilled to hear from you and appreciate your comments:\n\"{{$node['Format Data'].json.comments}}\"\n\nBest regards,\nCustomer Service Team",
  "resource": "message"
}
[2025-06-07T21:55:26.295Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "={{$node['Format Data'].json.email}}",
  "subject": "Thank you for your positive feedback!",
  "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for taking the time to provide feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe're thrilled to hear from you and appreciate your comments:\n\"{{$node['Format Data'].json.comments}}\"\n\nBest regards,\nCustomer Service Team",
  "resource": "message"
}
[2025-06-07T21:55:26.295Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "={{$node['Format Data'].json.email}}",
  "subject": "Thank you for your positive feedback!",
  "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for taking the time to provide feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe're thrilled to hear from you and appreciate your comments:\n\"{{$node['Format Data'].json.comments}}\"\n\nBest regards,\nCustomer Service Team",
  "resource": "message"
}
[2025-06-07T21:55:26.295Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "={{$node['Format Data'].json.email}}",
  "subject": "Thank you for your positive feedback!",
  "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for taking the time to provide feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe're thrilled to hear from you and appreciate your comments:\n\"{{$node['Format Data'].json.comments}}\"\n\nBest regards,\nCustomer Service Team",
  "resource": "message"
}
[2025-06-07T21:55:26.295Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "={{$node['Format Data'].json.email}}",
  "subject": "Thank you for your positive feedback!",
  "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for taking the time to provide feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe're thrilled to hear from you and appreciate your comments:\n\"{{$node['Format Data'].json.comments}}\"\n\nBest regards,\nCustomer Service Team",
  "resource": "message"
}
[2025-06-07T21:55:26.295Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "={{$node['Format Data'].json.email}}",
  "subject": "Thank you for your positive feedback!",
  "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for taking the time to provide feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe're thrilled to hear from you and appreciate your comments:\n\"{{$node['Format Data'].json.comments}}\"\n\nBest regards,\nCustomer Service Team",
  "resource": "message"
}
[2025-06-07T21:55:26.295Z] [CONSOLE] 
Node 6: Send Follow-up Email (n8n-nodes-base.gmail)
[2025-06-07T21:55:26.295Z] [CONSOLE] 
Node 6: Send Follow-up Email (n8n-nodes-base.gmail)
[2025-06-07T21:55:26.295Z] [CONSOLE] 
Node 6: Send Follow-up Email (n8n-nodes-base.gmail)
[2025-06-07T21:55:26.295Z] [CONSOLE] 
Node 6: Send Follow-up Email (n8n-nodes-base.gmail)
[2025-06-07T21:55:26.295Z] [CONSOLE] 
Node 6: Send Follow-up Email (n8n-nodes-base.gmail)
[2025-06-07T21:55:26.295Z] [CONSOLE] 
Node 6: Send Follow-up Email (n8n-nodes-base.gmail)
[2025-06-07T21:55:26.295Z] [CONSOLE] 
Node 6: Send Follow-up Email (n8n-nodes-base.gmail)
[2025-06-07T21:55:26.295Z] [CONSOLE] 
Node 6: Send Follow-up Email (n8n-nodes-base.gmail)
[2025-06-07T21:55:26.295Z] [CONSOLE] 
Node 6: Send Follow-up Email (n8n-nodes-base.gmail)
[2025-06-07T21:55:26.295Z] [CONSOLE] 
Node 6: Send Follow-up Email (n8n-nodes-base.gmail)
[2025-06-07T21:55:26.295Z] [CONSOLE] 
Node 6: Send Follow-up Email (n8n-nodes-base.gmail)
[2025-06-07T21:55:26.295Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "={{$node['Format Data'].json.email}}",
  "subject": "We'd love to hear more from you",
  "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for your feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe noticed your rating and would love to understand how we can improve. Your comments were:\n\"{{$node['Format Data'].json.comments}}\"\n\nWould you be willing to share more details about your experience? Please reply to this email or schedule a call with our team.\n\nBest regards,\nCustomer Success Team",
  "resource": "message"
}
[2025-06-07T21:55:26.295Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "={{$node['Format Data'].json.email}}",
  "subject": "We'd love to hear more from you",
  "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for your feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe noticed your rating and would love to understand how we can improve. Your comments were:\n\"{{$node['Format Data'].json.comments}}\"\n\nWould you be willing to share more details about your experience? Please reply to this email or schedule a call with our team.\n\nBest regards,\nCustomer Success Team",
  "resource": "message"
}
[2025-06-07T21:55:26.295Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "={{$node['Format Data'].json.email}}",
  "subject": "We'd love to hear more from you",
  "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for your feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe noticed your rating and would love to understand how we can improve. Your comments were:\n\"{{$node['Format Data'].json.comments}}\"\n\nWould you be willing to share more details about your experience? Please reply to this email or schedule a call with our team.\n\nBest regards,\nCustomer Success Team",
  "resource": "message"
}
[2025-06-07T21:55:26.295Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "={{$node['Format Data'].json.email}}",
  "subject": "We'd love to hear more from you",
  "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for your feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe noticed your rating and would love to understand how we can improve. Your comments were:\n\"{{$node['Format Data'].json.comments}}\"\n\nWould you be willing to share more details about your experience? Please reply to this email or schedule a call with our team.\n\nBest regards,\nCustomer Success Team",
  "resource": "message"
}
[2025-06-07T21:55:26.295Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "={{$node['Format Data'].json.email}}",
  "subject": "We'd love to hear more from you",
  "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for your feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe noticed your rating and would love to understand how we can improve. Your comments were:\n\"{{$node['Format Data'].json.comments}}\"\n\nWould you be willing to share more details about your experience? Please reply to this email or schedule a call with our team.\n\nBest regards,\nCustomer Success Team",
  "resource": "message"
}
[2025-06-07T21:55:26.295Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "={{$node['Format Data'].json.email}}",
  "subject": "We'd love to hear more from you",
  "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for your feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe noticed your rating and would love to understand how we can improve. Your comments were:\n\"{{$node['Format Data'].json.comments}}\"\n\nWould you be willing to share more details about your experience? Please reply to this email or schedule a call with our team.\n\nBest regards,\nCustomer Success Team",
  "resource": "message"
}
[2025-06-07T21:55:26.296Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "={{$node['Format Data'].json.email}}",
  "subject": "We'd love to hear more from you",
  "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for your feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe noticed your rating and would love to understand how we can improve. Your comments were:\n\"{{$node['Format Data'].json.comments}}\"\n\nWould you be willing to share more details about your experience? Please reply to this email or schedule a call with our team.\n\nBest regards,\nCustomer Success Team",
  "resource": "message"
}
[2025-06-07T21:55:26.296Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "={{$node['Format Data'].json.email}}",
  "subject": "We'd love to hear more from you",
  "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for your feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe noticed your rating and would love to understand how we can improve. Your comments were:\n\"{{$node['Format Data'].json.comments}}\"\n\nWould you be willing to share more details about your experience? Please reply to this email or schedule a call with our team.\n\nBest regards,\nCustomer Success Team",
  "resource": "message"
}
[2025-06-07T21:55:26.296Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "={{$node['Format Data'].json.email}}",
  "subject": "We'd love to hear more from you",
  "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for your feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe noticed your rating and would love to understand how we can improve. Your comments were:\n\"{{$node['Format Data'].json.comments}}\"\n\nWould you be willing to share more details about your experience? Please reply to this email or schedule a call with our team.\n\nBest regards,\nCustomer Success Team",
  "resource": "message"
}
[2025-06-07T21:55:26.296Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "={{$node['Format Data'].json.email}}",
  "subject": "We'd love to hear more from you",
  "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for your feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe noticed your rating and would love to understand how we can improve. Your comments were:\n\"{{$node['Format Data'].json.comments}}\"\n\nWould you be willing to share more details about your experience? Please reply to this email or schedule a call with our team.\n\nBest regards,\nCustomer Success Team",
  "resource": "message"
}
[2025-06-07T21:55:26.296Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "={{$node['Format Data'].json.email}}",
  "subject": "We'd love to hear more from you",
  "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for your feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe noticed your rating and would love to understand how we can improve. Your comments were:\n\"{{$node['Format Data'].json.comments}}\"\n\nWould you be willing to share more details about your experience? Please reply to this email or schedule a call with our team.\n\nBest regards,\nCustomer Success Team",
  "resource": "message"
}
[2025-06-07T21:55:26.296Z] [CONSOLE] 
Node 7: Notify Team on Slack (n8n-nodes-base.slack)
[2025-06-07T21:55:26.296Z] [CONSOLE] 
Node 7: Notify Team on Slack (n8n-nodes-base.slack)
[2025-06-07T21:55:26.296Z] [CONSOLE] 
Node 7: Notify Team on Slack (n8n-nodes-base.slack)
[2025-06-07T21:55:26.296Z] [CONSOLE] 
Node 7: Notify Team on Slack (n8n-nodes-base.slack)
[2025-06-07T21:55:26.296Z] [CONSOLE] 
Node 7: Notify Team on Slack (n8n-nodes-base.slack)
[2025-06-07T21:55:26.296Z] [CONSOLE] 
Node 7: Notify Team on Slack (n8n-nodes-base.slack)
[2025-06-07T21:55:26.296Z] [CONSOLE] 
Node 7: Notify Team on Slack (n8n-nodes-base.slack)
[2025-06-07T21:55:26.296Z] [CONSOLE] 
Node 7: Notify Team on Slack (n8n-nodes-base.slack)
[2025-06-07T21:55:26.296Z] [CONSOLE] 
Node 7: Notify Team on Slack (n8n-nodes-base.slack)
[2025-06-07T21:55:26.296Z] [CONSOLE] 
Node 7: Notify Team on Slack (n8n-nodes-base.slack)
[2025-06-07T21:55:26.296Z] [CONSOLE] 
Node 7: Notify Team on Slack (n8n-nodes-base.slack)
[2025-06-07T21:55:26.296Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#customer-feedback",
  "text": ":warning: Low Rating Alert\n*Customer:* {{$node['Format Data'].json.name}}\n*Email:* {{$node['Format Data'].json.email}}\n*Rating:* {{$node['Format Data'].json.rating}}/5\n*Comments:* {{$node['Format Data'].json.comments}}\n*Time:* {{$node['Format Data'].json.timestamp}}",
  "authentication": "accessToken"
}
[2025-06-07T21:55:26.296Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#customer-feedback",
  "text": ":warning: Low Rating Alert\n*Customer:* {{$node['Format Data'].json.name}}\n*Email:* {{$node['Format Data'].json.email}}\n*Rating:* {{$node['Format Data'].json.rating}}/5\n*Comments:* {{$node['Format Data'].json.comments}}\n*Time:* {{$node['Format Data'].json.timestamp}}",
  "authentication": "accessToken"
}
[2025-06-07T21:55:26.296Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#customer-feedback",
  "text": ":warning: Low Rating Alert\n*Customer:* {{$node['Format Data'].json.name}}\n*Email:* {{$node['Format Data'].json.email}}\n*Rating:* {{$node['Format Data'].json.rating}}/5\n*Comments:* {{$node['Format Data'].json.comments}}\n*Time:* {{$node['Format Data'].json.timestamp}}",
  "authentication": "accessToken"
}
[2025-06-07T21:55:26.296Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#customer-feedback",
  "text": ":warning: Low Rating Alert\n*Customer:* {{$node['Format Data'].json.name}}\n*Email:* {{$node['Format Data'].json.email}}\n*Rating:* {{$node['Format Data'].json.rating}}/5\n*Comments:* {{$node['Format Data'].json.comments}}\n*Time:* {{$node['Format Data'].json.timestamp}}",
  "authentication": "accessToken"
}
[2025-06-07T21:55:26.296Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#customer-feedback",
  "text": ":warning: Low Rating Alert\n*Customer:* {{$node['Format Data'].json.name}}\n*Email:* {{$node['Format Data'].json.email}}\n*Rating:* {{$node['Format Data'].json.rating}}/5\n*Comments:* {{$node['Format Data'].json.comments}}\n*Time:* {{$node['Format Data'].json.timestamp}}",
  "authentication": "accessToken"
}
[2025-06-07T21:55:26.296Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#customer-feedback",
  "text": ":warning: Low Rating Alert\n*Customer:* {{$node['Format Data'].json.name}}\n*Email:* {{$node['Format Data'].json.email}}\n*Rating:* {{$node['Format Data'].json.rating}}/5\n*Comments:* {{$node['Format Data'].json.comments}}\n*Time:* {{$node['Format Data'].json.timestamp}}",
  "authentication": "accessToken"
}
[2025-06-07T21:55:26.296Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#customer-feedback",
  "text": ":warning: Low Rating Alert\n*Customer:* {{$node['Format Data'].json.name}}\n*Email:* {{$node['Format Data'].json.email}}\n*Rating:* {{$node['Format Data'].json.rating}}/5\n*Comments:* {{$node['Format Data'].json.comments}}\n*Time:* {{$node['Format Data'].json.timestamp}}",
  "authentication": "accessToken"
}
[2025-06-07T21:55:26.296Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#customer-feedback",
  "text": ":warning: Low Rating Alert\n*Customer:* {{$node['Format Data'].json.name}}\n*Email:* {{$node['Format Data'].json.email}}\n*Rating:* {{$node['Format Data'].json.rating}}/5\n*Comments:* {{$node['Format Data'].json.comments}}\n*Time:* {{$node['Format Data'].json.timestamp}}",
  "authentication": "accessToken"
}
[2025-06-07T21:55:26.296Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#customer-feedback",
  "text": ":warning: Low Rating Alert\n*Customer:* {{$node['Format Data'].json.name}}\n*Email:* {{$node['Format Data'].json.email}}\n*Rating:* {{$node['Format Data'].json.rating}}/5\n*Comments:* {{$node['Format Data'].json.comments}}\n*Time:* {{$node['Format Data'].json.timestamp}}",
  "authentication": "accessToken"
}
[2025-06-07T21:55:26.296Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#customer-feedback",
  "text": ":warning: Low Rating Alert\n*Customer:* {{$node['Format Data'].json.name}}\n*Email:* {{$node['Format Data'].json.email}}\n*Rating:* {{$node['Format Data'].json.rating}}/5\n*Comments:* {{$node['Format Data'].json.comments}}\n*Time:* {{$node['Format Data'].json.timestamp}}",
  "authentication": "accessToken"
}
[2025-06-07T21:55:26.296Z] [CONSOLE] Parameters: {
  "operation": "post",
  "channel": "#customer-feedback",
  "text": ":warning: Low Rating Alert\n*Customer:* {{$node['Format Data'].json.name}}\n*Email:* {{$node['Format Data'].json.email}}\n*Rating:* {{$node['Format Data'].json.rating}}/5\n*Comments:* {{$node['Format Data'].json.comments}}\n*Time:* {{$node['Format Data'].json.timestamp}}",
  "authentication": "accessToken"
}
[2025-06-07T21:55:26.297Z] [CONSOLE] 
Node 8: Error Handler (n8n-nodes-base.emailSend)
[2025-06-07T21:55:26.297Z] [CONSOLE] 
Node 8: Error Handler (n8n-nodes-base.emailSend)
[2025-06-07T21:55:26.297Z] [CONSOLE] 
Node 8: Error Handler (n8n-nodes-base.emailSend)
[2025-06-07T21:55:26.297Z] [CONSOLE] 
Node 8: Error Handler (n8n-nodes-base.emailSend)
[2025-06-07T21:55:26.297Z] [CONSOLE] 
Node 8: Error Handler (n8n-nodes-base.emailSend)
[2025-06-07T21:55:26.297Z] [CONSOLE] 
Node 8: Error Handler (n8n-nodes-base.emailSend)
[2025-06-07T21:55:26.297Z] [CONSOLE] 
Node 8: Error Handler (n8n-nodes-base.emailSend)
[2025-06-07T21:55:26.297Z] [CONSOLE] 
Node 8: Error Handler (n8n-nodes-base.emailSend)
[2025-06-07T21:55:26.297Z] [CONSOLE] 
Node 8: Error Handler (n8n-nodes-base.emailSend)
[2025-06-07T21:55:26.297Z] [CONSOLE] 
Node 8: Error Handler (n8n-nodes-base.emailSend)
[2025-06-07T21:55:26.297Z] [CONSOLE] 
Node 8: Error Handler (n8n-nodes-base.emailSend)
[2025-06-07T21:55:26.297Z] [CONSOLE] Parameters: {
  "fromEmail": "automation@company.com",
  "toEmail": "admin@company.com",
  "subject": "Form Processing Error",
  "text": "Error processing form submission:\n\nForm ID: {{$node['Google Forms Trigger'].json.formId}}\nResponse ID: {{$node['Google Forms Trigger'].json.responseId}}\n\nMissing required fields. Please check the form structure."
}
[2025-06-07T21:55:26.297Z] [CONSOLE] Parameters: {
  "fromEmail": "automation@company.com",
  "toEmail": "admin@company.com",
  "subject": "Form Processing Error",
  "text": "Error processing form submission:\n\nForm ID: {{$node['Google Forms Trigger'].json.formId}}\nResponse ID: {{$node['Google Forms Trigger'].json.responseId}}\n\nMissing required fields. Please check the form structure."
}
[2025-06-07T21:55:26.297Z] [CONSOLE] Parameters: {
  "fromEmail": "automation@company.com",
  "toEmail": "admin@company.com",
  "subject": "Form Processing Error",
  "text": "Error processing form submission:\n\nForm ID: {{$node['Google Forms Trigger'].json.formId}}\nResponse ID: {{$node['Google Forms Trigger'].json.responseId}}\n\nMissing required fields. Please check the form structure."
}
[2025-06-07T21:55:26.297Z] [CONSOLE] Parameters: {
  "fromEmail": "automation@company.com",
  "toEmail": "admin@company.com",
  "subject": "Form Processing Error",
  "text": "Error processing form submission:\n\nForm ID: {{$node['Google Forms Trigger'].json.formId}}\nResponse ID: {{$node['Google Forms Trigger'].json.responseId}}\n\nMissing required fields. Please check the form structure."
}
[2025-06-07T21:55:26.297Z] [CONSOLE] Parameters: {
  "fromEmail": "automation@company.com",
  "toEmail": "admin@company.com",
  "subject": "Form Processing Error",
  "text": "Error processing form submission:\n\nForm ID: {{$node['Google Forms Trigger'].json.formId}}\nResponse ID: {{$node['Google Forms Trigger'].json.responseId}}\n\nMissing required fields. Please check the form structure."
}
[2025-06-07T21:55:26.297Z] [CONSOLE] Parameters: {
  "fromEmail": "automation@company.com",
  "toEmail": "admin@company.com",
  "subject": "Form Processing Error",
  "text": "Error processing form submission:\n\nForm ID: {{$node['Google Forms Trigger'].json.formId}}\nResponse ID: {{$node['Google Forms Trigger'].json.responseId}}\n\nMissing required fields. Please check the form structure."
}
[2025-06-07T21:55:26.297Z] [CONSOLE] Parameters: {
  "fromEmail": "automation@company.com",
  "toEmail": "admin@company.com",
  "subject": "Form Processing Error",
  "text": "Error processing form submission:\n\nForm ID: {{$node['Google Forms Trigger'].json.formId}}\nResponse ID: {{$node['Google Forms Trigger'].json.responseId}}\n\nMissing required fields. Please check the form structure."
}
[2025-06-07T21:55:26.297Z] [CONSOLE] Parameters: {
  "fromEmail": "automation@company.com",
  "toEmail": "admin@company.com",
  "subject": "Form Processing Error",
  "text": "Error processing form submission:\n\nForm ID: {{$node['Google Forms Trigger'].json.formId}}\nResponse ID: {{$node['Google Forms Trigger'].json.responseId}}\n\nMissing required fields. Please check the form structure."
}
[2025-06-07T21:55:26.297Z] [CONSOLE] Parameters: {
  "fromEmail": "automation@company.com",
  "toEmail": "admin@company.com",
  "subject": "Form Processing Error",
  "text": "Error processing form submission:\n\nForm ID: {{$node['Google Forms Trigger'].json.formId}}\nResponse ID: {{$node['Google Forms Trigger'].json.responseId}}\n\nMissing required fields. Please check the form structure."
}
[2025-06-07T21:55:26.297Z] [CONSOLE] Parameters: {
  "fromEmail": "automation@company.com",
  "toEmail": "admin@company.com",
  "subject": "Form Processing Error",
  "text": "Error processing form submission:\n\nForm ID: {{$node['Google Forms Trigger'].json.formId}}\nResponse ID: {{$node['Google Forms Trigger'].json.responseId}}\n\nMissing required fields. Please check the form structure."
}
[2025-06-07T21:55:26.297Z] [CONSOLE] Parameters: {
  "fromEmail": "automation@company.com",
  "toEmail": "admin@company.com",
  "subject": "Form Processing Error",
  "text": "Error processing form submission:\n\nForm ID: {{$node['Google Forms Trigger'].json.formId}}\nResponse ID: {{$node['Google Forms Trigger'].json.responseId}}\n\nMissing required fields. Please check the form structure."
}
[2025-06-07T21:55:26.297Z] [CONSOLE] 
Node 9: Log Success (n8n-nodes-base.googleDrive)
[2025-06-07T21:55:26.297Z] [CONSOLE] 
Node 9: Log Success (n8n-nodes-base.googleDrive)
[2025-06-07T21:55:26.297Z] [CONSOLE] 
Node 9: Log Success (n8n-nodes-base.googleDrive)
[2025-06-07T21:55:26.297Z] [CONSOLE] 
Node 9: Log Success (n8n-nodes-base.googleDrive)
[2025-06-07T21:55:26.297Z] [CONSOLE] 
Node 9: Log Success (n8n-nodes-base.googleDrive)
[2025-06-07T21:55:26.297Z] [CONSOLE] 
Node 9: Log Success (n8n-nodes-base.googleDrive)
[2025-06-07T21:55:26.297Z] [CONSOLE] 
Node 9: Log Success (n8n-nodes-base.googleDrive)
[2025-06-07T21:55:26.297Z] [CONSOLE] 
Node 9: Log Success (n8n-nodes-base.googleDrive)
[2025-06-07T21:55:26.297Z] [CONSOLE] 
Node 9: Log Success (n8n-nodes-base.googleDrive)
[2025-06-07T21:55:26.297Z] [CONSOLE] 
Node 9: Log Success (n8n-nodes-base.googleDrive)
[2025-06-07T21:55:26.297Z] [CONSOLE] 
Node 9: Log Success (n8n-nodes-base.googleDrive)
[2025-06-07T21:55:26.297Z] [CONSOLE] Parameters: {
  "operation": "upload",
  "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": {
    "__rl": true,
    "mode": "list",
    "value": "root",
    "cachedResultName": "/ (Root folder)"
  },
  "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
  "options": {}
}
[2025-06-07T21:55:26.298Z] [CONSOLE] Parameters: {
  "operation": "upload",
  "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": {
    "__rl": true,
    "mode": "list",
    "value": "root",
    "cachedResultName": "/ (Root folder)"
  },
  "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
  "options": {}
}
[2025-06-07T21:55:26.298Z] [CONSOLE] Parameters: {
  "operation": "upload",
  "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": {
    "__rl": true,
    "mode": "list",
    "value": "root",
    "cachedResultName": "/ (Root folder)"
  },
  "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
  "options": {}
}
[2025-06-07T21:55:26.298Z] [CONSOLE] Parameters: {
  "operation": "upload",
  "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": {
    "__rl": true,
    "mode": "list",
    "value": "root",
    "cachedResultName": "/ (Root folder)"
  },
  "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
  "options": {}
}
[2025-06-07T21:55:26.298Z] [CONSOLE] Parameters: {
  "operation": "upload",
  "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": {
    "__rl": true,
    "mode": "list",
    "value": "root",
    "cachedResultName": "/ (Root folder)"
  },
  "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
  "options": {}
}
[2025-06-07T21:55:26.298Z] [CONSOLE] Parameters: {
  "operation": "upload",
  "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": {
    "__rl": true,
    "mode": "list",
    "value": "root",
    "cachedResultName": "/ (Root folder)"
  },
  "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
  "options": {}
}
[2025-06-07T21:55:26.298Z] [CONSOLE] Parameters: {
  "operation": "upload",
  "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": {
    "__rl": true,
    "mode": "list",
    "value": "root",
    "cachedResultName": "/ (Root folder)"
  },
  "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
  "options": {}
}
[2025-06-07T21:55:26.298Z] [CONSOLE] Parameters: {
  "operation": "upload",
  "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": {
    "__rl": true,
    "mode": "list",
    "value": "root",
    "cachedResultName": "/ (Root folder)"
  },
  "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
  "options": {}
}
[2025-06-07T21:55:26.298Z] [CONSOLE] Parameters: {
  "operation": "upload",
  "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": {
    "__rl": true,
    "mode": "list",
    "value": "root",
    "cachedResultName": "/ (Root folder)"
  },
  "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
  "options": {}
}
[2025-06-07T21:55:26.298Z] [CONSOLE] Parameters: {
  "operation": "upload",
  "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": {
    "__rl": true,
    "mode": "list",
    "value": "root",
    "cachedResultName": "/ (Root folder)"
  },
  "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
  "options": {}
}
[2025-06-07T21:55:26.298Z] [CONSOLE] Parameters: {
  "operation": "upload",
  "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
  "driveId": {
    "__rl": true,
    "mode": "list",
    "value": "My Drive"
  },
  "folderId": {
    "__rl": true,
    "mode": "list",
    "value": "root",
    "cachedResultName": "/ (Root folder)"
  },
  "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
  "options": {}
}
[2025-06-07T21:55:26.298Z] [CONSOLE] 
Connections: {
  "Google Forms Trigger": {
    "main": [
      [
        {
          "node": "Validate Form Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Validate Form Data": {
    "main": [
      [
        {
          "node": "Format Data",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Error Handler",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Format Data": {
    "main": [
      [
        {
          "node": "Append to Google Sheet",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Append to Google Sheet": {
    "main": [
      [
        {
          "node": "Check Rating",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check Rating": {
    "main": [
      [
        {
          "node": "Send Thank You Email",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Send Follow-up Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Thank You Email": {
    "main": [
      [
        {
          "node": "Log Success",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Follow-up Email": {
    "main": [
      [
        {
          "node": "Notify Team on Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:55:26.298Z] [CONSOLE] 
Connections: {
  "Google Forms Trigger": {
    "main": [
      [
        {
          "node": "Validate Form Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Validate Form Data": {
    "main": [
      [
        {
          "node": "Format Data",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Error Handler",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Format Data": {
    "main": [
      [
        {
          "node": "Append to Google Sheet",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Append to Google Sheet": {
    "main": [
      [
        {
          "node": "Check Rating",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check Rating": {
    "main": [
      [
        {
          "node": "Send Thank You Email",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Send Follow-up Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Thank You Email": {
    "main": [
      [
        {
          "node": "Log Success",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Follow-up Email": {
    "main": [
      [
        {
          "node": "Notify Team on Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:55:26.298Z] [CONSOLE] 
Connections: {
  "Google Forms Trigger": {
    "main": [
      [
        {
          "node": "Validate Form Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Validate Form Data": {
    "main": [
      [
        {
          "node": "Format Data",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Error Handler",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Format Data": {
    "main": [
      [
        {
          "node": "Append to Google Sheet",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Append to Google Sheet": {
    "main": [
      [
        {
          "node": "Check Rating",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check Rating": {
    "main": [
      [
        {
          "node": "Send Thank You Email",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Send Follow-up Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Thank You Email": {
    "main": [
      [
        {
          "node": "Log Success",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Follow-up Email": {
    "main": [
      [
        {
          "node": "Notify Team on Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:55:26.298Z] [CONSOLE] 
Connections: {
  "Google Forms Trigger": {
    "main": [
      [
        {
          "node": "Validate Form Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Validate Form Data": {
    "main": [
      [
        {
          "node": "Format Data",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Error Handler",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Format Data": {
    "main": [
      [
        {
          "node": "Append to Google Sheet",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Append to Google Sheet": {
    "main": [
      [
        {
          "node": "Check Rating",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check Rating": {
    "main": [
      [
        {
          "node": "Send Thank You Email",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Send Follow-up Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Thank You Email": {
    "main": [
      [
        {
          "node": "Log Success",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Follow-up Email": {
    "main": [
      [
        {
          "node": "Notify Team on Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:55:26.298Z] [CONSOLE] 
Connections: {
  "Google Forms Trigger": {
    "main": [
      [
        {
          "node": "Validate Form Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Validate Form Data": {
    "main": [
      [
        {
          "node": "Format Data",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Error Handler",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Format Data": {
    "main": [
      [
        {
          "node": "Append to Google Sheet",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Append to Google Sheet": {
    "main": [
      [
        {
          "node": "Check Rating",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check Rating": {
    "main": [
      [
        {
          "node": "Send Thank You Email",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Send Follow-up Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Thank You Email": {
    "main": [
      [
        {
          "node": "Log Success",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Follow-up Email": {
    "main": [
      [
        {
          "node": "Notify Team on Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:55:26.298Z] [CONSOLE] 
Connections: {
  "Google Forms Trigger": {
    "main": [
      [
        {
          "node": "Validate Form Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Validate Form Data": {
    "main": [
      [
        {
          "node": "Format Data",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Error Handler",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Format Data": {
    "main": [
      [
        {
          "node": "Append to Google Sheet",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Append to Google Sheet": {
    "main": [
      [
        {
          "node": "Check Rating",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check Rating": {
    "main": [
      [
        {
          "node": "Send Thank You Email",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Send Follow-up Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Thank You Email": {
    "main": [
      [
        {
          "node": "Log Success",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Follow-up Email": {
    "main": [
      [
        {
          "node": "Notify Team on Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:55:26.298Z] [CONSOLE] 
Connections: {
  "Google Forms Trigger": {
    "main": [
      [
        {
          "node": "Validate Form Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Validate Form Data": {
    "main": [
      [
        {
          "node": "Format Data",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Error Handler",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Format Data": {
    "main": [
      [
        {
          "node": "Append to Google Sheet",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Append to Google Sheet": {
    "main": [
      [
        {
          "node": "Check Rating",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check Rating": {
    "main": [
      [
        {
          "node": "Send Thank You Email",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Send Follow-up Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Thank You Email": {
    "main": [
      [
        {
          "node": "Log Success",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Follow-up Email": {
    "main": [
      [
        {
          "node": "Notify Team on Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:55:26.298Z] [CONSOLE] 
Connections: {
  "Google Forms Trigger": {
    "main": [
      [
        {
          "node": "Validate Form Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Validate Form Data": {
    "main": [
      [
        {
          "node": "Format Data",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Error Handler",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Format Data": {
    "main": [
      [
        {
          "node": "Append to Google Sheet",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Append to Google Sheet": {
    "main": [
      [
        {
          "node": "Check Rating",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check Rating": {
    "main": [
      [
        {
          "node": "Send Thank You Email",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Send Follow-up Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Thank You Email": {
    "main": [
      [
        {
          "node": "Log Success",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Follow-up Email": {
    "main": [
      [
        {
          "node": "Notify Team on Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:55:26.298Z] [CONSOLE] 
Connections: {
  "Google Forms Trigger": {
    "main": [
      [
        {
          "node": "Validate Form Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Validate Form Data": {
    "main": [
      [
        {
          "node": "Format Data",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Error Handler",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Format Data": {
    "main": [
      [
        {
          "node": "Append to Google Sheet",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Append to Google Sheet": {
    "main": [
      [
        {
          "node": "Check Rating",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check Rating": {
    "main": [
      [
        {
          "node": "Send Thank You Email",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Send Follow-up Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Thank You Email": {
    "main": [
      [
        {
          "node": "Log Success",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Follow-up Email": {
    "main": [
      [
        {
          "node": "Notify Team on Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:55:26.298Z] [CONSOLE] 
Connections: {
  "Google Forms Trigger": {
    "main": [
      [
        {
          "node": "Validate Form Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Validate Form Data": {
    "main": [
      [
        {
          "node": "Format Data",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Error Handler",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Format Data": {
    "main": [
      [
        {
          "node": "Append to Google Sheet",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Append to Google Sheet": {
    "main": [
      [
        {
          "node": "Check Rating",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check Rating": {
    "main": [
      [
        {
          "node": "Send Thank You Email",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Send Follow-up Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Thank You Email": {
    "main": [
      [
        {
          "node": "Log Success",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Follow-up Email": {
    "main": [
      [
        {
          "node": "Notify Team on Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:55:26.298Z] [CONSOLE] 
Connections: {
  "Google Forms Trigger": {
    "main": [
      [
        {
          "node": "Validate Form Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Validate Form Data": {
    "main": [
      [
        {
          "node": "Format Data",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Error Handler",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Format Data": {
    "main": [
      [
        {
          "node": "Append to Google Sheet",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Append to Google Sheet": {
    "main": [
      [
        {
          "node": "Check Rating",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check Rating": {
    "main": [
      [
        {
          "node": "Send Thank You Email",
          "type": "main",
          "index": 0
        }
      ],
      [
        {
          "node": "Send Follow-up Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Thank You Email": {
    "main": [
      [
        {
          "node": "Log Success",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send Follow-up Email": {
    "main": [
      [
        {
          "node": "Notify Team on Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:55:26.298Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "",
  "timezone": "America/Los_Angeles",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1
}
[2025-06-07T21:55:26.298Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "",
  "timezone": "America/Los_Angeles",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1
}
[2025-06-07T21:55:26.298Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "",
  "timezone": "America/Los_Angeles",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1
}
[2025-06-07T21:55:26.298Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "",
  "timezone": "America/Los_Angeles",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1
}
[2025-06-07T21:55:26.298Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "",
  "timezone": "America/Los_Angeles",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1
}
[2025-06-07T21:55:26.298Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "",
  "timezone": "America/Los_Angeles",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1
}
[2025-06-07T21:55:26.298Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "",
  "timezone": "America/Los_Angeles",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1
}
[2025-06-07T21:55:26.298Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "",
  "timezone": "America/Los_Angeles",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1
}
[2025-06-07T21:55:26.298Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "",
  "timezone": "America/Los_Angeles",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1
}
[2025-06-07T21:55:26.298Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "",
  "timezone": "America/Los_Angeles",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1
}
[2025-06-07T21:55:26.298Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "",
  "timezone": "America/Los_Angeles",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1
}
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:55:26.299Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:55:26.300Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:55:26.300Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:55:26.300Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:55:26.300Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:55:26.300Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:55:26.300Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:55:26.300Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:55:26.300Z] [CONSOLE]   ✅ FINAL: Google Drive node "Log Success" already has options field
[2025-06-07T21:55:26.300Z] [CONSOLE]   ✅ FINAL: Google Drive node "Log Success" already has options field
[2025-06-07T21:55:26.300Z] [CONSOLE]   ✅ FINAL: Google Drive node "Log Success" already has options field
[2025-06-07T21:55:26.300Z] [CONSOLE]   ✅ FINAL: Google Drive node "Log Success" already has options field
[2025-06-07T21:55:26.300Z] [CONSOLE]   ✅ FINAL: Google Drive node "Log Success" already has options field
[2025-06-07T21:55:26.300Z] [CONSOLE]   ✅ FINAL: Google Drive node "Log Success" already has options field
[2025-06-07T21:55:26.300Z] [CONSOLE]   ✅ FINAL: Google Drive node "Log Success" already has options field
[2025-06-07T21:55:26.300Z] [CONSOLE]   ✅ FINAL: Google Drive node "Log Success" already has options field
[2025-06-07T21:55:26.300Z] [CONSOLE]   ✅ FINAL: Google Drive node "Log Success" already has options field
[2025-06-07T21:55:26.300Z] [CONSOLE]   ✅ FINAL: Google Drive node "Log Success" already has options field
[2025-06-07T21:55:26.300Z] [CONSOLE]   ✅ FINAL: Google Drive node "Log Success" already has options field
[2025-06-07T21:55:26.300Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:55:26.300Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:55:26.300Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:55:26.300Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:55:26.300Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:55:26.300Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:55:26.301Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:55:26.301Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:55:26.301Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:55:26.301Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:55:26.301Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:55:26.301Z] [CONSOLE] 🔍 FINAL CHECK: Google Drive node "Log Success" has options: true
[2025-06-07T21:55:26.301Z] [CONSOLE] 🔍 FINAL CHECK: Google Drive node "Log Success" has options: true
[2025-06-07T21:55:26.301Z] [CONSOLE] 🔍 FINAL CHECK: Google Drive node "Log Success" has options: true
[2025-06-07T21:55:26.301Z] [CONSOLE] 🔍 FINAL CHECK: Google Drive node "Log Success" has options: true
[2025-06-07T21:55:26.301Z] [CONSOLE] 🔍 FINAL CHECK: Google Drive node "Log Success" has options: true
[2025-06-07T21:55:26.301Z] [CONSOLE] 🔍 FINAL CHECK: Google Drive node "Log Success" has options: true
[2025-06-07T21:55:26.301Z] [CONSOLE] 🔍 FINAL CHECK: Google Drive node "Log Success" has options: true
[2025-06-07T21:55:26.301Z] [CONSOLE] 🔍 FINAL CHECK: Google Drive node "Log Success" has options: true
[2025-06-07T21:55:26.301Z] [CONSOLE] 🔍 FINAL CHECK: Google Drive node "Log Success" has options: true
[2025-06-07T21:55:26.301Z] [CONSOLE] 🔍 FINAL CHECK: Google Drive node "Log Success" has options: true
[2025-06-07T21:55:26.301Z] [CONSOLE] 🔍 FINAL CHECK: Google Drive node "Log Success" has options: true
[2025-06-07T21:55:26.301Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:55:26.301Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:55:26.301Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:55:26.301Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:55:26.301Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:55:26.301Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:55:26.301Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:55:26.302Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:55:26.302Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:55:26.302Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:55:26.302Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:55:26.302Z] [INFO] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:55:26.302Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:55:26.302Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:55:26.302Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:55:26.302Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:55:26.302Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:55:26.302Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:55:26.302Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:55:26.302Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:55:26.302Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:55:26.302Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:55:26.302Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:55:26.302Z] [CONSOLE] 🔍 Google Drive nodes AFTER formatFixer:
[2025-06-07T21:55:26.302Z] [CONSOLE] 🔍 Google Drive nodes AFTER formatFixer:
[2025-06-07T21:55:26.302Z] [CONSOLE] 🔍 Google Drive nodes AFTER formatFixer:
[2025-06-07T21:55:26.302Z] [CONSOLE] 🔍 Google Drive nodes AFTER formatFixer:
[2025-06-07T21:55:26.302Z] [CONSOLE] 🔍 Google Drive nodes AFTER formatFixer:
[2025-06-07T21:55:26.302Z] [CONSOLE] 🔍 Google Drive nodes AFTER formatFixer:
[2025-06-07T21:55:26.302Z] [CONSOLE] 🔍 Google Drive nodes AFTER formatFixer:
[2025-06-07T21:55:26.302Z] [CONSOLE] 🔍 Google Drive nodes AFTER formatFixer:
[2025-06-07T21:55:26.302Z] [CONSOLE] 🔍 Google Drive nodes AFTER formatFixer:
[2025-06-07T21:55:26.302Z] [CONSOLE] 🔍 Google Drive nodes AFTER formatFixer:
[2025-06-07T21:55:26.302Z] [CONSOLE] 🔍 Google Drive nodes AFTER formatFixer:
[2025-06-07T21:55:26.302Z] [CONSOLE]   - Log Success: parents = undefined
[2025-06-07T21:55:26.302Z] [CONSOLE]   - Log Success: parents = undefined
[2025-06-07T21:55:26.302Z] [CONSOLE]   - Log Success: parents = undefined
[2025-06-07T21:55:26.302Z] [CONSOLE]   - Log Success: parents = undefined
[2025-06-07T21:55:26.302Z] [CONSOLE]   - Log Success: parents = undefined
[2025-06-07T21:55:26.302Z] [CONSOLE]   - Log Success: parents = undefined
[2025-06-07T21:55:26.303Z] [CONSOLE]   - Log Success: parents = undefined
[2025-06-07T21:55:26.303Z] [CONSOLE]   - Log Success: parents = undefined
[2025-06-07T21:55:26.303Z] [CONSOLE]   - Log Success: parents = undefined
[2025-06-07T21:55:26.303Z] [CONSOLE]   - Log Success: parents = undefined
[2025-06-07T21:55:26.303Z] [CONSOLE]   - Log Success: parents = undefined
[2025-06-07T21:55:26.303Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:55:26.303Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:55:26.303Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:55:26.303Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:55:26.303Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:55:26.303Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:55:26.303Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:55:26.303Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:55:26.303Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:55:26.303Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:55:26.303Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:55:26.303Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:26.303Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:26.303Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:26.303Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:26.303Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:26.303Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:26.303Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:26.303Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:26.303Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:26.303Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:26.303Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:26.303Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:26.303Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:26.303Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:26.303Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:26.303Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:26.303Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:26.303Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:26.303Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:26.303Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:26.303Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:26.303Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:26.303Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:26.304Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:26.304Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:26.304Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:26.304Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:26.304Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:26.304Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:26.304Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:26.304Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:26.304Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:26.304Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:26.304Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.304Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.304Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.304Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.304Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.304Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.304Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.304Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.304Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.304Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.304Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.304Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.304Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.304Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.304Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.304Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.304Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.304Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.304Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.304Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.304Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.304Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:26.304Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:55:26.304Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:55:26.304Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:55:26.304Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:55:26.304Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:55:26.305Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:55:26.305Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:55:26.305Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:55:26.305Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:55:26.305Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:55:26.305Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:55:26.305Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:55:26.305Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:55:26.305Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:55:26.305Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:55:26.305Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:55:26.305Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:55:26.305Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:55:26.305Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:55:26.305Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:55:26.305Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:55:26.305Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:55:26.305Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:55:26.305Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:55:26.305Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:55:26.305Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:55:26.305Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:55:26.305Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:55:26.305Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:55:26.305Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:55:26.305Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:55:26.305Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:55:26.305Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:55:26.306Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:55:26.306Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:55:26.306Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:55:26.306Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:55:26.306Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:55:26.306Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:55:26.306Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:55:26.306Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:55:26.306Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:55:26.306Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:55:26.306Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:55:26.306Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:55:26.306Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:55:26.306Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:55:26.306Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:55:26.306Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:55:26.306Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:55:26.306Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:55:26.306Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:55:26.306Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:55:26.306Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:55:26.307Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:55:26.307Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:55:26.307Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:55:26.307Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:55:26.307Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:55:26.307Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:55:26.307Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:55:26.307Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:55:26.307Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:55:26.307Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:55:26.307Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:55:26.307Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:55:26.307Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:55:26.307Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:55:26.307Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:55:26.307Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:55:26.307Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:55:26.307Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:55:26.307Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:55:26.307Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:55:26.307Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:55:26.307Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:55:26.307Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:55:26.307Z] [CONSOLE] 📋 Node count: 10
[2025-06-07T21:55:26.307Z] [CONSOLE] 📋 Node count: 10
[2025-06-07T21:55:26.307Z] [CONSOLE] 📋 Node count: 10
[2025-06-07T21:55:26.307Z] [CONSOLE] 📋 Node count: 10
[2025-06-07T21:55:26.307Z] [CONSOLE] 📋 Node count: 10
[2025-06-07T21:55:26.307Z] [CONSOLE] 📋 Node count: 10
[2025-06-07T21:55:26.307Z] [CONSOLE] 📋 Node count: 10
[2025-06-07T21:55:26.307Z] [CONSOLE] 📋 Node count: 10
[2025-06-07T21:55:26.307Z] [CONSOLE] 📋 Node count: 10
[2025-06-07T21:55:26.308Z] [CONSOLE] 📋 Node count: 10
[2025-06-07T21:55:26.308Z] [CONSOLE] 📋 Node count: 10
[2025-06-07T21:55:26.308Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:55:26.308Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:55:26.308Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:55:26.308Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:55:26.308Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:55:26.308Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:55:26.308Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:55:26.308Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:55:26.308Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:55:26.308Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:55:26.308Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:55:26.308Z] [CONSOLE] 
🔍 Google Drive nodes at Initial validation:
[2025-06-07T21:55:26.308Z] [CONSOLE] 
🔍 Google Drive nodes at Initial validation:
[2025-06-07T21:55:26.308Z] [CONSOLE] 
🔍 Google Drive nodes at Initial validation:
[2025-06-07T21:55:26.308Z] [CONSOLE] 
🔍 Google Drive nodes at Initial validation:
[2025-06-07T21:55:26.308Z] [CONSOLE] 
🔍 Google Drive nodes at Initial validation:
[2025-06-07T21:55:26.308Z] [CONSOLE] 
🔍 Google Drive nodes at Initial validation:
[2025-06-07T21:55:26.308Z] [CONSOLE] 
🔍 Google Drive nodes at Initial validation:
[2025-06-07T21:55:26.308Z] [CONSOLE] 
🔍 Google Drive nodes at Initial validation:
[2025-06-07T21:55:26.309Z] [CONSOLE] 
🔍 Google Drive nodes at Initial validation:
[2025-06-07T21:55:26.309Z] [CONSOLE] 
🔍 Google Drive nodes at Initial validation:
[2025-06-07T21:55:26.309Z] [CONSOLE] 
🔍 Google Drive nodes at Initial validation:
[2025-06-07T21:55:26.309Z] [CONSOLE]   - Log Success:
[2025-06-07T21:55:26.309Z] [CONSOLE]   - Log Success:
[2025-06-07T21:55:26.309Z] [CONSOLE]   - Log Success:
[2025-06-07T21:55:26.309Z] [CONSOLE]   - Log Success:
[2025-06-07T21:55:26.309Z] [CONSOLE]   - Log Success:
[2025-06-07T21:55:26.309Z] [CONSOLE]   - Log Success:
[2025-06-07T21:55:26.309Z] [CONSOLE]   - Log Success:
[2025-06-07T21:55:26.309Z] [CONSOLE]   - Log Success:
[2025-06-07T21:55:26.309Z] [CONSOLE]   - Log Success:
[2025-06-07T21:55:26.309Z] [CONSOLE]   - Log Success:
[2025-06-07T21:55:26.309Z] [CONSOLE]   - Log Success:
[2025-06-07T21:55:26.309Z] [CONSOLE]     parents: undefined
[2025-06-07T21:55:26.309Z] [CONSOLE]     parents: undefined
[2025-06-07T21:55:26.309Z] [CONSOLE]     parents: undefined
[2025-06-07T21:55:26.309Z] [CONSOLE]     parents: undefined
[2025-06-07T21:55:26.309Z] [CONSOLE]     parents: undefined
[2025-06-07T21:55:26.309Z] [CONSOLE]     parents: undefined
[2025-06-07T21:55:26.310Z] [CONSOLE]     parents: undefined
[2025-06-07T21:55:26.310Z] [CONSOLE]     parents: undefined
[2025-06-07T21:55:26.310Z] [CONSOLE]     parents: undefined
[2025-06-07T21:55:26.310Z] [CONSOLE]     parents: undefined
[2025-06-07T21:55:26.310Z] [CONSOLE]     parents: undefined
[2025-06-07T21:55:26.310Z] [CONSOLE]     operation: upload
[2025-06-07T21:55:26.310Z] [CONSOLE]     operation: upload
[2025-06-07T21:55:26.310Z] [CONSOLE]     operation: upload
[2025-06-07T21:55:26.310Z] [CONSOLE]     operation: upload
[2025-06-07T21:55:26.310Z] [CONSOLE]     operation: upload
[2025-06-07T21:55:26.310Z] [CONSOLE]     operation: upload
[2025-06-07T21:55:26.310Z] [CONSOLE]     operation: upload
[2025-06-07T21:55:26.310Z] [CONSOLE]     operation: upload
[2025-06-07T21:55:26.310Z] [CONSOLE]     operation: upload
[2025-06-07T21:55:26.310Z] [CONSOLE]     operation: upload
[2025-06-07T21:55:26.310Z] [CONSOLE]     operation: upload
[2025-06-07T21:55:26.310Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:55:26.310Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:55:26.310Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:55:26.310Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:55:26.310Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:55:26.310Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:55:26.310Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:55:26.310Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:55:26.310Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:55:26.311Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:55:26.311Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:55:26.311Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333326311",
  "nodes": [
    {
      "id": "ezd6n1f8",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "formId": "1xyz789abc123",
        "resolveData": true
      }
    },
    {
      "id": "ia71z5kc",
      "name": "Validate Form Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
              "value2": true
            }
          ],
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "wamldxpu",
      "name": "Format Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "name",
              "value": "{{$json.answers['Name']}}"
            },
            {
              "name": "email",
              "value": "{{$json.answers['Email']}}"
            },
            {
              "name": "rating",
              "value": "{{$json.answers['Rating']}}"
            },
            {
              "name": "comments",
              "value": "{{$json.answers['Comments'] || ''}}"
            },
            {
              "name": "timestamp",
              "value": "{{$now.format('yyyy-MM-dd HH:mm:ss')}}"
            }
          ]
        }
      }
    },
    {
      "id": "nm0nvkll",
      "name": "Append to Google Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        850,
        200
      ],
      "parameters": {
        "operation": "append",
        "sheetName": "Feedback Responses",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "A": "={{$json.name}}",
            "B": "={{$json[\"headers\"][\"from\"]}}",
            "C": "={{$json.rating}}",
            "D": "={{$json.comments}}",
            "E": "={{$json.timestamp}}"
          }
        }
      }
    },
    {
      "id": "ajir8kpi",
      "name": "Check Rating",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1050,
        200
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "ofw6zuvu",
      "name": "Send Thank You Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1250,
        100
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "={{$node['Format Data'].json.email}}",
        "subject": "Thank you for your positive feedback!",
        "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for taking the time to provide feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe're thrilled to hear from you and appreciate your comments:\n\"{{$node['Format Data'].json.comments}}\"\n\nBest regards,\nCustomer Service Team",
        "resource": "message"
      }
    },
    {
      "id": "stfuibco",
      "name": "Send Follow-up Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1250,
        300
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "={{$node['Format Data'].json.email}}",
        "subject": "We'd love to hear more from you",
        "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for your feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe noticed your rating and would love to understand how we can improve. Your comments were:\n\"{{$node['Format Data'].json.comments}}\"\n\nWould you be willing to share more details about your experience? Please reply to this email or schedule a call with our team.\n\nBest regards,\nCustomer Success Team",
        "resource": "message"
      }
    },
    {
      "id": "exgbrypu",
      "name": "Notify Team on Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        1450,
        300
      ],
      "parameters": {
        "operation": "post",
        "channel": "#customer-feedback",
        "text": ":warning: Low Rating Alert\n*Customer:* {{$node['Format Data'].json.name}}\n*Email:* {{$node['Format Data'].json.email}}\n*Rating:* {{$node['Format Data'].json.rating}}/5\n*Comments:* {{$node['Format Data'].json.comments}}\n*Time:* {{$node['Format Data'].json.timestamp}}",
        "authentication": "accessToken"
      }
    },
    {
      "id": "04usjkti",
      "name": "Error Handler",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        650,
        400
      ],
      "parameters": {
        "fromEmail": "automation@company.com",
        "toEmail": "admin@company.com",
        "subject": "Form Processing Error",
        "text": "Error processing form submission:\n\nForm ID: {{$node['Google Forms Trigger'].json.formId}}\nResponse ID: {{$node['Google Forms Trigger'].json.responseId}}\n\nMissing required fields. Please check the form structure."
      }
    },
    {
      "id": "pz3m4zan",
      "name": "Log Success",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1450,
        100
      ],
      "parameters": {
        "operation": "upload",
        "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
        "options": {}
      }
    }
  ],
  "connections": {
    "Google Forms Trigger": {
      "main": [
        [
          {
            "node": "Validate Form Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Form Data": {
      "main": [
        [
          {
            "node": "Format Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Data": {
      "main": [
        [
          {
            "node": "Append to Google Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append to Google Sheet": {
      "main": [
        [
          {
            "node": "Check Rating",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Rating": {
      "main": [
        [
          {
            "node": "Send Thank You Email",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Follow-up Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Thank You Email": {
      "main": [
        [
          {
            "node": "Log Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Follow-up Email": {
      "main": [
        [
          {
            "node": "Notify Team on Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/Los_Angeles"
  }
}
[2025-06-07T21:55:26.311Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333326311",
  "nodes": [
    {
      "id": "ezd6n1f8",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "formId": "1xyz789abc123",
        "resolveData": true
      }
    },
    {
      "id": "ia71z5kc",
      "name": "Validate Form Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
              "value2": true
            }
          ],
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "wamldxpu",
      "name": "Format Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "name",
              "value": "{{$json.answers['Name']}}"
            },
            {
              "name": "email",
              "value": "{{$json.answers['Email']}}"
            },
            {
              "name": "rating",
              "value": "{{$json.answers['Rating']}}"
            },
            {
              "name": "comments",
              "value": "{{$json.answers['Comments'] || ''}}"
            },
            {
              "name": "timestamp",
              "value": "{{$now.format('yyyy-MM-dd HH:mm:ss')}}"
            }
          ]
        }
      }
    },
    {
      "id": "nm0nvkll",
      "name": "Append to Google Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        850,
        200
      ],
      "parameters": {
        "operation": "append",
        "sheetName": "Feedback Responses",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "A": "={{$json.name}}",
            "B": "={{$json[\"headers\"][\"from\"]}}",
            "C": "={{$json.rating}}",
            "D": "={{$json.comments}}",
            "E": "={{$json.timestamp}}"
          }
        }
      }
    },
    {
      "id": "ajir8kpi",
      "name": "Check Rating",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1050,
        200
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "ofw6zuvu",
      "name": "Send Thank You Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1250,
        100
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "={{$node['Format Data'].json.email}}",
        "subject": "Thank you for your positive feedback!",
        "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for taking the time to provide feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe're thrilled to hear from you and appreciate your comments:\n\"{{$node['Format Data'].json.comments}}\"\n\nBest regards,\nCustomer Service Team",
        "resource": "message"
      }
    },
    {
      "id": "stfuibco",
      "name": "Send Follow-up Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1250,
        300
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "={{$node['Format Data'].json.email}}",
        "subject": "We'd love to hear more from you",
        "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for your feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe noticed your rating and would love to understand how we can improve. Your comments were:\n\"{{$node['Format Data'].json.comments}}\"\n\nWould you be willing to share more details about your experience? Please reply to this email or schedule a call with our team.\n\nBest regards,\nCustomer Success Team",
        "resource": "message"
      }
    },
    {
      "id": "exgbrypu",
      "name": "Notify Team on Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        1450,
        300
      ],
      "parameters": {
        "operation": "post",
        "channel": "#customer-feedback",
        "text": ":warning: Low Rating Alert\n*Customer:* {{$node['Format Data'].json.name}}\n*Email:* {{$node['Format Data'].json.email}}\n*Rating:* {{$node['Format Data'].json.rating}}/5\n*Comments:* {{$node['Format Data'].json.comments}}\n*Time:* {{$node['Format Data'].json.timestamp}}",
        "authentication": "accessToken"
      }
    },
    {
      "id": "04usjkti",
      "name": "Error Handler",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        650,
        400
      ],
      "parameters": {
        "fromEmail": "automation@company.com",
        "toEmail": "admin@company.com",
        "subject": "Form Processing Error",
        "text": "Error processing form submission:\n\nForm ID: {{$node['Google Forms Trigger'].json.formId}}\nResponse ID: {{$node['Google Forms Trigger'].json.responseId}}\n\nMissing required fields. Please check the form structure."
      }
    },
    {
      "id": "pz3m4zan",
      "name": "Log Success",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1450,
        100
      ],
      "parameters": {
        "operation": "upload",
        "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
        "options": {}
      }
    }
  ],
  "connections": {
    "Google Forms Trigger": {
      "main": [
        [
          {
            "node": "Validate Form Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Form Data": {
      "main": [
        [
          {
            "node": "Format Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Data": {
      "main": [
        [
          {
            "node": "Append to Google Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append to Google Sheet": {
      "main": [
        [
          {
            "node": "Check Rating",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Rating": {
      "main": [
        [
          {
            "node": "Send Thank You Email",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Follow-up Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Thank You Email": {
      "main": [
        [
          {
            "node": "Log Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Follow-up Email": {
      "main": [
        [
          {
            "node": "Notify Team on Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/Los_Angeles"
  }
}
[2025-06-07T21:55:26.311Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333326311",
  "nodes": [
    {
      "id": "ezd6n1f8",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "formId": "1xyz789abc123",
        "resolveData": true
      }
    },
    {
      "id": "ia71z5kc",
      "name": "Validate Form Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
              "value2": true
            }
          ],
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "wamldxpu",
      "name": "Format Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "name",
              "value": "{{$json.answers['Name']}}"
            },
            {
              "name": "email",
              "value": "{{$json.answers['Email']}}"
            },
            {
              "name": "rating",
              "value": "{{$json.answers['Rating']}}"
            },
            {
              "name": "comments",
              "value": "{{$json.answers['Comments'] || ''}}"
            },
            {
              "name": "timestamp",
              "value": "{{$now.format('yyyy-MM-dd HH:mm:ss')}}"
            }
          ]
        }
      }
    },
    {
      "id": "nm0nvkll",
      "name": "Append to Google Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        850,
        200
      ],
      "parameters": {
        "operation": "append",
        "sheetName": "Feedback Responses",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "A": "={{$json.name}}",
            "B": "={{$json[\"headers\"][\"from\"]}}",
            "C": "={{$json.rating}}",
            "D": "={{$json.comments}}",
            "E": "={{$json.timestamp}}"
          }
        }
      }
    },
    {
      "id": "ajir8kpi",
      "name": "Check Rating",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1050,
        200
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "ofw6zuvu",
      "name": "Send Thank You Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1250,
        100
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "={{$node['Format Data'].json.email}}",
        "subject": "Thank you for your positive feedback!",
        "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for taking the time to provide feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe're thrilled to hear from you and appreciate your comments:\n\"{{$node['Format Data'].json.comments}}\"\n\nBest regards,\nCustomer Service Team",
        "resource": "message"
      }
    },
    {
      "id": "stfuibco",
      "name": "Send Follow-up Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1250,
        300
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "={{$node['Format Data'].json.email}}",
        "subject": "We'd love to hear more from you",
        "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for your feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe noticed your rating and would love to understand how we can improve. Your comments were:\n\"{{$node['Format Data'].json.comments}}\"\n\nWould you be willing to share more details about your experience? Please reply to this email or schedule a call with our team.\n\nBest regards,\nCustomer Success Team",
        "resource": "message"
      }
    },
    {
      "id": "exgbrypu",
      "name": "Notify Team on Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        1450,
        300
      ],
      "parameters": {
        "operation": "post",
        "channel": "#customer-feedback",
        "text": ":warning: Low Rating Alert\n*Customer:* {{$node['Format Data'].json.name}}\n*Email:* {{$node['Format Data'].json.email}}\n*Rating:* {{$node['Format Data'].json.rating}}/5\n*Comments:* {{$node['Format Data'].json.comments}}\n*Time:* {{$node['Format Data'].json.timestamp}}",
        "authentication": "accessToken"
      }
    },
    {
      "id": "04usjkti",
      "name": "Error Handler",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        650,
        400
      ],
      "parameters": {
        "fromEmail": "automation@company.com",
        "toEmail": "admin@company.com",
        "subject": "Form Processing Error",
        "text": "Error processing form submission:\n\nForm ID: {{$node['Google Forms Trigger'].json.formId}}\nResponse ID: {{$node['Google Forms Trigger'].json.responseId}}\n\nMissing required fields. Please check the form structure."
      }
    },
    {
      "id": "pz3m4zan",
      "name": "Log Success",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1450,
        100
      ],
      "parameters": {
        "operation": "upload",
        "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
        "options": {}
      }
    }
  ],
  "connections": {
    "Google Forms Trigger": {
      "main": [
        [
          {
            "node": "Validate Form Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Form Data": {
      "main": [
        [
          {
            "node": "Format Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Data": {
      "main": [
        [
          {
            "node": "Append to Google Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append to Google Sheet": {
      "main": [
        [
          {
            "node": "Check Rating",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Rating": {
      "main": [
        [
          {
            "node": "Send Thank You Email",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Follow-up Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Thank You Email": {
      "main": [
        [
          {
            "node": "Log Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Follow-up Email": {
      "main": [
        [
          {
            "node": "Notify Team on Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/Los_Angeles"
  }
}
[2025-06-07T21:55:26.312Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333326311",
  "nodes": [
    {
      "id": "ezd6n1f8",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "formId": "1xyz789abc123",
        "resolveData": true
      }
    },
    {
      "id": "ia71z5kc",
      "name": "Validate Form Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
              "value2": true
            }
          ],
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "wamldxpu",
      "name": "Format Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "name",
              "value": "{{$json.answers['Name']}}"
            },
            {
              "name": "email",
              "value": "{{$json.answers['Email']}}"
            },
            {
              "name": "rating",
              "value": "{{$json.answers['Rating']}}"
            },
            {
              "name": "comments",
              "value": "{{$json.answers['Comments'] || ''}}"
            },
            {
              "name": "timestamp",
              "value": "{{$now.format('yyyy-MM-dd HH:mm:ss')}}"
            }
          ]
        }
      }
    },
    {
      "id": "nm0nvkll",
      "name": "Append to Google Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        850,
        200
      ],
      "parameters": {
        "operation": "append",
        "sheetName": "Feedback Responses",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "A": "={{$json.name}}",
            "B": "={{$json[\"headers\"][\"from\"]}}",
            "C": "={{$json.rating}}",
            "D": "={{$json.comments}}",
            "E": "={{$json.timestamp}}"
          }
        }
      }
    },
    {
      "id": "ajir8kpi",
      "name": "Check Rating",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1050,
        200
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "ofw6zuvu",
      "name": "Send Thank You Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1250,
        100
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "={{$node['Format Data'].json.email}}",
        "subject": "Thank you for your positive feedback!",
        "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for taking the time to provide feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe're thrilled to hear from you and appreciate your comments:\n\"{{$node['Format Data'].json.comments}}\"\n\nBest regards,\nCustomer Service Team",
        "resource": "message"
      }
    },
    {
      "id": "stfuibco",
      "name": "Send Follow-up Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1250,
        300
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "={{$node['Format Data'].json.email}}",
        "subject": "We'd love to hear more from you",
        "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for your feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe noticed your rating and would love to understand how we can improve. Your comments were:\n\"{{$node['Format Data'].json.comments}}\"\n\nWould you be willing to share more details about your experience? Please reply to this email or schedule a call with our team.\n\nBest regards,\nCustomer Success Team",
        "resource": "message"
      }
    },
    {
      "id": "exgbrypu",
      "name": "Notify Team on Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        1450,
        300
      ],
      "parameters": {
        "operation": "post",
        "channel": "#customer-feedback",
        "text": ":warning: Low Rating Alert\n*Customer:* {{$node['Format Data'].json.name}}\n*Email:* {{$node['Format Data'].json.email}}\n*Rating:* {{$node['Format Data'].json.rating}}/5\n*Comments:* {{$node['Format Data'].json.comments}}\n*Time:* {{$node['Format Data'].json.timestamp}}",
        "authentication": "accessToken"
      }
    },
    {
      "id": "04usjkti",
      "name": "Error Handler",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        650,
        400
      ],
      "parameters": {
        "fromEmail": "automation@company.com",
        "toEmail": "admin@company.com",
        "subject": "Form Processing Error",
        "text": "Error processing form submission:\n\nForm ID: {{$node['Google Forms Trigger'].json.formId}}\nResponse ID: {{$node['Google Forms Trigger'].json.responseId}}\n\nMissing required fields. Please check the form structure."
      }
    },
    {
      "id": "pz3m4zan",
      "name": "Log Success",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1450,
        100
      ],
      "parameters": {
        "operation": "upload",
        "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
        "options": {}
      }
    }
  ],
  "connections": {
    "Google Forms Trigger": {
      "main": [
        [
          {
            "node": "Validate Form Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Form Data": {
      "main": [
        [
          {
            "node": "Format Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Data": {
      "main": [
        [
          {
            "node": "Append to Google Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append to Google Sheet": {
      "main": [
        [
          {
            "node": "Check Rating",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Rating": {
      "main": [
        [
          {
            "node": "Send Thank You Email",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Follow-up Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Thank You Email": {
      "main": [
        [
          {
            "node": "Log Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Follow-up Email": {
      "main": [
        [
          {
            "node": "Notify Team on Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/Los_Angeles"
  }
}
[2025-06-07T21:55:26.312Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333326311",
  "nodes": [
    {
      "id": "ezd6n1f8",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "formId": "1xyz789abc123",
        "resolveData": true
      }
    },
    {
      "id": "ia71z5kc",
      "name": "Validate Form Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
              "value2": true
            }
          ],
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "wamldxpu",
      "name": "Format Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "name",
              "value": "{{$json.answers['Name']}}"
            },
            {
              "name": "email",
              "value": "{{$json.answers['Email']}}"
            },
            {
              "name": "rating",
              "value": "{{$json.answers['Rating']}}"
            },
            {
              "name": "comments",
              "value": "{{$json.answers['Comments'] || ''}}"
            },
            {
              "name": "timestamp",
              "value": "{{$now.format('yyyy-MM-dd HH:mm:ss')}}"
            }
          ]
        }
      }
    },
    {
      "id": "nm0nvkll",
      "name": "Append to Google Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        850,
        200
      ],
      "parameters": {
        "operation": "append",
        "sheetName": "Feedback Responses",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "A": "={{$json.name}}",
            "B": "={{$json[\"headers\"][\"from\"]}}",
            "C": "={{$json.rating}}",
            "D": "={{$json.comments}}",
            "E": "={{$json.timestamp}}"
          }
        }
      }
    },
    {
      "id": "ajir8kpi",
      "name": "Check Rating",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1050,
        200
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "ofw6zuvu",
      "name": "Send Thank You Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1250,
        100
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "={{$node['Format Data'].json.email}}",
        "subject": "Thank you for your positive feedback!",
        "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for taking the time to provide feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe're thrilled to hear from you and appreciate your comments:\n\"{{$node['Format Data'].json.comments}}\"\n\nBest regards,\nCustomer Service Team",
        "resource": "message"
      }
    },
    {
      "id": "stfuibco",
      "name": "Send Follow-up Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1250,
        300
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "={{$node['Format Data'].json.email}}",
        "subject": "We'd love to hear more from you",
        "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for your feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe noticed your rating and would love to understand how we can improve. Your comments were:\n\"{{$node['Format Data'].json.comments}}\"\n\nWould you be willing to share more details about your experience? Please reply to this email or schedule a call with our team.\n\nBest regards,\nCustomer Success Team",
        "resource": "message"
      }
    },
    {
      "id": "exgbrypu",
      "name": "Notify Team on Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        1450,
        300
      ],
      "parameters": {
        "operation": "post",
        "channel": "#customer-feedback",
        "text": ":warning: Low Rating Alert\n*Customer:* {{$node['Format Data'].json.name}}\n*Email:* {{$node['Format Data'].json.email}}\n*Rating:* {{$node['Format Data'].json.rating}}/5\n*Comments:* {{$node['Format Data'].json.comments}}\n*Time:* {{$node['Format Data'].json.timestamp}}",
        "authentication": "accessToken"
      }
    },
    {
      "id": "04usjkti",
      "name": "Error Handler",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        650,
        400
      ],
      "parameters": {
        "fromEmail": "automation@company.com",
        "toEmail": "admin@company.com",
        "subject": "Form Processing Error",
        "text": "Error processing form submission:\n\nForm ID: {{$node['Google Forms Trigger'].json.formId}}\nResponse ID: {{$node['Google Forms Trigger'].json.responseId}}\n\nMissing required fields. Please check the form structure."
      }
    },
    {
      "id": "pz3m4zan",
      "name": "Log Success",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1450,
        100
      ],
      "parameters": {
        "operation": "upload",
        "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
        "options": {}
      }
    }
  ],
  "connections": {
    "Google Forms Trigger": {
      "main": [
        [
          {
            "node": "Validate Form Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Form Data": {
      "main": [
        [
          {
            "node": "Format Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Data": {
      "main": [
        [
          {
            "node": "Append to Google Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append to Google Sheet": {
      "main": [
        [
          {
            "node": "Check Rating",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Rating": {
      "main": [
        [
          {
            "node": "Send Thank You Email",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Follow-up Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Thank You Email": {
      "main": [
        [
          {
            "node": "Log Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Follow-up Email": {
      "main": [
        [
          {
            "node": "Notify Team on Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/Los_Angeles"
  }
}
[2025-06-07T21:55:26.312Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333326311",
  "nodes": [
    {
      "id": "ezd6n1f8",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "formId": "1xyz789abc123",
        "resolveData": true
      }
    },
    {
      "id": "ia71z5kc",
      "name": "Validate Form Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
              "value2": true
            }
          ],
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "wamldxpu",
      "name": "Format Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "name",
              "value": "{{$json.answers['Name']}}"
            },
            {
              "name": "email",
              "value": "{{$json.answers['Email']}}"
            },
            {
              "name": "rating",
              "value": "{{$json.answers['Rating']}}"
            },
            {
              "name": "comments",
              "value": "{{$json.answers['Comments'] || ''}}"
            },
            {
              "name": "timestamp",
              "value": "{{$now.format('yyyy-MM-dd HH:mm:ss')}}"
            }
          ]
        }
      }
    },
    {
      "id": "nm0nvkll",
      "name": "Append to Google Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        850,
        200
      ],
      "parameters": {
        "operation": "append",
        "sheetName": "Feedback Responses",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "A": "={{$json.name}}",
            "B": "={{$json[\"headers\"][\"from\"]}}",
            "C": "={{$json.rating}}",
            "D": "={{$json.comments}}",
            "E": "={{$json.timestamp}}"
          }
        }
      }
    },
    {
      "id": "ajir8kpi",
      "name": "Check Rating",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1050,
        200
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "ofw6zuvu",
      "name": "Send Thank You Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1250,
        100
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "={{$node['Format Data'].json.email}}",
        "subject": "Thank you for your positive feedback!",
        "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for taking the time to provide feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe're thrilled to hear from you and appreciate your comments:\n\"{{$node['Format Data'].json.comments}}\"\n\nBest regards,\nCustomer Service Team",
        "resource": "message"
      }
    },
    {
      "id": "stfuibco",
      "name": "Send Follow-up Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1250,
        300
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "={{$node['Format Data'].json.email}}",
        "subject": "We'd love to hear more from you",
        "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for your feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe noticed your rating and would love to understand how we can improve. Your comments were:\n\"{{$node['Format Data'].json.comments}}\"\n\nWould you be willing to share more details about your experience? Please reply to this email or schedule a call with our team.\n\nBest regards,\nCustomer Success Team",
        "resource": "message"
      }
    },
    {
      "id": "exgbrypu",
      "name": "Notify Team on Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        1450,
        300
      ],
      "parameters": {
        "operation": "post",
        "channel": "#customer-feedback",
        "text": ":warning: Low Rating Alert\n*Customer:* {{$node['Format Data'].json.name}}\n*Email:* {{$node['Format Data'].json.email}}\n*Rating:* {{$node['Format Data'].json.rating}}/5\n*Comments:* {{$node['Format Data'].json.comments}}\n*Time:* {{$node['Format Data'].json.timestamp}}",
        "authentication": "accessToken"
      }
    },
    {
      "id": "04usjkti",
      "name": "Error Handler",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        650,
        400
      ],
      "parameters": {
        "fromEmail": "automation@company.com",
        "toEmail": "admin@company.com",
        "subject": "Form Processing Error",
        "text": "Error processing form submission:\n\nForm ID: {{$node['Google Forms Trigger'].json.formId}}\nResponse ID: {{$node['Google Forms Trigger'].json.responseId}}\n\nMissing required fields. Please check the form structure."
      }
    },
    {
      "id": "pz3m4zan",
      "name": "Log Success",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1450,
        100
      ],
      "parameters": {
        "operation": "upload",
        "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
        "options": {}
      }
    }
  ],
  "connections": {
    "Google Forms Trigger": {
      "main": [
        [
          {
            "node": "Validate Form Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Form Data": {
      "main": [
        [
          {
            "node": "Format Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Data": {
      "main": [
        [
          {
            "node": "Append to Google Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append to Google Sheet": {
      "main": [
        [
          {
            "node": "Check Rating",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Rating": {
      "main": [
        [
          {
            "node": "Send Thank You Email",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Follow-up Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Thank You Email": {
      "main": [
        [
          {
            "node": "Log Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Follow-up Email": {
      "main": [
        [
          {
            "node": "Notify Team on Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/Los_Angeles"
  }
}
[2025-06-07T21:55:26.312Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333326311",
  "nodes": [
    {
      "id": "ezd6n1f8",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "formId": "1xyz789abc123",
        "resolveData": true
      }
    },
    {
      "id": "ia71z5kc",
      "name": "Validate Form Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
              "value2": true
            }
          ],
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "wamldxpu",
      "name": "Format Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "name",
              "value": "{{$json.answers['Name']}}"
            },
            {
              "name": "email",
              "value": "{{$json.answers['Email']}}"
            },
            {
              "name": "rating",
              "value": "{{$json.answers['Rating']}}"
            },
            {
              "name": "comments",
              "value": "{{$json.answers['Comments'] || ''}}"
            },
            {
              "name": "timestamp",
              "value": "{{$now.format('yyyy-MM-dd HH:mm:ss')}}"
            }
          ]
        }
      }
    },
    {
      "id": "nm0nvkll",
      "name": "Append to Google Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        850,
        200
      ],
      "parameters": {
        "operation": "append",
        "sheetName": "Feedback Responses",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "A": "={{$json.name}}",
            "B": "={{$json[\"headers\"][\"from\"]}}",
            "C": "={{$json.rating}}",
            "D": "={{$json.comments}}",
            "E": "={{$json.timestamp}}"
          }
        }
      }
    },
    {
      "id": "ajir8kpi",
      "name": "Check Rating",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1050,
        200
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "ofw6zuvu",
      "name": "Send Thank You Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1250,
        100
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "={{$node['Format Data'].json.email}}",
        "subject": "Thank you for your positive feedback!",
        "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for taking the time to provide feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe're thrilled to hear from you and appreciate your comments:\n\"{{$node['Format Data'].json.comments}}\"\n\nBest regards,\nCustomer Service Team",
        "resource": "message"
      }
    },
    {
      "id": "stfuibco",
      "name": "Send Follow-up Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1250,
        300
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "={{$node['Format Data'].json.email}}",
        "subject": "We'd love to hear more from you",
        "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for your feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe noticed your rating and would love to understand how we can improve. Your comments were:\n\"{{$node['Format Data'].json.comments}}\"\n\nWould you be willing to share more details about your experience? Please reply to this email or schedule a call with our team.\n\nBest regards,\nCustomer Success Team",
        "resource": "message"
      }
    },
    {
      "id": "exgbrypu",
      "name": "Notify Team on Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        1450,
        300
      ],
      "parameters": {
        "operation": "post",
        "channel": "#customer-feedback",
        "text": ":warning: Low Rating Alert\n*Customer:* {{$node['Format Data'].json.name}}\n*Email:* {{$node['Format Data'].json.email}}\n*Rating:* {{$node['Format Data'].json.rating}}/5\n*Comments:* {{$node['Format Data'].json.comments}}\n*Time:* {{$node['Format Data'].json.timestamp}}",
        "authentication": "accessToken"
      }
    },
    {
      "id": "04usjkti",
      "name": "Error Handler",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        650,
        400
      ],
      "parameters": {
        "fromEmail": "automation@company.com",
        "toEmail": "admin@company.com",
        "subject": "Form Processing Error",
        "text": "Error processing form submission:\n\nForm ID: {{$node['Google Forms Trigger'].json.formId}}\nResponse ID: {{$node['Google Forms Trigger'].json.responseId}}\n\nMissing required fields. Please check the form structure."
      }
    },
    {
      "id": "pz3m4zan",
      "name": "Log Success",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1450,
        100
      ],
      "parameters": {
        "operation": "upload",
        "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
        "options": {}
      }
    }
  ],
  "connections": {
    "Google Forms Trigger": {
      "main": [
        [
          {
            "node": "Validate Form Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Form Data": {
      "main": [
        [
          {
            "node": "Format Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Data": {
      "main": [
        [
          {
            "node": "Append to Google Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append to Google Sheet": {
      "main": [
        [
          {
            "node": "Check Rating",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Rating": {
      "main": [
        [
          {
            "node": "Send Thank You Email",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Follow-up Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Thank You Email": {
      "main": [
        [
          {
            "node": "Log Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Follow-up Email": {
      "main": [
        [
          {
            "node": "Notify Team on Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/Los_Angeles"
  }
}
[2025-06-07T21:55:26.312Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333326311",
  "nodes": [
    {
      "id": "ezd6n1f8",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "formId": "1xyz789abc123",
        "resolveData": true
      }
    },
    {
      "id": "ia71z5kc",
      "name": "Validate Form Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
              "value2": true
            }
          ],
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "wamldxpu",
      "name": "Format Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "name",
              "value": "{{$json.answers['Name']}}"
            },
            {
              "name": "email",
              "value": "{{$json.answers['Email']}}"
            },
            {
              "name": "rating",
              "value": "{{$json.answers['Rating']}}"
            },
            {
              "name": "comments",
              "value": "{{$json.answers['Comments'] || ''}}"
            },
            {
              "name": "timestamp",
              "value": "{{$now.format('yyyy-MM-dd HH:mm:ss')}}"
            }
          ]
        }
      }
    },
    {
      "id": "nm0nvkll",
      "name": "Append to Google Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        850,
        200
      ],
      "parameters": {
        "operation": "append",
        "sheetName": "Feedback Responses",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "A": "={{$json.name}}",
            "B": "={{$json[\"headers\"][\"from\"]}}",
            "C": "={{$json.rating}}",
            "D": "={{$json.comments}}",
            "E": "={{$json.timestamp}}"
          }
        }
      }
    },
    {
      "id": "ajir8kpi",
      "name": "Check Rating",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1050,
        200
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "ofw6zuvu",
      "name": "Send Thank You Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1250,
        100
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "={{$node['Format Data'].json.email}}",
        "subject": "Thank you for your positive feedback!",
        "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for taking the time to provide feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe're thrilled to hear from you and appreciate your comments:\n\"{{$node['Format Data'].json.comments}}\"\n\nBest regards,\nCustomer Service Team",
        "resource": "message"
      }
    },
    {
      "id": "stfuibco",
      "name": "Send Follow-up Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1250,
        300
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "={{$node['Format Data'].json.email}}",
        "subject": "We'd love to hear more from you",
        "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for your feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe noticed your rating and would love to understand how we can improve. Your comments were:\n\"{{$node['Format Data'].json.comments}}\"\n\nWould you be willing to share more details about your experience? Please reply to this email or schedule a call with our team.\n\nBest regards,\nCustomer Success Team",
        "resource": "message"
      }
    },
    {
      "id": "exgbrypu",
      "name": "Notify Team on Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        1450,
        300
      ],
      "parameters": {
        "operation": "post",
        "channel": "#customer-feedback",
        "text": ":warning: Low Rating Alert\n*Customer:* {{$node['Format Data'].json.name}}\n*Email:* {{$node['Format Data'].json.email}}\n*Rating:* {{$node['Format Data'].json.rating}}/5\n*Comments:* {{$node['Format Data'].json.comments}}\n*Time:* {{$node['Format Data'].json.timestamp}}",
        "authentication": "accessToken"
      }
    },
    {
      "id": "04usjkti",
      "name": "Error Handler",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        650,
        400
      ],
      "parameters": {
        "fromEmail": "automation@company.com",
        "toEmail": "admin@company.com",
        "subject": "Form Processing Error",
        "text": "Error processing form submission:\n\nForm ID: {{$node['Google Forms Trigger'].json.formId}}\nResponse ID: {{$node['Google Forms Trigger'].json.responseId}}\n\nMissing required fields. Please check the form structure."
      }
    },
    {
      "id": "pz3m4zan",
      "name": "Log Success",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1450,
        100
      ],
      "parameters": {
        "operation": "upload",
        "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
        "options": {}
      }
    }
  ],
  "connections": {
    "Google Forms Trigger": {
      "main": [
        [
          {
            "node": "Validate Form Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Form Data": {
      "main": [
        [
          {
            "node": "Format Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Data": {
      "main": [
        [
          {
            "node": "Append to Google Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append to Google Sheet": {
      "main": [
        [
          {
            "node": "Check Rating",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Rating": {
      "main": [
        [
          {
            "node": "Send Thank You Email",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Follow-up Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Thank You Email": {
      "main": [
        [
          {
            "node": "Log Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Follow-up Email": {
      "main": [
        [
          {
            "node": "Notify Team on Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/Los_Angeles"
  }
}
[2025-06-07T21:55:26.312Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333326311",
  "nodes": [
    {
      "id": "ezd6n1f8",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "formId": "1xyz789abc123",
        "resolveData": true
      }
    },
    {
      "id": "ia71z5kc",
      "name": "Validate Form Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
              "value2": true
            }
          ],
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "wamldxpu",
      "name": "Format Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "name",
              "value": "{{$json.answers['Name']}}"
            },
            {
              "name": "email",
              "value": "{{$json.answers['Email']}}"
            },
            {
              "name": "rating",
              "value": "{{$json.answers['Rating']}}"
            },
            {
              "name": "comments",
              "value": "{{$json.answers['Comments'] || ''}}"
            },
            {
              "name": "timestamp",
              "value": "{{$now.format('yyyy-MM-dd HH:mm:ss')}}"
            }
          ]
        }
      }
    },
    {
      "id": "nm0nvkll",
      "name": "Append to Google Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        850,
        200
      ],
      "parameters": {
        "operation": "append",
        "sheetName": "Feedback Responses",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "A": "={{$json.name}}",
            "B": "={{$json[\"headers\"][\"from\"]}}",
            "C": "={{$json.rating}}",
            "D": "={{$json.comments}}",
            "E": "={{$json.timestamp}}"
          }
        }
      }
    },
    {
      "id": "ajir8kpi",
      "name": "Check Rating",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1050,
        200
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "ofw6zuvu",
      "name": "Send Thank You Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1250,
        100
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "={{$node['Format Data'].json.email}}",
        "subject": "Thank you for your positive feedback!",
        "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for taking the time to provide feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe're thrilled to hear from you and appreciate your comments:\n\"{{$node['Format Data'].json.comments}}\"\n\nBest regards,\nCustomer Service Team",
        "resource": "message"
      }
    },
    {
      "id": "stfuibco",
      "name": "Send Follow-up Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1250,
        300
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "={{$node['Format Data'].json.email}}",
        "subject": "We'd love to hear more from you",
        "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for your feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe noticed your rating and would love to understand how we can improve. Your comments were:\n\"{{$node['Format Data'].json.comments}}\"\n\nWould you be willing to share more details about your experience? Please reply to this email or schedule a call with our team.\n\nBest regards,\nCustomer Success Team",
        "resource": "message"
      }
    },
    {
      "id": "exgbrypu",
      "name": "Notify Team on Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        1450,
        300
      ],
      "parameters": {
        "operation": "post",
        "channel": "#customer-feedback",
        "text": ":warning: Low Rating Alert\n*Customer:* {{$node['Format Data'].json.name}}\n*Email:* {{$node['Format Data'].json.email}}\n*Rating:* {{$node['Format Data'].json.rating}}/5\n*Comments:* {{$node['Format Data'].json.comments}}\n*Time:* {{$node['Format Data'].json.timestamp}}",
        "authentication": "accessToken"
      }
    },
    {
      "id": "04usjkti",
      "name": "Error Handler",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        650,
        400
      ],
      "parameters": {
        "fromEmail": "automation@company.com",
        "toEmail": "admin@company.com",
        "subject": "Form Processing Error",
        "text": "Error processing form submission:\n\nForm ID: {{$node['Google Forms Trigger'].json.formId}}\nResponse ID: {{$node['Google Forms Trigger'].json.responseId}}\n\nMissing required fields. Please check the form structure."
      }
    },
    {
      "id": "pz3m4zan",
      "name": "Log Success",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1450,
        100
      ],
      "parameters": {
        "operation": "upload",
        "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
        "options": {}
      }
    }
  ],
  "connections": {
    "Google Forms Trigger": {
      "main": [
        [
          {
            "node": "Validate Form Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Form Data": {
      "main": [
        [
          {
            "node": "Format Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Data": {
      "main": [
        [
          {
            "node": "Append to Google Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append to Google Sheet": {
      "main": [
        [
          {
            "node": "Check Rating",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Rating": {
      "main": [
        [
          {
            "node": "Send Thank You Email",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Follow-up Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Thank You Email": {
      "main": [
        [
          {
            "node": "Log Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Follow-up Email": {
      "main": [
        [
          {
            "node": "Notify Team on Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/Los_Angeles"
  }
}
[2025-06-07T21:55:26.312Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333326311",
  "nodes": [
    {
      "id": "ezd6n1f8",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "formId": "1xyz789abc123",
        "resolveData": true
      }
    },
    {
      "id": "ia71z5kc",
      "name": "Validate Form Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
              "value2": true
            }
          ],
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "wamldxpu",
      "name": "Format Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "name",
              "value": "{{$json.answers['Name']}}"
            },
            {
              "name": "email",
              "value": "{{$json.answers['Email']}}"
            },
            {
              "name": "rating",
              "value": "{{$json.answers['Rating']}}"
            },
            {
              "name": "comments",
              "value": "{{$json.answers['Comments'] || ''}}"
            },
            {
              "name": "timestamp",
              "value": "{{$now.format('yyyy-MM-dd HH:mm:ss')}}"
            }
          ]
        }
      }
    },
    {
      "id": "nm0nvkll",
      "name": "Append to Google Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        850,
        200
      ],
      "parameters": {
        "operation": "append",
        "sheetName": "Feedback Responses",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "A": "={{$json.name}}",
            "B": "={{$json[\"headers\"][\"from\"]}}",
            "C": "={{$json.rating}}",
            "D": "={{$json.comments}}",
            "E": "={{$json.timestamp}}"
          }
        }
      }
    },
    {
      "id": "ajir8kpi",
      "name": "Check Rating",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1050,
        200
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "ofw6zuvu",
      "name": "Send Thank You Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1250,
        100
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "={{$node['Format Data'].json.email}}",
        "subject": "Thank you for your positive feedback!",
        "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for taking the time to provide feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe're thrilled to hear from you and appreciate your comments:\n\"{{$node['Format Data'].json.comments}}\"\n\nBest regards,\nCustomer Service Team",
        "resource": "message"
      }
    },
    {
      "id": "stfuibco",
      "name": "Send Follow-up Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1250,
        300
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "={{$node['Format Data'].json.email}}",
        "subject": "We'd love to hear more from you",
        "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for your feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe noticed your rating and would love to understand how we can improve. Your comments were:\n\"{{$node['Format Data'].json.comments}}\"\n\nWould you be willing to share more details about your experience? Please reply to this email or schedule a call with our team.\n\nBest regards,\nCustomer Success Team",
        "resource": "message"
      }
    },
    {
      "id": "exgbrypu",
      "name": "Notify Team on Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        1450,
        300
      ],
      "parameters": {
        "operation": "post",
        "channel": "#customer-feedback",
        "text": ":warning: Low Rating Alert\n*Customer:* {{$node['Format Data'].json.name}}\n*Email:* {{$node['Format Data'].json.email}}\n*Rating:* {{$node['Format Data'].json.rating}}/5\n*Comments:* {{$node['Format Data'].json.comments}}\n*Time:* {{$node['Format Data'].json.timestamp}}",
        "authentication": "accessToken"
      }
    },
    {
      "id": "04usjkti",
      "name": "Error Handler",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        650,
        400
      ],
      "parameters": {
        "fromEmail": "automation@company.com",
        "toEmail": "admin@company.com",
        "subject": "Form Processing Error",
        "text": "Error processing form submission:\n\nForm ID: {{$node['Google Forms Trigger'].json.formId}}\nResponse ID: {{$node['Google Forms Trigger'].json.responseId}}\n\nMissing required fields. Please check the form structure."
      }
    },
    {
      "id": "pz3m4zan",
      "name": "Log Success",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1450,
        100
      ],
      "parameters": {
        "operation": "upload",
        "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
        "options": {}
      }
    }
  ],
  "connections": {
    "Google Forms Trigger": {
      "main": [
        [
          {
            "node": "Validate Form Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Form Data": {
      "main": [
        [
          {
            "node": "Format Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Data": {
      "main": [
        [
          {
            "node": "Append to Google Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append to Google Sheet": {
      "main": [
        [
          {
            "node": "Check Rating",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Rating": {
      "main": [
        [
          {
            "node": "Send Thank You Email",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Follow-up Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Thank You Email": {
      "main": [
        [
          {
            "node": "Log Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Follow-up Email": {
      "main": [
        [
          {
            "node": "Notify Team on Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/Los_Angeles"
  }
}
[2025-06-07T21:55:26.312Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333326311",
  "nodes": [
    {
      "id": "ezd6n1f8",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "formId": "1xyz789abc123",
        "resolveData": true
      }
    },
    {
      "id": "ia71z5kc",
      "name": "Validate Form Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.answers['Email'] !== undefined && $json.answers['Name'] !== undefined && $json.answers['Rating'] !== undefined}}",
              "value2": true
            }
          ],
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "wamldxpu",
      "name": "Format Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "name",
              "value": "{{$json.answers['Name']}}"
            },
            {
              "name": "email",
              "value": "{{$json.answers['Email']}}"
            },
            {
              "name": "rating",
              "value": "{{$json.answers['Rating']}}"
            },
            {
              "name": "comments",
              "value": "{{$json.answers['Comments'] || ''}}"
            },
            {
              "name": "timestamp",
              "value": "{{$now.format('yyyy-MM-dd HH:mm:ss')}}"
            }
          ]
        }
      }
    },
    {
      "id": "nm0nvkll",
      "name": "Append to Google Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        850,
        200
      ],
      "parameters": {
        "operation": "append",
        "sheetName": "Feedback Responses",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "A": "={{$json.name}}",
            "B": "={{$json[\"headers\"][\"from\"]}}",
            "C": "={{$json.rating}}",
            "D": "={{$json.comments}}",
            "E": "={{$json.timestamp}}"
          }
        }
      }
    },
    {
      "id": "ajir8kpi",
      "name": "Check Rating",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1050,
        200
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    },
    {
      "id": "ofw6zuvu",
      "name": "Send Thank You Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1250,
        100
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "={{$node['Format Data'].json.email}}",
        "subject": "Thank you for your positive feedback!",
        "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for taking the time to provide feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe're thrilled to hear from you and appreciate your comments:\n\"{{$node['Format Data'].json.comments}}\"\n\nBest regards,\nCustomer Service Team",
        "resource": "message"
      }
    },
    {
      "id": "stfuibco",
      "name": "Send Follow-up Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1250,
        300
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "={{$node['Format Data'].json.email}}",
        "subject": "We'd love to hear more from you",
        "message": "Dear {{$node['Format Data'].json.name}},\n\nThank you for your feedback with a rating of {{$node['Format Data'].json.rating}}/5.\n\nWe noticed your rating and would love to understand how we can improve. Your comments were:\n\"{{$node['Format Data'].json.comments}}\"\n\nWould you be willing to share more details about your experience? Please reply to this email or schedule a call with our team.\n\nBest regards,\nCustomer Success Team",
        "resource": "message"
      }
    },
    {
      "id": "exgbrypu",
      "name": "Notify Team on Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        1450,
        300
      ],
      "parameters": {
        "operation": "post",
        "channel": "#customer-feedback",
        "text": ":warning: Low Rating Alert\n*Customer:* {{$node['Format Data'].json.name}}\n*Email:* {{$node['Format Data'].json.email}}\n*Rating:* {{$node['Format Data'].json.rating}}/5\n*Comments:* {{$node['Format Data'].json.comments}}\n*Time:* {{$node['Format Data'].json.timestamp}}",
        "authentication": "accessToken"
      }
    },
    {
      "id": "04usjkti",
      "name": "Error Handler",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        650,
        400
      ],
      "parameters": {
        "fromEmail": "automation@company.com",
        "toEmail": "admin@company.com",
        "subject": "Form Processing Error",
        "text": "Error processing form submission:\n\nForm ID: {{$node['Google Forms Trigger'].json.formId}}\nResponse ID: {{$node['Google Forms Trigger'].json.responseId}}\n\nMissing required fields. Please check the form structure."
      }
    },
    {
      "id": "pz3m4zan",
      "name": "Log Success",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1450,
        100
      ],
      "parameters": {
        "operation": "upload",
        "name": "={{$now.format('yyyy-MM-dd')}}_feedback_log.txt",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "fileContent": "Feedback processed successfully\n\nName: {{$node['Format Data'].json.name}}\nEmail: {{$node['Format Data'].json.email}}\nRating: {{$node['Format Data'].json.rating}}\nComments: {{$node['Format Data'].json.comments}}\nTimestamp: {{$node['Format Data'].json.timestamp}}\nEmail sent: Yes",
        "options": {}
      }
    }
  ],
  "connections": {
    "Google Forms Trigger": {
      "main": [
        [
          {
            "node": "Validate Form Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Form Data": {
      "main": [
        [
          {
            "node": "Format Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Data": {
      "main": [
        [
          {
            "node": "Append to Google Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append to Google Sheet": {
      "main": [
        [
          {
            "node": "Check Rating",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Rating": {
      "main": [
        [
          {
            "node": "Send Thank You Email",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Follow-up Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Thank You Email": {
      "main": [
        [
          {
            "node": "Log Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Follow-up Email": {
      "main": [
        [
          {
            "node": "Notify Team on Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/Los_Angeles"
  }
}
[2025-06-07T21:55:27.191Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:55:27.191Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:55:27.191Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:55:27.191Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:55:27.191Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:55:27.191Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:55:27.191Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:55:27.191Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:55:27.191Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:55:27.191Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:55:27.191Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:55:27.192Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:55:27.192Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:55:27.192Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:55:27.192Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:55:27.192Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:55:27.192Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:55:27.192Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:55:27.192Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:55:27.192Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:55:27.192Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:55:27.192Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:55:27.192Z] [CONSOLE] Cleanup completed
[2025-06-07T21:55:27.192Z] [CONSOLE] Cleanup completed
[2025-06-07T21:55:27.192Z] [CONSOLE] Cleanup completed
[2025-06-07T21:55:27.192Z] [CONSOLE] Cleanup completed
[2025-06-07T21:55:27.192Z] [CONSOLE] Cleanup completed
[2025-06-07T21:55:27.192Z] [CONSOLE] Cleanup completed
[2025-06-07T21:55:27.192Z] [CONSOLE] Cleanup completed
[2025-06-07T21:55:27.192Z] [CONSOLE] Cleanup completed
[2025-06-07T21:55:27.192Z] [CONSOLE] Cleanup completed
[2025-06-07T21:55:27.192Z] [CONSOLE] Cleanup completed
[2025-06-07T21:55:27.192Z] [CONSOLE] Cleanup completed
[2025-06-07T21:55:27.192Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:55:27.192Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:55:27.192Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:55:27.192Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:55:27.192Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:55:27.193Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:55:27.193Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:55:27.193Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:55:27.193Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:55:27.193Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:55:27.193Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:55:27.193Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:55:27.193Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:55:27.193Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:55:27.193Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:55:27.193Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:55:27.193Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:55:27.193Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:55:27.193Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:55:27.193Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:55:27.193Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:55:27.193Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:55:27.193Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:55:27.193Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:55:27.193Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:55:27.193Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:55:27.193Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:55:27.193Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:55:27.193Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:55:27.193Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:55:27.193Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:55:27.193Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:55:27.194Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:55:27.194Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:55:27.194Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:55:27.194Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:55:27.194Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:55:27.194Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:55:27.194Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:55:27.194Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:55:27.194Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:55:27.194Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:55:27.194Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:55:27.194Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:55:27.194Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:55:27.194Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:55:27.194Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:55:27.194Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:55:27.194Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:55:27.194Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:55:27.194Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:55:27.194Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:55:27.194Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:55:27.194Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:55:27.194Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:55:27.194Z] [CONSOLE]   * Gmail node Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.194Z] [CONSOLE]   * Gmail node Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.194Z] [CONSOLE]   * Gmail node Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.194Z] [CONSOLE]   * Gmail node Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.194Z] [CONSOLE]   * Gmail node Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.194Z] [CONSOLE]   * Gmail node Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.194Z] [CONSOLE]   * Gmail node Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.194Z] [CONSOLE]   * Gmail node Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.194Z] [CONSOLE]   * Gmail node Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.195Z] [CONSOLE]   * Gmail node Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.195Z] [CONSOLE]   * Gmail node Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.195Z] [CONSOLE]   * Gmail node Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.195Z] [CONSOLE]   * Gmail node Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.195Z] [CONSOLE]   * Gmail node Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.195Z] [CONSOLE]   * Gmail node Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.195Z] [CONSOLE]   * Gmail node Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.195Z] [CONSOLE]   * Gmail node Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.195Z] [CONSOLE]   * Gmail node Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.195Z] [CONSOLE]   * Gmail node Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.195Z] [CONSOLE]   * Gmail node Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.195Z] [CONSOLE]   * Gmail node Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.195Z] [CONSOLE]   * Gmail node Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.195Z] [CONSOLE]   * Slack node Notify Team on Slack: no otherOptions field found (good)
[2025-06-07T21:55:27.195Z] [CONSOLE]   * Slack node Notify Team on Slack: no otherOptions field found (good)
[2025-06-07T21:55:27.195Z] [CONSOLE]   * Slack node Notify Team on Slack: no otherOptions field found (good)
[2025-06-07T21:55:27.195Z] [CONSOLE]   * Slack node Notify Team on Slack: no otherOptions field found (good)
[2025-06-07T21:55:27.195Z] [CONSOLE]   * Slack node Notify Team on Slack: no otherOptions field found (good)
[2025-06-07T21:55:27.195Z] [CONSOLE]   * Slack node Notify Team on Slack: no otherOptions field found (good)
[2025-06-07T21:55:27.195Z] [CONSOLE]   * Slack node Notify Team on Slack: no otherOptions field found (good)
[2025-06-07T21:55:27.195Z] [CONSOLE]   * Slack node Notify Team on Slack: no otherOptions field found (good)
[2025-06-07T21:55:27.195Z] [CONSOLE]   * Slack node Notify Team on Slack: no otherOptions field found (good)
[2025-06-07T21:55:27.195Z] [CONSOLE]   * Slack node Notify Team on Slack: no otherOptions field found (good)
[2025-06-07T21:55:27.195Z] [CONSOLE]   * Slack node Notify Team on Slack: no otherOptions field found (good)
[2025-06-07T21:55:27.195Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:55:27.195Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:55:27.195Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:55:27.195Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:55:27.195Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:55:27.195Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:55:27.195Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:55:27.195Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:55:27.195Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:55:27.195Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:55:27.196Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:55:27.196Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has active: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has active: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has active: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has active: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has active: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has active: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has active: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has active: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has active: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has active: true
[2025-06-07T21:55:27.197Z] [CONSOLE]   - Has active: true
[2025-06-07T21:55:27.197Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:55:27.197Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:55:27.197Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:55:27.197Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:55:27.197Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:55:27.197Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:55:27.197Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:55:27.197Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:55:27.197Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:55:27.197Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:55:27.197Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:55:27.197Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:55:27.197Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:55:27.197Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:55:27.197Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:55:27.197Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:55:27.197Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:55:27.198Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:55:27.198Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:55:27.198Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:55:27.198Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:55:27.198Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:55:27.198Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:55:27.198Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:55:27.198Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:55:27.198Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:55:27.198Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:55:27.198Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:55:27.198Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:55:27.198Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:55:27.198Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:55:27.198Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:55:27.198Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:55:27.198Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:27.198Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:27.198Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:27.198Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:27.198Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:27.198Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:27.198Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:27.198Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:27.198Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:27.198Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:27.198Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:27.198Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:27.198Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:27.198Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:27.198Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:27.198Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:27.198Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:27.198Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:27.198Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:27.198Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:27.198Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:27.198Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:27.198Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:27.199Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:27.199Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:27.199Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:27.199Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:27.199Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:27.199Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:27.199Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:27.199Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:27.199Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:27.199Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:27.199Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.199Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.199Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.199Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.199Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.199Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.199Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.199Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.199Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.199Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.199Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.199Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.199Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.199Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.199Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.199Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.199Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.199Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.199Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.199Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.199Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.199Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.199Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:55:27.199Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:55:27.199Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:55:27.199Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:55:27.199Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:55:27.199Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:55:27.199Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:55:27.199Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:55:27.199Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:55:27.199Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:55:27.199Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:55:27.200Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:55:27.200Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:55:27.200Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:55:27.201Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:55:27.201Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:55:27.201Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:55:27.201Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:55:27.201Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:55:27.201Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:55:27.201Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:55:27.201Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:55:27.201Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:55:27.201Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:55:27.201Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:55:27.201Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:55:27.201Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:55:27.201Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:55:27.201Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:55:27.201Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:55:27.201Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:55:27.201Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:55:27.201Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:55:27.201Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:55:27.201Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:55:27.201Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:55:27.201Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:55:27.201Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:55:27.201Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:55:27.201Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:55:27.201Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:55:27.201Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:55:27.201Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:55:27.201Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:55:27.201Z] [CONSOLE] ✅ Google Drive node "Log Success" has valid __rl structure
[2025-06-07T21:55:27.201Z] [CONSOLE] ✅ Google Drive node "Log Success" has valid __rl structure
[2025-06-07T21:55:27.201Z] [CONSOLE] ✅ Google Drive node "Log Success" has valid __rl structure
[2025-06-07T21:55:27.201Z] [CONSOLE] ✅ Google Drive node "Log Success" has valid __rl structure
[2025-06-07T21:55:27.201Z] [CONSOLE] ✅ Google Drive node "Log Success" has valid __rl structure
[2025-06-07T21:55:27.201Z] [CONSOLE] ✅ Google Drive node "Log Success" has valid __rl structure
[2025-06-07T21:55:27.201Z] [CONSOLE] ✅ Google Drive node "Log Success" has valid __rl structure
[2025-06-07T21:55:27.201Z] [CONSOLE] ✅ Google Drive node "Log Success" has valid __rl structure
[2025-06-07T21:55:27.201Z] [CONSOLE] ✅ Google Drive node "Log Success" has valid __rl structure
[2025-06-07T21:55:27.202Z] [CONSOLE] ✅ Google Drive node "Log Success" has valid __rl structure
[2025-06-07T21:55:27.202Z] [CONSOLE] ✅ Google Drive node "Log Success" has valid __rl structure
[2025-06-07T21:55:27.202Z] [CONSOLE] ✅ FINAL IMPORT CHECK: Google Drive node "Log Success" has options field
[2025-06-07T21:55:27.202Z] [CONSOLE] ✅ FINAL IMPORT CHECK: Google Drive node "Log Success" has options field
[2025-06-07T21:55:27.202Z] [CONSOLE] ✅ FINAL IMPORT CHECK: Google Drive node "Log Success" has options field
[2025-06-07T21:55:27.202Z] [CONSOLE] ✅ FINAL IMPORT CHECK: Google Drive node "Log Success" has options field
[2025-06-07T21:55:27.202Z] [CONSOLE] ✅ FINAL IMPORT CHECK: Google Drive node "Log Success" has options field
[2025-06-07T21:55:27.202Z] [CONSOLE] ✅ FINAL IMPORT CHECK: Google Drive node "Log Success" has options field
[2025-06-07T21:55:27.202Z] [CONSOLE] ✅ FINAL IMPORT CHECK: Google Drive node "Log Success" has options field
[2025-06-07T21:55:27.202Z] [CONSOLE] ✅ FINAL IMPORT CHECK: Google Drive node "Log Success" has options field
[2025-06-07T21:55:27.202Z] [CONSOLE] ✅ FINAL IMPORT CHECK: Google Drive node "Log Success" has options field
[2025-06-07T21:55:27.202Z] [CONSOLE] ✅ FINAL IMPORT CHECK: Google Drive node "Log Success" has options field
[2025-06-07T21:55:27.202Z] [CONSOLE] ✅ FINAL IMPORT CHECK: Google Drive node "Log Success" has options field
[2025-06-07T21:55:27.202Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:55:27.202Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:55:27.202Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:55:27.202Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:55:27.202Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:55:27.202Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:55:27.202Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:55:27.202Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:55:27.202Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:55:27.202Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:55:27.202Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:55:27.202Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:27.202Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:27.202Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:27.202Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:27.202Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:27.202Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:27.202Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:27.202Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:27.202Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:27.202Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:27.202Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Notify Team on Slack: has otherOptions = false
[2025-06-07T21:55:27.203Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:27.203Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:27.203Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:27.203Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:27.203Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:27.203Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:27.203Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:27.203Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:27.203Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:27.203Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:27.203Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Send Thank You Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.203Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.204Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.204Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.204Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.204Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.204Z] [CONSOLE]     * Send Follow-up Email: credentials = {"gmailOAuth2":{"id":"3","name":"Gmail account"}}
[2025-06-07T21:55:27.204Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:55:27.204Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:55:27.204Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:55:27.204Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:55:27.204Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:55:27.204Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:55:27.204Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:55:27.204Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:55:27.204Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:55:27.204Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:55:27.204Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:55:27.204Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Form to Sheet with Email Notification",
  "nodes": [
    {
      "id": "ezd6n1f8",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "t...
[2025-06-07T21:55:27.204Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Form to Sheet with Email Notification",
  "nodes": [
    {
      "id": "ezd6n1f8",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "t...
[2025-06-07T21:55:27.204Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Form to Sheet with Email Notification",
  "nodes": [
    {
      "id": "ezd6n1f8",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "t...
[2025-06-07T21:55:27.204Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Form to Sheet with Email Notification",
  "nodes": [
    {
      "id": "ezd6n1f8",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "t...
[2025-06-07T21:55:27.204Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Form to Sheet with Email Notification",
  "nodes": [
    {
      "id": "ezd6n1f8",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "t...
[2025-06-07T21:55:27.204Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Form to Sheet with Email Notification",
  "nodes": [
    {
      "id": "ezd6n1f8",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "t...
[2025-06-07T21:55:27.204Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Form to Sheet with Email Notification",
  "nodes": [
    {
      "id": "ezd6n1f8",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "t...
[2025-06-07T21:55:27.204Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Form to Sheet with Email Notification",
  "nodes": [
    {
      "id": "ezd6n1f8",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "t...
[2025-06-07T21:55:27.204Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Form to Sheet with Email Notification",
  "nodes": [
    {
      "id": "ezd6n1f8",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "t...
[2025-06-07T21:55:27.204Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Form to Sheet with Email Notification",
  "nodes": [
    {
      "id": "ezd6n1f8",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "t...
[2025-06-07T21:55:27.204Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Form to Sheet with Email Notification",
  "nodes": [
    {
      "id": "ezd6n1f8",
      "name": "Google Forms Trigger",
      "type": "n8n-nodes-base.googleFormsTrigger",
      "t...
[2025-06-07T21:55:27.412Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:55:27.412Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:55:27.413Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:55:27.413Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:55:27.413Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:55:27.413Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:55:27.413Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:55:27.413Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:55:27.413Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:55:27.413Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:55:27.413Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:55:49.814Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:55:49.815Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:55:49.815Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:55:49.815Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:55:49.815Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:55:49.815Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:55:49.815Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:55:49.815Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:55:49.815Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:55:49.815Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:55:49.815Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:55:49.815Z] [INFO] 🚀 [GENERATE V2] Request received
[2025-06-07T21:55:49.815Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:55:49.815Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:55:49.815Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:55:49.815Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:55:49.815Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:55:49.815Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:55:49.815Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:55:49.816Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:55:49.816Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:55:49.816Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:55:49.816Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:55:49.816Z] [INFO] 📝 [GENERATE V2] Body parsed: {
  "input": "Send an email to notifications@mycompany.com from my work Gmail when a new row is added to my 'Sales Tracker' Google Sheet (sheet ID: 1qrs456tuv789), include the values from columns A (Date), B (Customer), and C (Amount) in the email body",
  "platform": "n8n",
  "complexity": "complex",
  "errorHandling": true,
  "optimization": 50,
  "provider": "claude",
  "useRAG": true,
  "validateOutput": true
}
[2025-06-07T21:55:49.816Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:55:49.816Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:55:49.816Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:55:49.816Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:55:49.816Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:55:49.816Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:55:49.816Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:55:49.816Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:55:49.816Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:55:49.816Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:55:49.816Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:55:49.816Z] [INFO] ✅ [GENERATE V2] Request validated
[2025-06-07T21:55:49.816Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:55:49.816Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:55:49.816Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:55:49.816Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:55:49.816Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:55:49.816Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:55:49.816Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:55:49.816Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:55:49.816Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:55:49.816Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:55:49.817Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:55:49.817Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:55:49.817Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:55:49.817Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:55:49.817Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:55:49.817Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:55:49.817Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:55:49.817Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:55:49.817Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:55:49.817Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:55:49.817Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:55:49.817Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:55:49.817Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:55:49.817Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:55:49.817Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:55:49.817Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:55:49.817Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:55:49.817Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:55:49.818Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:55:49.818Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:55:49.818Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:55:49.818Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:55:49.818Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:55:50.155Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:55:50.156Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:55:50.156Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:55:50.156Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:55:50.156Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:55:50.156Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:55:50.156Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:55:50.156Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:55:50.156Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:55:50.156Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:55:50.156Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:55:50.156Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:55:50.157Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:55:50.157Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:55:50.157Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:55:50.157Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:55:50.157Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:55:50.157Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:55:50.157Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:55:50.157Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:55:50.157Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:55:50.157Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:55:51.302Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1485ms
[2025-06-07T21:55:51.302Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1485ms
[2025-06-07T21:55:51.302Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1485ms
[2025-06-07T21:55:51.302Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1485ms
[2025-06-07T21:55:51.302Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1485ms
[2025-06-07T21:55:51.302Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1485ms
[2025-06-07T21:55:51.302Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1485ms
[2025-06-07T21:55:51.303Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1485ms
[2025-06-07T21:55:51.303Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1485ms
[2025-06-07T21:55:51.303Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1485ms
[2025-06-07T21:55:51.303Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1485ms
[2025-06-07T21:55:51.303Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:55:51.303Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:55:51.303Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:55:51.303Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:55:51.303Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:55:51.303Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:55:51.303Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:55:51.303Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:55:51.303Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:55:51.303Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:55:51.303Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:55:51.304Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:55:51.304Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:55:51.304Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:55:51.304Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:55:51.304Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:55:51.304Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:55:51.305Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:55:51.305Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:55:51.305Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:55:51.305Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:55:51.305Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:55:51.305Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:55:51.305Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:55:51.305Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:55:51.305Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:55:51.305Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:55:51.305Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:55:51.305Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:55:51.305Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:55:51.305Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:55:51.305Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:55:51.305Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:55:51.305Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:55:51.305Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:55:51.305Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:55:51.305Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:55:51.305Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:55:51.305Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:55:51.305Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:55:51.305Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:55:51.305Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:55:51.305Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:55:51.305Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:56:29.871Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:56:29.873Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:56:29.873Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:56:29.873Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:56:29.873Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:56:29.873Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:56:29.873Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:56:29.873Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:56:29.873Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:56:29.873Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:56:29.874Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:56:29.885Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 38579 ms
[2025-06-07T21:56:29.885Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 38579 ms
[2025-06-07T21:56:29.886Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 38579 ms
[2025-06-07T21:56:29.886Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 38579 ms
[2025-06-07T21:56:29.886Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 38579 ms
[2025-06-07T21:56:29.886Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 38579 ms
[2025-06-07T21:56:29.886Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 38579 ms
[2025-06-07T21:56:29.886Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 38579 ms
[2025-06-07T21:56:29.886Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 38579 ms
[2025-06-07T21:56:29.886Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 38579 ms
[2025-06-07T21:56:29.886Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 38579 ms
[2025-06-07T21:56:29.887Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:56:29.887Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:56:29.887Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:56:29.887Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:56:29.887Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:56:29.887Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:56:29.887Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:56:29.887Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:56:29.888Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:56:29.888Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:56:29.888Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:56:29.888Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Sheets to Gmail Notification Workflow",
  "nodes": [
    {
      "id": "1",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "position": [250, 300],
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "1qrs456tuv789"
        },
     
[2025-06-07T21:56:29.888Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Sheets to Gmail Notification Workflow",
  "nodes": [
    {
      "id": "1",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "position": [250, 300],
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "1qrs456tuv789"
        },
     
[2025-06-07T21:56:29.888Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Sheets to Gmail Notification Workflow",
  "nodes": [
    {
      "id": "1",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "position": [250, 300],
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "1qrs456tuv789"
        },
     
[2025-06-07T21:56:29.888Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Sheets to Gmail Notification Workflow",
  "nodes": [
    {
      "id": "1",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "position": [250, 300],
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "1qrs456tuv789"
        },
     
[2025-06-07T21:56:29.888Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Sheets to Gmail Notification Workflow",
  "nodes": [
    {
      "id": "1",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "position": [250, 300],
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "1qrs456tuv789"
        },
     
[2025-06-07T21:56:29.888Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Sheets to Gmail Notification Workflow",
  "nodes": [
    {
      "id": "1",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "position": [250, 300],
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "1qrs456tuv789"
        },
     
[2025-06-07T21:56:29.889Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Sheets to Gmail Notification Workflow",
  "nodes": [
    {
      "id": "1",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "position": [250, 300],
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "1qrs456tuv789"
        },
     
[2025-06-07T21:56:29.889Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Sheets to Gmail Notification Workflow",
  "nodes": [
    {
      "id": "1",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "position": [250, 300],
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "1qrs456tuv789"
        },
     
[2025-06-07T21:56:29.889Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Sheets to Gmail Notification Workflow",
  "nodes": [
    {
      "id": "1",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "position": [250, 300],
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "1qrs456tuv789"
        },
     
[2025-06-07T21:56:29.889Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Sheets to Gmail Notification Workflow",
  "nodes": [
    {
      "id": "1",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "position": [250, 300],
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "1qrs456tuv789"
        },
     
[2025-06-07T21:56:29.889Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Google Sheets to Gmail Notification Workflow",
  "nodes": [
    {
      "id": "1",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "position": [250, 300],
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "1qrs456tuv789"
        },
     
[2025-06-07T21:56:29.890Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:56:29.890Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:56:29.890Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:56:29.891Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:56:29.891Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:56:29.891Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:56:29.891Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:56:29.891Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:56:29.891Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:56:29.892Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:56:29.892Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:56:29.894Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:56:29.894Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:56:29.894Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:56:29.894Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:56:29.894Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:56:29.894Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:56:29.895Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:56:29.895Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:56:29.895Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:56:29.895Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:56:29.895Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:56:29.895Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:56:29.895Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:56:29.895Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:56:29.895Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:56:29.895Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:56:29.895Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:56:29.895Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:56:29.895Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:56:29.895Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:56:29.895Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:56:29.896Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:56:29.896Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:56:29.896Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:56:29.896Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:56:29.896Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:56:29.896Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:56:29.896Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:56:29.896Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:56:29.896Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:56:29.896Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:56:29.896Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:56:29.896Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:56:29.896Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:56:29.896Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:56:29.896Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:56:29.896Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:56:29.896Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:56:29.896Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:56:29.896Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:56:29.896Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:56:29.896Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:56:29.896Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:56:29.896Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:56:29.896Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:29.896Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:29.897Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:29.897Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:29.897Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:29.897Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:29.897Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:29.897Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:29.897Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:29.897Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:29.897Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:29.897Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:29.897Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:29.897Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:29.897Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:29.897Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:29.897Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:29.897Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:29.897Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:29.897Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:29.897Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:29.897Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:29.897Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.897Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.897Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.897Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.897Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.897Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.897Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.897Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.897Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.898Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.898Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.898Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.898Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.898Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.898Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.898Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.898Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.898Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.898Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.898Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.898Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.898Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.898Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:56:29.898Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:56:29.898Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:56:29.898Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:56:29.898Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:56:29.898Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:56:29.899Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:56:29.899Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:56:29.899Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:56:29.899Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:56:29.899Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:56:29.899Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:56:29.899Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:56:29.899Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:56:29.899Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:56:29.899Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:56:29.899Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:56:29.899Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:56:29.899Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:56:29.899Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:56:29.899Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:56:29.899Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:56:29.899Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:56:29.899Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:56:29.899Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:56:29.899Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:56:29.899Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:56:29.899Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:56:29.899Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:56:29.899Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:56:29.899Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:56:29.899Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:56:29.899Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:56:29.899Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:56:29.900Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:56:29.900Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:56:29.900Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:56:29.900Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:56:29.900Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:56:29.900Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:56:29.900Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:56:29.900Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:56:29.900Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:56:29.900Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:56:29.900Z] [INFO] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:56:29.900Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:56:29.900Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:56:29.900Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:56:29.900Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:56:29.900Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:56:29.900Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:56:29.900Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:56:29.900Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:56:29.900Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:56:29.900Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:56:29.900Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:56:29.900Z] [CONSOLE]   ✅ Fixed Set node expression: New Sale Added - {{$json["A"]}} → New Sale Added - {{$json.A}}
[2025-06-07T21:56:29.900Z] [CONSOLE]   ✅ Fixed Set node expression: New Sale Added - {{$json["A"]}} → New Sale Added - {{$json.A}}
[2025-06-07T21:56:29.900Z] [CONSOLE]   ✅ Fixed Set node expression: New Sale Added - {{$json["A"]}} → New Sale Added - {{$json.A}}
[2025-06-07T21:56:29.901Z] [CONSOLE]   ✅ Fixed Set node expression: New Sale Added - {{$json["A"]}} → New Sale Added - {{$json.A}}
[2025-06-07T21:56:29.901Z] [CONSOLE]   ✅ Fixed Set node expression: New Sale Added - {{$json["A"]}} → New Sale Added - {{$json.A}}
[2025-06-07T21:56:29.901Z] [CONSOLE]   ✅ Fixed Set node expression: New Sale Added - {{$json["A"]}} → New Sale Added - {{$json.A}}
[2025-06-07T21:56:29.901Z] [CONSOLE]   ✅ Fixed Set node expression: New Sale Added - {{$json["A"]}} → New Sale Added - {{$json.A}}
[2025-06-07T21:56:29.901Z] [CONSOLE]   ✅ Fixed Set node expression: New Sale Added - {{$json["A"]}} → New Sale Added - {{$json.A}}
[2025-06-07T21:56:29.901Z] [CONSOLE]   ✅ Fixed Set node expression: New Sale Added - {{$json["A"]}} → New Sale Added - {{$json.A}}
[2025-06-07T21:56:29.901Z] [CONSOLE]   ✅ Fixed Set node expression: New Sale Added - {{$json["A"]}} → New Sale Added - {{$json.A}}
[2025-06-07T21:56:29.901Z] [CONSOLE]   ✅ Fixed Set node expression: New Sale Added - {{$json["A"]}} → New Sale Added - {{$json.A}}
[2025-06-07T21:56:29.901Z] [CONSOLE]   ✅ Fixed Set node expression: A new sale has been recorded in the Sales Tracker:

Date: {{$json["A"]}}
Customer: {{$json["B"]}}
Amount: {{$json["C"]}}

This is an automated notification from your Sales Tracker spreadsheet. → A new sale has been recorded in the Sales Tracker:

Date: {{$json.A}}
Customer: {{$json.B}}
Amount: {{$json.C}}

This is an automated notification from your Sales Tracker spreadsheet.
[2025-06-07T21:56:29.901Z] [CONSOLE]   ✅ Fixed Set node expression: A new sale has been recorded in the Sales Tracker:

Date: {{$json["A"]}}
Customer: {{$json["B"]}}
Amount: {{$json["C"]}}

This is an automated notification from your Sales Tracker spreadsheet. → A new sale has been recorded in the Sales Tracker:

Date: {{$json.A}}
Customer: {{$json.B}}
Amount: {{$json.C}}

This is an automated notification from your Sales Tracker spreadsheet.
[2025-06-07T21:56:29.901Z] [CONSOLE]   ✅ Fixed Set node expression: A new sale has been recorded in the Sales Tracker:

Date: {{$json["A"]}}
Customer: {{$json["B"]}}
Amount: {{$json["C"]}}

This is an automated notification from your Sales Tracker spreadsheet. → A new sale has been recorded in the Sales Tracker:

Date: {{$json.A}}
Customer: {{$json.B}}
Amount: {{$json.C}}

This is an automated notification from your Sales Tracker spreadsheet.
[2025-06-07T21:56:29.901Z] [CONSOLE]   ✅ Fixed Set node expression: A new sale has been recorded in the Sales Tracker:

Date: {{$json["A"]}}
Customer: {{$json["B"]}}
Amount: {{$json["C"]}}

This is an automated notification from your Sales Tracker spreadsheet. → A new sale has been recorded in the Sales Tracker:

Date: {{$json.A}}
Customer: {{$json.B}}
Amount: {{$json.C}}

This is an automated notification from your Sales Tracker spreadsheet.
[2025-06-07T21:56:29.901Z] [CONSOLE]   ✅ Fixed Set node expression: A new sale has been recorded in the Sales Tracker:

Date: {{$json["A"]}}
Customer: {{$json["B"]}}
Amount: {{$json["C"]}}

This is an automated notification from your Sales Tracker spreadsheet. → A new sale has been recorded in the Sales Tracker:

Date: {{$json.A}}
Customer: {{$json.B}}
Amount: {{$json.C}}

This is an automated notification from your Sales Tracker spreadsheet.
[2025-06-07T21:56:29.901Z] [CONSOLE]   ✅ Fixed Set node expression: A new sale has been recorded in the Sales Tracker:

Date: {{$json["A"]}}
Customer: {{$json["B"]}}
Amount: {{$json["C"]}}

This is an automated notification from your Sales Tracker spreadsheet. → A new sale has been recorded in the Sales Tracker:

Date: {{$json.A}}
Customer: {{$json.B}}
Amount: {{$json.C}}

This is an automated notification from your Sales Tracker spreadsheet.
[2025-06-07T21:56:29.901Z] [CONSOLE]   ✅ Fixed Set node expression: A new sale has been recorded in the Sales Tracker:

Date: {{$json["A"]}}
Customer: {{$json["B"]}}
Amount: {{$json["C"]}}

This is an automated notification from your Sales Tracker spreadsheet. → A new sale has been recorded in the Sales Tracker:

Date: {{$json.A}}
Customer: {{$json.B}}
Amount: {{$json.C}}

This is an automated notification from your Sales Tracker spreadsheet.
[2025-06-07T21:56:29.901Z] [CONSOLE]   ✅ Fixed Set node expression: A new sale has been recorded in the Sales Tracker:

Date: {{$json["A"]}}
Customer: {{$json["B"]}}
Amount: {{$json["C"]}}

This is an automated notification from your Sales Tracker spreadsheet. → A new sale has been recorded in the Sales Tracker:

Date: {{$json.A}}
Customer: {{$json.B}}
Amount: {{$json.C}}

This is an automated notification from your Sales Tracker spreadsheet.
[2025-06-07T21:56:29.901Z] [CONSOLE]   ✅ Fixed Set node expression: A new sale has been recorded in the Sales Tracker:

Date: {{$json["A"]}}
Customer: {{$json["B"]}}
Amount: {{$json["C"]}}

This is an automated notification from your Sales Tracker spreadsheet. → A new sale has been recorded in the Sales Tracker:

Date: {{$json.A}}
Customer: {{$json.B}}
Amount: {{$json.C}}

This is an automated notification from your Sales Tracker spreadsheet.
[2025-06-07T21:56:29.902Z] [CONSOLE]   ✅ Fixed Set node expression: A new sale has been recorded in the Sales Tracker:

Date: {{$json["A"]}}
Customer: {{$json["B"]}}
Amount: {{$json["C"]}}

This is an automated notification from your Sales Tracker spreadsheet. → A new sale has been recorded in the Sales Tracker:

Date: {{$json.A}}
Customer: {{$json.B}}
Amount: {{$json.C}}

This is an automated notification from your Sales Tracker spreadsheet.
[2025-06-07T21:56:29.902Z] [CONSOLE]   ✅ Fixed Set node expression: A new sale has been recorded in the Sales Tracker:

Date: {{$json["A"]}}
Customer: {{$json["B"]}}
Amount: {{$json["C"]}}

This is an automated notification from your Sales Tracker spreadsheet. → A new sale has been recorded in the Sales Tracker:

Date: {{$json.A}}
Customer: {{$json.B}}
Amount: {{$json.C}}

This is an automated notification from your Sales Tracker spreadsheet.
[2025-06-07T21:56:29.902Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["A"]}} → ={{$json.A}}
[2025-06-07T21:56:29.902Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["A"]}} → ={{$json.A}}
[2025-06-07T21:56:29.902Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["A"]}} → ={{$json.A}}
[2025-06-07T21:56:29.902Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["A"]}} → ={{$json.A}}
[2025-06-07T21:56:29.902Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["A"]}} → ={{$json.A}}
[2025-06-07T21:56:29.902Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["A"]}} → ={{$json.A}}
[2025-06-07T21:56:29.902Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["A"]}} → ={{$json.A}}
[2025-06-07T21:56:29.902Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["A"]}} → ={{$json.A}}
[2025-06-07T21:56:29.902Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["A"]}} → ={{$json.A}}
[2025-06-07T21:56:29.902Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["A"]}} → ={{$json.A}}
[2025-06-07T21:56:29.902Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["A"]}} → ={{$json.A}}
[2025-06-07T21:56:29.903Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["B"]}} → ={{$json.B}}
[2025-06-07T21:56:29.903Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["B"]}} → ={{$json.B}}
[2025-06-07T21:56:29.903Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["B"]}} → ={{$json.B}}
[2025-06-07T21:56:29.903Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["B"]}} → ={{$json.B}}
[2025-06-07T21:56:29.903Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["B"]}} → ={{$json.B}}
[2025-06-07T21:56:29.903Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["B"]}} → ={{$json.B}}
[2025-06-07T21:56:29.903Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["B"]}} → ={{$json.B}}
[2025-06-07T21:56:29.903Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["B"]}} → ={{$json.B}}
[2025-06-07T21:56:29.903Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["B"]}} → ={{$json.B}}
[2025-06-07T21:56:29.903Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["B"]}} → ={{$json.B}}
[2025-06-07T21:56:29.903Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["B"]}} → ={{$json.B}}
[2025-06-07T21:56:29.903Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["C"]}} → ={{$json.C}}
[2025-06-07T21:56:29.903Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["C"]}} → ={{$json.C}}
[2025-06-07T21:56:29.903Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["C"]}} → ={{$json.C}}
[2025-06-07T21:56:29.903Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["C"]}} → ={{$json.C}}
[2025-06-07T21:56:29.903Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["C"]}} → ={{$json.C}}
[2025-06-07T21:56:29.903Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["C"]}} → ={{$json.C}}
[2025-06-07T21:56:29.903Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["C"]}} → ={{$json.C}}
[2025-06-07T21:56:29.903Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["C"]}} → ={{$json.C}}
[2025-06-07T21:56:29.903Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["C"]}} → ={{$json.C}}
[2025-06-07T21:56:29.903Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["C"]}} → ={{$json.C}}
[2025-06-07T21:56:29.903Z] [CONSOLE]   ✅ Fixed IF expression: ={{$json["C"]}} → ={{$json.C}}
[2025-06-07T21:56:29.904Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:56:29.904Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:56:29.904Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:56:29.904Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:56:29.904Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:56:29.904Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:56:29.904Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:56:29.904Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:56:29.904Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:56:29.904Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:56:29.904Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:56:29.904Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:56:29.904Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:56:29.904Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:56:29.904Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:56:29.904Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:56:29.904Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:56:29.904Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:56:29.904Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:56:29.904Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:56:29.904Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:56:29.904Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:56:29.905Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Email
[2025-06-07T21:56:29.905Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Email
[2025-06-07T21:56:29.905Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Email
[2025-06-07T21:56:29.905Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Email
[2025-06-07T21:56:29.905Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Email
[2025-06-07T21:56:29.905Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Email
[2025-06-07T21:56:29.905Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Email
[2025-06-07T21:56:29.905Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Email
[2025-06-07T21:56:29.905Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Email
[2025-06-07T21:56:29.905Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Email
[2025-06-07T21:56:29.905Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Email
[2025-06-07T21:56:29.905Z] [CONSOLE] Fixed mixed expression syntax in Set node value: errorMessage
[2025-06-07T21:56:29.905Z] [CONSOLE] Fixed mixed expression syntax in Set node value: errorMessage
[2025-06-07T21:56:29.905Z] [CONSOLE] Fixed mixed expression syntax in Set node value: errorMessage
[2025-06-07T21:56:29.905Z] [CONSOLE] Fixed mixed expression syntax in Set node value: errorMessage
[2025-06-07T21:56:29.905Z] [CONSOLE] Fixed mixed expression syntax in Set node value: errorMessage
[2025-06-07T21:56:29.905Z] [CONSOLE] Fixed mixed expression syntax in Set node value: errorMessage
[2025-06-07T21:56:29.905Z] [CONSOLE] Fixed mixed expression syntax in Set node value: errorMessage
[2025-06-07T21:56:29.905Z] [CONSOLE] Fixed mixed expression syntax in Set node value: errorMessage
[2025-06-07T21:56:29.905Z] [CONSOLE] Fixed mixed expression syntax in Set node value: errorMessage
[2025-06-07T21:56:29.905Z] [CONSOLE] Fixed mixed expression syntax in Set node value: errorMessage
[2025-06-07T21:56:29.905Z] [CONSOLE] Fixed mixed expression syntax in Set node value: errorMessage
[2025-06-07T21:56:29.906Z] [CONSOLE] Fixed mixed expression syntax in Set node value: errorTime
[2025-06-07T21:56:29.906Z] [CONSOLE] Fixed mixed expression syntax in Set node value: errorTime
[2025-06-07T21:56:29.906Z] [CONSOLE] Fixed mixed expression syntax in Set node value: errorTime
[2025-06-07T21:56:29.906Z] [CONSOLE] Fixed mixed expression syntax in Set node value: errorTime
[2025-06-07T21:56:29.906Z] [CONSOLE] Fixed mixed expression syntax in Set node value: errorTime
[2025-06-07T21:56:29.906Z] [CONSOLE] Fixed mixed expression syntax in Set node value: errorTime
[2025-06-07T21:56:29.906Z] [CONSOLE] Fixed mixed expression syntax in Set node value: errorTime
[2025-06-07T21:56:29.906Z] [CONSOLE] Fixed mixed expression syntax in Set node value: errorTime
[2025-06-07T21:56:29.906Z] [CONSOLE] Fixed mixed expression syntax in Set node value: errorTime
[2025-06-07T21:56:29.906Z] [CONSOLE] Fixed mixed expression syntax in Set node value: errorTime
[2025-06-07T21:56:29.906Z] [CONSOLE] Fixed mixed expression syntax in Set node value: errorTime
[2025-06-07T21:56:29.906Z] [CONSOLE] Fixed mixed expression syntax in Set node value: workflowName
[2025-06-07T21:56:29.906Z] [CONSOLE] Fixed mixed expression syntax in Set node value: workflowName
[2025-06-07T21:56:29.906Z] [CONSOLE] Fixed mixed expression syntax in Set node value: workflowName
[2025-06-07T21:56:29.906Z] [CONSOLE] Fixed mixed expression syntax in Set node value: workflowName
[2025-06-07T21:56:29.906Z] [CONSOLE] Fixed mixed expression syntax in Set node value: workflowName
[2025-06-07T21:56:29.906Z] [CONSOLE] Fixed mixed expression syntax in Set node value: workflowName
[2025-06-07T21:56:29.906Z] [CONSOLE] Fixed mixed expression syntax in Set node value: workflowName
[2025-06-07T21:56:29.906Z] [CONSOLE] Fixed mixed expression syntax in Set node value: workflowName
[2025-06-07T21:56:29.906Z] [CONSOLE] Fixed mixed expression syntax in Set node value: workflowName
[2025-06-07T21:56:29.906Z] [CONSOLE] Fixed mixed expression syntax in Set node value: workflowName
[2025-06-07T21:56:29.906Z] [CONSOLE] Fixed mixed expression syntax in Set node value: workflowName
[2025-06-07T21:56:29.906Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Error Notification
[2025-06-07T21:56:29.906Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Error Notification
[2025-06-07T21:56:29.906Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Error Notification
[2025-06-07T21:56:29.906Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Error Notification
[2025-06-07T21:56:29.906Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Error Notification
[2025-06-07T21:56:29.906Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Error Notification
[2025-06-07T21:56:29.906Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Error Notification
[2025-06-07T21:56:29.907Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Error Notification
[2025-06-07T21:56:29.907Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Error Notification
[2025-06-07T21:56:29.907Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Error Notification
[2025-06-07T21:56:29.907Z] [CONSOLE]   ✅ Added missing resource parameter to Gmail send node: Send Error Notification
[2025-06-07T21:56:29.907Z] [CONSOLE] 🔧 Fixing IF node: IF - Check Data
[2025-06-07T21:56:29.907Z] [CONSOLE] 🔧 Fixing IF node: IF - Check Data
[2025-06-07T21:56:29.907Z] [CONSOLE] 🔧 Fixing IF node: IF - Check Data
[2025-06-07T21:56:29.907Z] [CONSOLE] 🔧 Fixing IF node: IF - Check Data
[2025-06-07T21:56:29.907Z] [CONSOLE] 🔧 Fixing IF node: IF - Check Data
[2025-06-07T21:56:29.907Z] [CONSOLE] 🔧 Fixing IF node: IF - Check Data
[2025-06-07T21:56:29.907Z] [CONSOLE] 🔧 Fixing IF node: IF - Check Data
[2025-06-07T21:56:29.907Z] [CONSOLE] 🔧 Fixing IF node: IF - Check Data
[2025-06-07T21:56:29.907Z] [CONSOLE] 🔧 Fixing IF node: IF - Check Data
[2025-06-07T21:56:29.907Z] [CONSOLE] 🔧 Fixing IF node: IF - Check Data
[2025-06-07T21:56:29.907Z] [CONSOLE] 🔧 Fixing IF node: IF - Check Data
[2025-06-07T21:56:29.907Z] [INFO] 🔧 Fixing IF node: IF - Check Data
[2025-06-07T21:56:29.907Z] [CONSOLE]   🔍 Processing condition 1: {
  "id": "1",
  "leftValue": "={{$json.A}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.907Z] [CONSOLE]   🔍 Processing condition 1: {
  "id": "1",
  "leftValue": "={{$json.A}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.907Z] [CONSOLE]   🔍 Processing condition 1: {
  "id": "1",
  "leftValue": "={{$json.A}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.907Z] [CONSOLE]   🔍 Processing condition 1: {
  "id": "1",
  "leftValue": "={{$json.A}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.907Z] [CONSOLE]   🔍 Processing condition 1: {
  "id": "1",
  "leftValue": "={{$json.A}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.907Z] [CONSOLE]   🔍 Processing condition 1: {
  "id": "1",
  "leftValue": "={{$json.A}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.907Z] [CONSOLE]   🔍 Processing condition 1: {
  "id": "1",
  "leftValue": "={{$json.A}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.907Z] [CONSOLE]   🔍 Processing condition 1: {
  "id": "1",
  "leftValue": "={{$json.A}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.907Z] [CONSOLE]   🔍 Processing condition 1: {
  "id": "1",
  "leftValue": "={{$json.A}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.907Z] [CONSOLE]   🔍 Processing condition 1: {
  "id": "1",
  "leftValue": "={{$json.A}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.907Z] [CONSOLE]   🔍 Processing condition 1: {
  "id": "1",
  "leftValue": "={{$json.A}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.908Z] [CONSOLE]   🔍 Processing condition 2: {
  "id": "2",
  "leftValue": "={{$json.B}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.908Z] [CONSOLE]   🔍 Processing condition 2: {
  "id": "2",
  "leftValue": "={{$json.B}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.908Z] [CONSOLE]   🔍 Processing condition 2: {
  "id": "2",
  "leftValue": "={{$json.B}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.908Z] [CONSOLE]   🔍 Processing condition 2: {
  "id": "2",
  "leftValue": "={{$json.B}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.908Z] [CONSOLE]   🔍 Processing condition 2: {
  "id": "2",
  "leftValue": "={{$json.B}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.908Z] [CONSOLE]   🔍 Processing condition 2: {
  "id": "2",
  "leftValue": "={{$json.B}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.908Z] [CONSOLE]   🔍 Processing condition 2: {
  "id": "2",
  "leftValue": "={{$json.B}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.908Z] [CONSOLE]   🔍 Processing condition 2: {
  "id": "2",
  "leftValue": "={{$json.B}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.908Z] [CONSOLE]   🔍 Processing condition 2: {
  "id": "2",
  "leftValue": "={{$json.B}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.908Z] [CONSOLE]   🔍 Processing condition 2: {
  "id": "2",
  "leftValue": "={{$json.B}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.908Z] [CONSOLE]   🔍 Processing condition 2: {
  "id": "2",
  "leftValue": "={{$json.B}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.908Z] [CONSOLE]   🔍 Processing condition 3: {
  "id": "3",
  "leftValue": "={{$json.C}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.908Z] [CONSOLE]   🔍 Processing condition 3: {
  "id": "3",
  "leftValue": "={{$json.C}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.908Z] [CONSOLE]   🔍 Processing condition 3: {
  "id": "3",
  "leftValue": "={{$json.C}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.908Z] [CONSOLE]   🔍 Processing condition 3: {
  "id": "3",
  "leftValue": "={{$json.C}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.908Z] [CONSOLE]   🔍 Processing condition 3: {
  "id": "3",
  "leftValue": "={{$json.C}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.908Z] [CONSOLE]   🔍 Processing condition 3: {
  "id": "3",
  "leftValue": "={{$json.C}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.908Z] [CONSOLE]   🔍 Processing condition 3: {
  "id": "3",
  "leftValue": "={{$json.C}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.908Z] [CONSOLE]   🔍 Processing condition 3: {
  "id": "3",
  "leftValue": "={{$json.C}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.908Z] [CONSOLE]   🔍 Processing condition 3: {
  "id": "3",
  "leftValue": "={{$json.C}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.908Z] [CONSOLE]   🔍 Processing condition 3: {
  "id": "3",
  "leftValue": "={{$json.C}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.908Z] [CONSOLE]   🔍 Processing condition 3: {
  "id": "3",
  "leftValue": "={{$json.C}}",
  "rightValue": "",
  "operator": {
    "type": "string",
    "operation": "notEmpty"
  }
}
[2025-06-07T21:56:29.908Z] [CONSOLE]   ❌ Removing invalid "combinator" field
[2025-06-07T21:56:29.908Z] [CONSOLE]   ❌ Removing invalid "combinator" field
[2025-06-07T21:56:29.909Z] [CONSOLE]   ❌ Removing invalid "combinator" field
[2025-06-07T21:56:29.909Z] [CONSOLE]   ❌ Removing invalid "combinator" field
[2025-06-07T21:56:29.909Z] [CONSOLE]   ❌ Removing invalid "combinator" field
[2025-06-07T21:56:29.909Z] [CONSOLE]   ❌ Removing invalid "combinator" field
[2025-06-07T21:56:29.909Z] [CONSOLE]   ❌ Removing invalid "combinator" field
[2025-06-07T21:56:29.909Z] [CONSOLE]   ❌ Removing invalid "combinator" field
[2025-06-07T21:56:29.909Z] [CONSOLE]   ❌ Removing invalid "combinator" field
[2025-06-07T21:56:29.909Z] [CONSOLE]   ❌ Removing invalid "combinator" field
[2025-06-07T21:56:29.909Z] [CONSOLE]   ❌ Removing invalid "combinator" field
[2025-06-07T21:56:29.909Z] [CONSOLE]   ✅ Final IF node structure for "IF - Check Data": {
  "options": {
    "caseSensitive": true,
    "leftValue": "",
    "typeValidation": "strict"
  },
  "conditions": [
    {
      "leftValue": "={{$json.A}}",
      "rightValue": "",
      "operation": "equal"
    },
    {
      "leftValue": "={{$json.B}}",
      "rightValue": "",
      "operation": "equal"
    },
    {
      "leftValue": "={{$json.C}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:56:29.909Z] [CONSOLE]   ✅ Final IF node structure for "IF - Check Data": {
  "options": {
    "caseSensitive": true,
    "leftValue": "",
    "typeValidation": "strict"
  },
  "conditions": [
    {
      "leftValue": "={{$json.A}}",
      "rightValue": "",
      "operation": "equal"
    },
    {
      "leftValue": "={{$json.B}}",
      "rightValue": "",
      "operation": "equal"
    },
    {
      "leftValue": "={{$json.C}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:56:29.909Z] [CONSOLE]   ✅ Final IF node structure for "IF - Check Data": {
  "options": {
    "caseSensitive": true,
    "leftValue": "",
    "typeValidation": "strict"
  },
  "conditions": [
    {
      "leftValue": "={{$json.A}}",
      "rightValue": "",
      "operation": "equal"
    },
    {
      "leftValue": "={{$json.B}}",
      "rightValue": "",
      "operation": "equal"
    },
    {
      "leftValue": "={{$json.C}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:56:29.909Z] [CONSOLE]   ✅ Final IF node structure for "IF - Check Data": {
  "options": {
    "caseSensitive": true,
    "leftValue": "",
    "typeValidation": "strict"
  },
  "conditions": [
    {
      "leftValue": "={{$json.A}}",
      "rightValue": "",
      "operation": "equal"
    },
    {
      "leftValue": "={{$json.B}}",
      "rightValue": "",
      "operation": "equal"
    },
    {
      "leftValue": "={{$json.C}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:56:29.909Z] [CONSOLE]   ✅ Final IF node structure for "IF - Check Data": {
  "options": {
    "caseSensitive": true,
    "leftValue": "",
    "typeValidation": "strict"
  },
  "conditions": [
    {
      "leftValue": "={{$json.A}}",
      "rightValue": "",
      "operation": "equal"
    },
    {
      "leftValue": "={{$json.B}}",
      "rightValue": "",
      "operation": "equal"
    },
    {
      "leftValue": "={{$json.C}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:56:29.909Z] [CONSOLE]   ✅ Final IF node structure for "IF - Check Data": {
  "options": {
    "caseSensitive": true,
    "leftValue": "",
    "typeValidation": "strict"
  },
  "conditions": [
    {
      "leftValue": "={{$json.A}}",
      "rightValue": "",
      "operation": "equal"
    },
    {
      "leftValue": "={{$json.B}}",
      "rightValue": "",
      "operation": "equal"
    },
    {
      "leftValue": "={{$json.C}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:56:29.909Z] [CONSOLE]   ✅ Final IF node structure for "IF - Check Data": {
  "options": {
    "caseSensitive": true,
    "leftValue": "",
    "typeValidation": "strict"
  },
  "conditions": [
    {
      "leftValue": "={{$json.A}}",
      "rightValue": "",
      "operation": "equal"
    },
    {
      "leftValue": "={{$json.B}}",
      "rightValue": "",
      "operation": "equal"
    },
    {
      "leftValue": "={{$json.C}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:56:29.909Z] [CONSOLE]   ✅ Final IF node structure for "IF - Check Data": {
  "options": {
    "caseSensitive": true,
    "leftValue": "",
    "typeValidation": "strict"
  },
  "conditions": [
    {
      "leftValue": "={{$json.A}}",
      "rightValue": "",
      "operation": "equal"
    },
    {
      "leftValue": "={{$json.B}}",
      "rightValue": "",
      "operation": "equal"
    },
    {
      "leftValue": "={{$json.C}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:56:29.909Z] [CONSOLE]   ✅ Final IF node structure for "IF - Check Data": {
  "options": {
    "caseSensitive": true,
    "leftValue": "",
    "typeValidation": "strict"
  },
  "conditions": [
    {
      "leftValue": "={{$json.A}}",
      "rightValue": "",
      "operation": "equal"
    },
    {
      "leftValue": "={{$json.B}}",
      "rightValue": "",
      "operation": "equal"
    },
    {
      "leftValue": "={{$json.C}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:56:29.909Z] [CONSOLE]   ✅ Final IF node structure for "IF - Check Data": {
  "options": {
    "caseSensitive": true,
    "leftValue": "",
    "typeValidation": "strict"
  },
  "conditions": [
    {
      "leftValue": "={{$json.A}}",
      "rightValue": "",
      "operation": "equal"
    },
    {
      "leftValue": "={{$json.B}}",
      "rightValue": "",
      "operation": "equal"
    },
    {
      "leftValue": "={{$json.C}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:56:29.909Z] [CONSOLE]   ✅ Final IF node structure for "IF - Check Data": {
  "options": {
    "caseSensitive": true,
    "leftValue": "",
    "typeValidation": "strict"
  },
  "conditions": [
    {
      "leftValue": "={{$json.A}}",
      "rightValue": "",
      "operation": "equal"
    },
    {
      "leftValue": "={{$json.B}}",
      "rightValue": "",
      "operation": "equal"
    },
    {
      "leftValue": "={{$json.C}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:56:29.910Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:56:29.910Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:56:29.910Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:56:29.910Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:56:29.910Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:56:29.910Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:56:29.910Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:56:29.910Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:56:29.910Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:56:29.910Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:56:29.910Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:56:29.910Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:56:29.910Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:56:29.910Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:56:29.910Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:56:29.910Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:56:29.910Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:56:29.910Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:56:29.910Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:56:29.910Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:56:29.910Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:56:29.910Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:56:29.911Z] [CONSOLE] 
Node 0: Google Sheets Trigger (n8n-nodes-base.googleSheetsTrigger)
[2025-06-07T21:56:29.911Z] [CONSOLE] 
Node 0: Google Sheets Trigger (n8n-nodes-base.googleSheetsTrigger)
[2025-06-07T21:56:29.911Z] [CONSOLE] 
Node 0: Google Sheets Trigger (n8n-nodes-base.googleSheetsTrigger)
[2025-06-07T21:56:29.911Z] [CONSOLE] 
Node 0: Google Sheets Trigger (n8n-nodes-base.googleSheetsTrigger)
[2025-06-07T21:56:29.911Z] [CONSOLE] 
Node 0: Google Sheets Trigger (n8n-nodes-base.googleSheetsTrigger)
[2025-06-07T21:56:29.911Z] [CONSOLE] 
Node 0: Google Sheets Trigger (n8n-nodes-base.googleSheetsTrigger)
[2025-06-07T21:56:29.911Z] [CONSOLE] 
Node 0: Google Sheets Trigger (n8n-nodes-base.googleSheetsTrigger)
[2025-06-07T21:56:29.911Z] [CONSOLE] 
Node 0: Google Sheets Trigger (n8n-nodes-base.googleSheetsTrigger)
[2025-06-07T21:56:29.911Z] [CONSOLE] 
Node 0: Google Sheets Trigger (n8n-nodes-base.googleSheetsTrigger)
[2025-06-07T21:56:29.911Z] [CONSOLE] 
Node 0: Google Sheets Trigger (n8n-nodes-base.googleSheetsTrigger)
[2025-06-07T21:56:29.911Z] [CONSOLE] 
Node 0: Google Sheets Trigger (n8n-nodes-base.googleSheetsTrigger)
[2025-06-07T21:56:29.911Z] [CONSOLE] Parameters: {
  "pollTimes": {
    "item": [
      {
        "mode": "everyMinute"
      }
    ]
  },
  "documentId": {
    "__rl": true,
    "mode": "id",
    "value": "1qrs456tuv789"
  },
  "sheetName": {
    "__rl": true,
    "mode": "name",
    "value": "Sales Tracker"
  },
  "event": "rowAdded"
}
[2025-06-07T21:56:29.911Z] [CONSOLE] Parameters: {
  "pollTimes": {
    "item": [
      {
        "mode": "everyMinute"
      }
    ]
  },
  "documentId": {
    "__rl": true,
    "mode": "id",
    "value": "1qrs456tuv789"
  },
  "sheetName": {
    "__rl": true,
    "mode": "name",
    "value": "Sales Tracker"
  },
  "event": "rowAdded"
}
[2025-06-07T21:56:29.911Z] [CONSOLE] Parameters: {
  "pollTimes": {
    "item": [
      {
        "mode": "everyMinute"
      }
    ]
  },
  "documentId": {
    "__rl": true,
    "mode": "id",
    "value": "1qrs456tuv789"
  },
  "sheetName": {
    "__rl": true,
    "mode": "name",
    "value": "Sales Tracker"
  },
  "event": "rowAdded"
}
[2025-06-07T21:56:29.911Z] [CONSOLE] Parameters: {
  "pollTimes": {
    "item": [
      {
        "mode": "everyMinute"
      }
    ]
  },
  "documentId": {
    "__rl": true,
    "mode": "id",
    "value": "1qrs456tuv789"
  },
  "sheetName": {
    "__rl": true,
    "mode": "name",
    "value": "Sales Tracker"
  },
  "event": "rowAdded"
}
[2025-06-07T21:56:29.911Z] [CONSOLE] Parameters: {
  "pollTimes": {
    "item": [
      {
        "mode": "everyMinute"
      }
    ]
  },
  "documentId": {
    "__rl": true,
    "mode": "id",
    "value": "1qrs456tuv789"
  },
  "sheetName": {
    "__rl": true,
    "mode": "name",
    "value": "Sales Tracker"
  },
  "event": "rowAdded"
}
[2025-06-07T21:56:29.911Z] [CONSOLE] Parameters: {
  "pollTimes": {
    "item": [
      {
        "mode": "everyMinute"
      }
    ]
  },
  "documentId": {
    "__rl": true,
    "mode": "id",
    "value": "1qrs456tuv789"
  },
  "sheetName": {
    "__rl": true,
    "mode": "name",
    "value": "Sales Tracker"
  },
  "event": "rowAdded"
}
[2025-06-07T21:56:29.911Z] [CONSOLE] Parameters: {
  "pollTimes": {
    "item": [
      {
        "mode": "everyMinute"
      }
    ]
  },
  "documentId": {
    "__rl": true,
    "mode": "id",
    "value": "1qrs456tuv789"
  },
  "sheetName": {
    "__rl": true,
    "mode": "name",
    "value": "Sales Tracker"
  },
  "event": "rowAdded"
}
[2025-06-07T21:56:29.911Z] [CONSOLE] Parameters: {
  "pollTimes": {
    "item": [
      {
        "mode": "everyMinute"
      }
    ]
  },
  "documentId": {
    "__rl": true,
    "mode": "id",
    "value": "1qrs456tuv789"
  },
  "sheetName": {
    "__rl": true,
    "mode": "name",
    "value": "Sales Tracker"
  },
  "event": "rowAdded"
}
[2025-06-07T21:56:29.911Z] [CONSOLE] Parameters: {
  "pollTimes": {
    "item": [
      {
        "mode": "everyMinute"
      }
    ]
  },
  "documentId": {
    "__rl": true,
    "mode": "id",
    "value": "1qrs456tuv789"
  },
  "sheetName": {
    "__rl": true,
    "mode": "name",
    "value": "Sales Tracker"
  },
  "event": "rowAdded"
}
[2025-06-07T21:56:29.911Z] [CONSOLE] Parameters: {
  "pollTimes": {
    "item": [
      {
        "mode": "everyMinute"
      }
    ]
  },
  "documentId": {
    "__rl": true,
    "mode": "id",
    "value": "1qrs456tuv789"
  },
  "sheetName": {
    "__rl": true,
    "mode": "name",
    "value": "Sales Tracker"
  },
  "event": "rowAdded"
}
[2025-06-07T21:56:29.911Z] [CONSOLE] Parameters: {
  "pollTimes": {
    "item": [
      {
        "mode": "everyMinute"
      }
    ]
  },
  "documentId": {
    "__rl": true,
    "mode": "id",
    "value": "1qrs456tuv789"
  },
  "sheetName": {
    "__rl": true,
    "mode": "name",
    "value": "Sales Tracker"
  },
  "event": "rowAdded"
}
[2025-06-07T21:56:29.911Z] [CONSOLE] 
Node 1: Set Email Data (n8n-nodes-base.set)
[2025-06-07T21:56:29.911Z] [CONSOLE] 
Node 1: Set Email Data (n8n-nodes-base.set)
[2025-06-07T21:56:29.911Z] [CONSOLE] 
Node 1: Set Email Data (n8n-nodes-base.set)
[2025-06-07T21:56:29.911Z] [CONSOLE] 
Node 1: Set Email Data (n8n-nodes-base.set)
[2025-06-07T21:56:29.911Z] [CONSOLE] 
Node 1: Set Email Data (n8n-nodes-base.set)
[2025-06-07T21:56:29.911Z] [CONSOLE] 
Node 1: Set Email Data (n8n-nodes-base.set)
[2025-06-07T21:56:29.911Z] [CONSOLE] 
Node 1: Set Email Data (n8n-nodes-base.set)
[2025-06-07T21:56:29.911Z] [CONSOLE] 
Node 1: Set Email Data (n8n-nodes-base.set)
[2025-06-07T21:56:29.911Z] [CONSOLE] 
Node 1: Set Email Data (n8n-nodes-base.set)
[2025-06-07T21:56:29.911Z] [CONSOLE] 
Node 1: Set Email Data (n8n-nodes-base.set)
[2025-06-07T21:56:29.911Z] [CONSOLE] 
Node 1: Set Email Data (n8n-nodes-base.set)
[2025-06-07T21:56:29.911Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "emailSubject",
        "value": "New Sale Added - {{$json.A}}"
      },
      {
        "name": "emailBody",
        "value": "A new sale has been recorded in the Sales Tracker:\n\nDate: {{$json.A}}\nCustomer: {{$json.B}}\nAmount: {{$json.C}}\n\nThis is an automated notification from your Sales Tracker spreadsheet."
      }
    ]
  }
}
[2025-06-07T21:56:29.911Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "emailSubject",
        "value": "New Sale Added - {{$json.A}}"
      },
      {
        "name": "emailBody",
        "value": "A new sale has been recorded in the Sales Tracker:\n\nDate: {{$json.A}}\nCustomer: {{$json.B}}\nAmount: {{$json.C}}\n\nThis is an automated notification from your Sales Tracker spreadsheet."
      }
    ]
  }
}
[2025-06-07T21:56:29.912Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "emailSubject",
        "value": "New Sale Added - {{$json.A}}"
      },
      {
        "name": "emailBody",
        "value": "A new sale has been recorded in the Sales Tracker:\n\nDate: {{$json.A}}\nCustomer: {{$json.B}}\nAmount: {{$json.C}}\n\nThis is an automated notification from your Sales Tracker spreadsheet."
      }
    ]
  }
}
[2025-06-07T21:56:29.912Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "emailSubject",
        "value": "New Sale Added - {{$json.A}}"
      },
      {
        "name": "emailBody",
        "value": "A new sale has been recorded in the Sales Tracker:\n\nDate: {{$json.A}}\nCustomer: {{$json.B}}\nAmount: {{$json.C}}\n\nThis is an automated notification from your Sales Tracker spreadsheet."
      }
    ]
  }
}
[2025-06-07T21:56:29.912Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "emailSubject",
        "value": "New Sale Added - {{$json.A}}"
      },
      {
        "name": "emailBody",
        "value": "A new sale has been recorded in the Sales Tracker:\n\nDate: {{$json.A}}\nCustomer: {{$json.B}}\nAmount: {{$json.C}}\n\nThis is an automated notification from your Sales Tracker spreadsheet."
      }
    ]
  }
}
[2025-06-07T21:56:29.912Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "emailSubject",
        "value": "New Sale Added - {{$json.A}}"
      },
      {
        "name": "emailBody",
        "value": "A new sale has been recorded in the Sales Tracker:\n\nDate: {{$json.A}}\nCustomer: {{$json.B}}\nAmount: {{$json.C}}\n\nThis is an automated notification from your Sales Tracker spreadsheet."
      }
    ]
  }
}
[2025-06-07T21:56:29.912Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "emailSubject",
        "value": "New Sale Added - {{$json.A}}"
      },
      {
        "name": "emailBody",
        "value": "A new sale has been recorded in the Sales Tracker:\n\nDate: {{$json.A}}\nCustomer: {{$json.B}}\nAmount: {{$json.C}}\n\nThis is an automated notification from your Sales Tracker spreadsheet."
      }
    ]
  }
}
[2025-06-07T21:56:29.912Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "emailSubject",
        "value": "New Sale Added - {{$json.A}}"
      },
      {
        "name": "emailBody",
        "value": "A new sale has been recorded in the Sales Tracker:\n\nDate: {{$json.A}}\nCustomer: {{$json.B}}\nAmount: {{$json.C}}\n\nThis is an automated notification from your Sales Tracker spreadsheet."
      }
    ]
  }
}
[2025-06-07T21:56:29.912Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "emailSubject",
        "value": "New Sale Added - {{$json.A}}"
      },
      {
        "name": "emailBody",
        "value": "A new sale has been recorded in the Sales Tracker:\n\nDate: {{$json.A}}\nCustomer: {{$json.B}}\nAmount: {{$json.C}}\n\nThis is an automated notification from your Sales Tracker spreadsheet."
      }
    ]
  }
}
[2025-06-07T21:56:29.912Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "emailSubject",
        "value": "New Sale Added - {{$json.A}}"
      },
      {
        "name": "emailBody",
        "value": "A new sale has been recorded in the Sales Tracker:\n\nDate: {{$json.A}}\nCustomer: {{$json.B}}\nAmount: {{$json.C}}\n\nThis is an automated notification from your Sales Tracker spreadsheet."
      }
    ]
  }
}
[2025-06-07T21:56:29.912Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "emailSubject",
        "value": "New Sale Added - {{$json.A}}"
      },
      {
        "name": "emailBody",
        "value": "A new sale has been recorded in the Sales Tracker:\n\nDate: {{$json.A}}\nCustomer: {{$json.B}}\nAmount: {{$json.C}}\n\nThis is an automated notification from your Sales Tracker spreadsheet."
      }
    ]
  }
}
[2025-06-07T21:56:29.912Z] [CONSOLE] 
Node 2: Send Email (n8n-nodes-base.gmail)
[2025-06-07T21:56:29.912Z] [CONSOLE] 
Node 2: Send Email (n8n-nodes-base.gmail)
[2025-06-07T21:56:29.912Z] [CONSOLE] 
Node 2: Send Email (n8n-nodes-base.gmail)
[2025-06-07T21:56:29.912Z] [CONSOLE] 
Node 2: Send Email (n8n-nodes-base.gmail)
[2025-06-07T21:56:29.912Z] [CONSOLE] 
Node 2: Send Email (n8n-nodes-base.gmail)
[2025-06-07T21:56:29.912Z] [CONSOLE] 
Node 2: Send Email (n8n-nodes-base.gmail)
[2025-06-07T21:56:29.912Z] [CONSOLE] 
Node 2: Send Email (n8n-nodes-base.gmail)
[2025-06-07T21:56:29.912Z] [CONSOLE] 
Node 2: Send Email (n8n-nodes-base.gmail)
[2025-06-07T21:56:29.912Z] [CONSOLE] 
Node 2: Send Email (n8n-nodes-base.gmail)
[2025-06-07T21:56:29.912Z] [CONSOLE] 
Node 2: Send Email (n8n-nodes-base.gmail)
[2025-06-07T21:56:29.912Z] [CONSOLE] 
Node 2: Send Email (n8n-nodes-base.gmail)
[2025-06-07T21:56:29.912Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "notifications@mycompany.com",
  "subject": "={{$json.emailSubject}}",
  "message": "={{$json.emailBody}}",
  "resource": "message"
}
[2025-06-07T21:56:29.912Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "notifications@mycompany.com",
  "subject": "={{$json.emailSubject}}",
  "message": "={{$json.emailBody}}",
  "resource": "message"
}
[2025-06-07T21:56:29.912Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "notifications@mycompany.com",
  "subject": "={{$json.emailSubject}}",
  "message": "={{$json.emailBody}}",
  "resource": "message"
}
[2025-06-07T21:56:29.912Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "notifications@mycompany.com",
  "subject": "={{$json.emailSubject}}",
  "message": "={{$json.emailBody}}",
  "resource": "message"
}
[2025-06-07T21:56:29.912Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "notifications@mycompany.com",
  "subject": "={{$json.emailSubject}}",
  "message": "={{$json.emailBody}}",
  "resource": "message"
}
[2025-06-07T21:56:29.912Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "notifications@mycompany.com",
  "subject": "={{$json.emailSubject}}",
  "message": "={{$json.emailBody}}",
  "resource": "message"
}
[2025-06-07T21:56:29.912Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "notifications@mycompany.com",
  "subject": "={{$json.emailSubject}}",
  "message": "={{$json.emailBody}}",
  "resource": "message"
}
[2025-06-07T21:56:29.912Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "notifications@mycompany.com",
  "subject": "={{$json.emailSubject}}",
  "message": "={{$json.emailBody}}",
  "resource": "message"
}
[2025-06-07T21:56:29.912Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "notifications@mycompany.com",
  "subject": "={{$json.emailSubject}}",
  "message": "={{$json.emailBody}}",
  "resource": "message"
}
[2025-06-07T21:56:29.912Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "notifications@mycompany.com",
  "subject": "={{$json.emailSubject}}",
  "message": "={{$json.emailBody}}",
  "resource": "message"
}
[2025-06-07T21:56:29.912Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "notifications@mycompany.com",
  "subject": "={{$json.emailSubject}}",
  "message": "={{$json.emailBody}}",
  "resource": "message"
}
[2025-06-07T21:56:29.912Z] [CONSOLE] 
Node 3: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:56:29.912Z] [CONSOLE] 
Node 3: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:56:29.912Z] [CONSOLE] 
Node 3: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:56:29.912Z] [CONSOLE] 
Node 3: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:56:29.912Z] [CONSOLE] 
Node 3: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:56:29.912Z] [CONSOLE] 
Node 3: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:56:29.913Z] [CONSOLE] 
Node 3: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:56:29.913Z] [CONSOLE] 
Node 3: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:56:29.913Z] [CONSOLE] 
Node 3: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:56:29.913Z] [CONSOLE] 
Node 3: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:56:29.913Z] [CONSOLE] 
Node 3: Error Handler (n8n-nodes-base.errorTrigger)
[2025-06-07T21:56:29.913Z] [CONSOLE] Parameters: {}
[2025-06-07T21:56:29.913Z] [CONSOLE] Parameters: {}
[2025-06-07T21:56:29.913Z] [CONSOLE] Parameters: {}
[2025-06-07T21:56:29.913Z] [CONSOLE] Parameters: {}
[2025-06-07T21:56:29.913Z] [CONSOLE] Parameters: {}
[2025-06-07T21:56:29.913Z] [CONSOLE] Parameters: {}
[2025-06-07T21:56:29.913Z] [CONSOLE] Parameters: {}
[2025-06-07T21:56:29.913Z] [CONSOLE] Parameters: {}
[2025-06-07T21:56:29.913Z] [CONSOLE] Parameters: {}
[2025-06-07T21:56:29.913Z] [CONSOLE] Parameters: {}
[2025-06-07T21:56:29.913Z] [CONSOLE] Parameters: {}
[2025-06-07T21:56:29.913Z] [CONSOLE] 
Node 4: Log Error (n8n-nodes-base.set)
[2025-06-07T21:56:29.913Z] [CONSOLE] 
Node 4: Log Error (n8n-nodes-base.set)
[2025-06-07T21:56:29.913Z] [CONSOLE] 
Node 4: Log Error (n8n-nodes-base.set)
[2025-06-07T21:56:29.913Z] [CONSOLE] 
Node 4: Log Error (n8n-nodes-base.set)
[2025-06-07T21:56:29.913Z] [CONSOLE] 
Node 4: Log Error (n8n-nodes-base.set)
[2025-06-07T21:56:29.913Z] [CONSOLE] 
Node 4: Log Error (n8n-nodes-base.set)
[2025-06-07T21:56:29.913Z] [CONSOLE] 
Node 4: Log Error (n8n-nodes-base.set)
[2025-06-07T21:56:29.913Z] [CONSOLE] 
Node 4: Log Error (n8n-nodes-base.set)
[2025-06-07T21:56:29.913Z] [CONSOLE] 
Node 4: Log Error (n8n-nodes-base.set)
[2025-06-07T21:56:29.913Z] [CONSOLE] 
Node 4: Log Error (n8n-nodes-base.set)
[2025-06-07T21:56:29.913Z] [CONSOLE] 
Node 4: Log Error (n8n-nodes-base.set)
[2025-06-07T21:56:29.913Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "errorMessage",
        "value": "{{$json[\"error\"][\"message\"]}}"
      },
      {
        "name": "errorTime",
        "value": "{{new Date().toISOString()}}"
      },
      {
        "name": "workflowName",
        "value": "{{$workflow.name}}"
      }
    ]
  }
}
[2025-06-07T21:56:29.913Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "errorMessage",
        "value": "{{$json[\"error\"][\"message\"]}}"
      },
      {
        "name": "errorTime",
        "value": "{{new Date().toISOString()}}"
      },
      {
        "name": "workflowName",
        "value": "{{$workflow.name}}"
      }
    ]
  }
}
[2025-06-07T21:56:29.913Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "errorMessage",
        "value": "{{$json[\"error\"][\"message\"]}}"
      },
      {
        "name": "errorTime",
        "value": "{{new Date().toISOString()}}"
      },
      {
        "name": "workflowName",
        "value": "{{$workflow.name}}"
      }
    ]
  }
}
[2025-06-07T21:56:29.913Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "errorMessage",
        "value": "{{$json[\"error\"][\"message\"]}}"
      },
      {
        "name": "errorTime",
        "value": "{{new Date().toISOString()}}"
      },
      {
        "name": "workflowName",
        "value": "{{$workflow.name}}"
      }
    ]
  }
}
[2025-06-07T21:56:29.913Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "errorMessage",
        "value": "{{$json[\"error\"][\"message\"]}}"
      },
      {
        "name": "errorTime",
        "value": "{{new Date().toISOString()}}"
      },
      {
        "name": "workflowName",
        "value": "{{$workflow.name}}"
      }
    ]
  }
}
[2025-06-07T21:56:29.913Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "errorMessage",
        "value": "{{$json[\"error\"][\"message\"]}}"
      },
      {
        "name": "errorTime",
        "value": "{{new Date().toISOString()}}"
      },
      {
        "name": "workflowName",
        "value": "{{$workflow.name}}"
      }
    ]
  }
}
[2025-06-07T21:56:29.913Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "errorMessage",
        "value": "{{$json[\"error\"][\"message\"]}}"
      },
      {
        "name": "errorTime",
        "value": "{{new Date().toISOString()}}"
      },
      {
        "name": "workflowName",
        "value": "{{$workflow.name}}"
      }
    ]
  }
}
[2025-06-07T21:56:29.913Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "errorMessage",
        "value": "{{$json[\"error\"][\"message\"]}}"
      },
      {
        "name": "errorTime",
        "value": "{{new Date().toISOString()}}"
      },
      {
        "name": "workflowName",
        "value": "{{$workflow.name}}"
      }
    ]
  }
}
[2025-06-07T21:56:29.913Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "errorMessage",
        "value": "{{$json[\"error\"][\"message\"]}}"
      },
      {
        "name": "errorTime",
        "value": "{{new Date().toISOString()}}"
      },
      {
        "name": "workflowName",
        "value": "{{$workflow.name}}"
      }
    ]
  }
}
[2025-06-07T21:56:29.914Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "errorMessage",
        "value": "{{$json[\"error\"][\"message\"]}}"
      },
      {
        "name": "errorTime",
        "value": "{{new Date().toISOString()}}"
      },
      {
        "name": "workflowName",
        "value": "{{$workflow.name}}"
      }
    ]
  }
}
[2025-06-07T21:56:29.914Z] [CONSOLE] Parameters: {
  "values": {
    "string": [
      {
        "name": "errorMessage",
        "value": "{{$json[\"error\"][\"message\"]}}"
      },
      {
        "name": "errorTime",
        "value": "{{new Date().toISOString()}}"
      },
      {
        "name": "workflowName",
        "value": "{{$workflow.name}}"
      }
    ]
  }
}
[2025-06-07T21:56:29.914Z] [CONSOLE] 
Node 5: Send Error Notification (n8n-nodes-base.gmail)
[2025-06-07T21:56:29.914Z] [CONSOLE] 
Node 5: Send Error Notification (n8n-nodes-base.gmail)
[2025-06-07T21:56:29.914Z] [CONSOLE] 
Node 5: Send Error Notification (n8n-nodes-base.gmail)
[2025-06-07T21:56:29.914Z] [CONSOLE] 
Node 5: Send Error Notification (n8n-nodes-base.gmail)
[2025-06-07T21:56:29.914Z] [CONSOLE] 
Node 5: Send Error Notification (n8n-nodes-base.gmail)
[2025-06-07T21:56:29.914Z] [CONSOLE] 
Node 5: Send Error Notification (n8n-nodes-base.gmail)
[2025-06-07T21:56:29.914Z] [CONSOLE] 
Node 5: Send Error Notification (n8n-nodes-base.gmail)
[2025-06-07T21:56:29.914Z] [CONSOLE] 
Node 5: Send Error Notification (n8n-nodes-base.gmail)
[2025-06-07T21:56:29.914Z] [CONSOLE] 
Node 5: Send Error Notification (n8n-nodes-base.gmail)
[2025-06-07T21:56:29.914Z] [CONSOLE] 
Node 5: Send Error Notification (n8n-nodes-base.gmail)
[2025-06-07T21:56:29.914Z] [CONSOLE] 
Node 5: Send Error Notification (n8n-nodes-base.gmail)
[2025-06-07T21:56:29.914Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "notifications@mycompany.com",
  "subject": "ERROR: Sales Tracker Workflow Failed",
  "message": "The Sales Tracker workflow encountered an error:\n\nError: {{$json.errorMessage}}\nTime: {{$json.errorTime}}\nWorkflow: {{$json.workflowName}}\n\nPlease check the workflow execution logs for more details.",
  "resource": "message"
}
[2025-06-07T21:56:29.914Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "notifications@mycompany.com",
  "subject": "ERROR: Sales Tracker Workflow Failed",
  "message": "The Sales Tracker workflow encountered an error:\n\nError: {{$json.errorMessage}}\nTime: {{$json.errorTime}}\nWorkflow: {{$json.workflowName}}\n\nPlease check the workflow execution logs for more details.",
  "resource": "message"
}
[2025-06-07T21:56:29.914Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "notifications@mycompany.com",
  "subject": "ERROR: Sales Tracker Workflow Failed",
  "message": "The Sales Tracker workflow encountered an error:\n\nError: {{$json.errorMessage}}\nTime: {{$json.errorTime}}\nWorkflow: {{$json.workflowName}}\n\nPlease check the workflow execution logs for more details.",
  "resource": "message"
}
[2025-06-07T21:56:29.914Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "notifications@mycompany.com",
  "subject": "ERROR: Sales Tracker Workflow Failed",
  "message": "The Sales Tracker workflow encountered an error:\n\nError: {{$json.errorMessage}}\nTime: {{$json.errorTime}}\nWorkflow: {{$json.workflowName}}\n\nPlease check the workflow execution logs for more details.",
  "resource": "message"
}
[2025-06-07T21:56:29.914Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "notifications@mycompany.com",
  "subject": "ERROR: Sales Tracker Workflow Failed",
  "message": "The Sales Tracker workflow encountered an error:\n\nError: {{$json.errorMessage}}\nTime: {{$json.errorTime}}\nWorkflow: {{$json.workflowName}}\n\nPlease check the workflow execution logs for more details.",
  "resource": "message"
}
[2025-06-07T21:56:29.914Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "notifications@mycompany.com",
  "subject": "ERROR: Sales Tracker Workflow Failed",
  "message": "The Sales Tracker workflow encountered an error:\n\nError: {{$json.errorMessage}}\nTime: {{$json.errorTime}}\nWorkflow: {{$json.workflowName}}\n\nPlease check the workflow execution logs for more details.",
  "resource": "message"
}
[2025-06-07T21:56:29.914Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "notifications@mycompany.com",
  "subject": "ERROR: Sales Tracker Workflow Failed",
  "message": "The Sales Tracker workflow encountered an error:\n\nError: {{$json.errorMessage}}\nTime: {{$json.errorTime}}\nWorkflow: {{$json.workflowName}}\n\nPlease check the workflow execution logs for more details.",
  "resource": "message"
}
[2025-06-07T21:56:29.914Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "notifications@mycompany.com",
  "subject": "ERROR: Sales Tracker Workflow Failed",
  "message": "The Sales Tracker workflow encountered an error:\n\nError: {{$json.errorMessage}}\nTime: {{$json.errorTime}}\nWorkflow: {{$json.workflowName}}\n\nPlease check the workflow execution logs for more details.",
  "resource": "message"
}
[2025-06-07T21:56:29.914Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "notifications@mycompany.com",
  "subject": "ERROR: Sales Tracker Workflow Failed",
  "message": "The Sales Tracker workflow encountered an error:\n\nError: {{$json.errorMessage}}\nTime: {{$json.errorTime}}\nWorkflow: {{$json.workflowName}}\n\nPlease check the workflow execution logs for more details.",
  "resource": "message"
}
[2025-06-07T21:56:29.914Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "notifications@mycompany.com",
  "subject": "ERROR: Sales Tracker Workflow Failed",
  "message": "The Sales Tracker workflow encountered an error:\n\nError: {{$json.errorMessage}}\nTime: {{$json.errorTime}}\nWorkflow: {{$json.workflowName}}\n\nPlease check the workflow execution logs for more details.",
  "resource": "message"
}
[2025-06-07T21:56:29.914Z] [CONSOLE] Parameters: {
  "operation": "send",
  "sendTo": "notifications@mycompany.com",
  "subject": "ERROR: Sales Tracker Workflow Failed",
  "message": "The Sales Tracker workflow encountered an error:\n\nError: {{$json.errorMessage}}\nTime: {{$json.errorTime}}\nWorkflow: {{$json.workflowName}}\n\nPlease check the workflow execution logs for more details.",
  "resource": "message"
}
[2025-06-07T21:56:29.914Z] [CONSOLE] 
Node 6: IF - Check Data (n8n-nodes-base.if)
[2025-06-07T21:56:29.914Z] [CONSOLE] 
Node 6: IF - Check Data (n8n-nodes-base.if)
[2025-06-07T21:56:29.914Z] [CONSOLE] 
Node 6: IF - Check Data (n8n-nodes-base.if)
[2025-06-07T21:56:29.914Z] [CONSOLE] 
Node 6: IF - Check Data (n8n-nodes-base.if)
[2025-06-07T21:56:29.914Z] [CONSOLE] 
Node 6: IF - Check Data (n8n-nodes-base.if)
[2025-06-07T21:56:29.915Z] [CONSOLE] 
Node 6: IF - Check Data (n8n-nodes-base.if)
[2025-06-07T21:56:29.915Z] [CONSOLE] 
Node 6: IF - Check Data (n8n-nodes-base.if)
[2025-06-07T21:56:29.915Z] [CONSOLE] 
Node 6: IF - Check Data (n8n-nodes-base.if)
[2025-06-07T21:56:29.915Z] [CONSOLE] 
Node 6: IF - Check Data (n8n-nodes-base.if)
[2025-06-07T21:56:29.915Z] [CONSOLE] 
Node 6: IF - Check Data (n8n-nodes-base.if)
[2025-06-07T21:56:29.915Z] [CONSOLE] 
Node 6: IF - Check Data (n8n-nodes-base.if)
[2025-06-07T21:56:29.915Z] [CONSOLE] Parameters: {
  "conditions": {
    "options": {
      "caseSensitive": true,
      "leftValue": "",
      "typeValidation": "strict"
    },
    "conditions": [
      {
        "leftValue": "={{$json.A}}",
        "rightValue": "",
        "operation": "equal"
      },
      {
        "leftValue": "={{$json.B}}",
        "rightValue": "",
        "operation": "equal"
      },
      {
        "leftValue": "={{$json.C}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:56:29.915Z] [CONSOLE] Parameters: {
  "conditions": {
    "options": {
      "caseSensitive": true,
      "leftValue": "",
      "typeValidation": "strict"
    },
    "conditions": [
      {
        "leftValue": "={{$json.A}}",
        "rightValue": "",
        "operation": "equal"
      },
      {
        "leftValue": "={{$json.B}}",
        "rightValue": "",
        "operation": "equal"
      },
      {
        "leftValue": "={{$json.C}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:56:29.915Z] [CONSOLE] Parameters: {
  "conditions": {
    "options": {
      "caseSensitive": true,
      "leftValue": "",
      "typeValidation": "strict"
    },
    "conditions": [
      {
        "leftValue": "={{$json.A}}",
        "rightValue": "",
        "operation": "equal"
      },
      {
        "leftValue": "={{$json.B}}",
        "rightValue": "",
        "operation": "equal"
      },
      {
        "leftValue": "={{$json.C}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:56:29.916Z] [CONSOLE] Parameters: {
  "conditions": {
    "options": {
      "caseSensitive": true,
      "leftValue": "",
      "typeValidation": "strict"
    },
    "conditions": [
      {
        "leftValue": "={{$json.A}}",
        "rightValue": "",
        "operation": "equal"
      },
      {
        "leftValue": "={{$json.B}}",
        "rightValue": "",
        "operation": "equal"
      },
      {
        "leftValue": "={{$json.C}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:56:29.916Z] [CONSOLE] Parameters: {
  "conditions": {
    "options": {
      "caseSensitive": true,
      "leftValue": "",
      "typeValidation": "strict"
    },
    "conditions": [
      {
        "leftValue": "={{$json.A}}",
        "rightValue": "",
        "operation": "equal"
      },
      {
        "leftValue": "={{$json.B}}",
        "rightValue": "",
        "operation": "equal"
      },
      {
        "leftValue": "={{$json.C}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:56:29.916Z] [CONSOLE] Parameters: {
  "conditions": {
    "options": {
      "caseSensitive": true,
      "leftValue": "",
      "typeValidation": "strict"
    },
    "conditions": [
      {
        "leftValue": "={{$json.A}}",
        "rightValue": "",
        "operation": "equal"
      },
      {
        "leftValue": "={{$json.B}}",
        "rightValue": "",
        "operation": "equal"
      },
      {
        "leftValue": "={{$json.C}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:56:29.916Z] [CONSOLE] Parameters: {
  "conditions": {
    "options": {
      "caseSensitive": true,
      "leftValue": "",
      "typeValidation": "strict"
    },
    "conditions": [
      {
        "leftValue": "={{$json.A}}",
        "rightValue": "",
        "operation": "equal"
      },
      {
        "leftValue": "={{$json.B}}",
        "rightValue": "",
        "operation": "equal"
      },
      {
        "leftValue": "={{$json.C}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:56:29.916Z] [CONSOLE] Parameters: {
  "conditions": {
    "options": {
      "caseSensitive": true,
      "leftValue": "",
      "typeValidation": "strict"
    },
    "conditions": [
      {
        "leftValue": "={{$json.A}}",
        "rightValue": "",
        "operation": "equal"
      },
      {
        "leftValue": "={{$json.B}}",
        "rightValue": "",
        "operation": "equal"
      },
      {
        "leftValue": "={{$json.C}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:56:29.916Z] [CONSOLE] Parameters: {
  "conditions": {
    "options": {
      "caseSensitive": true,
      "leftValue": "",
      "typeValidation": "strict"
    },
    "conditions": [
      {
        "leftValue": "={{$json.A}}",
        "rightValue": "",
        "operation": "equal"
      },
      {
        "leftValue": "={{$json.B}}",
        "rightValue": "",
        "operation": "equal"
      },
      {
        "leftValue": "={{$json.C}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:56:29.916Z] [CONSOLE] Parameters: {
  "conditions": {
    "options": {
      "caseSensitive": true,
      "leftValue": "",
      "typeValidation": "strict"
    },
    "conditions": [
      {
        "leftValue": "={{$json.A}}",
        "rightValue": "",
        "operation": "equal"
      },
      {
        "leftValue": "={{$json.B}}",
        "rightValue": "",
        "operation": "equal"
      },
      {
        "leftValue": "={{$json.C}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:56:29.916Z] [CONSOLE] Parameters: {
  "conditions": {
    "options": {
      "caseSensitive": true,
      "leftValue": "",
      "typeValidation": "strict"
    },
    "conditions": [
      {
        "leftValue": "={{$json.A}}",
        "rightValue": "",
        "operation": "equal"
      },
      {
        "leftValue": "={{$json.B}}",
        "rightValue": "",
        "operation": "equal"
      },
      {
        "leftValue": "={{$json.C}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "all"
}
[2025-06-07T21:56:29.916Z] [CONSOLE] 
Connections: {
  "Google Sheets Trigger": {
    "main": [
      [
        {
          "node": "IF - Check Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "IF - Check Data": {
    "main": [
      [
        {
          "node": "Set Email Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Set Email Data": {
    "main": [
      [
        {
          "node": "Send Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Log Error",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Log Error": {
    "main": [
      [
        {
          "node": "Send Error Notification",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:56:29.916Z] [CONSOLE] 
Connections: {
  "Google Sheets Trigger": {
    "main": [
      [
        {
          "node": "IF - Check Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "IF - Check Data": {
    "main": [
      [
        {
          "node": "Set Email Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Set Email Data": {
    "main": [
      [
        {
          "node": "Send Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Log Error",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Log Error": {
    "main": [
      [
        {
          "node": "Send Error Notification",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:56:29.916Z] [CONSOLE] 
Connections: {
  "Google Sheets Trigger": {
    "main": [
      [
        {
          "node": "IF - Check Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "IF - Check Data": {
    "main": [
      [
        {
          "node": "Set Email Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Set Email Data": {
    "main": [
      [
        {
          "node": "Send Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Log Error",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Log Error": {
    "main": [
      [
        {
          "node": "Send Error Notification",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:56:29.916Z] [CONSOLE] 
Connections: {
  "Google Sheets Trigger": {
    "main": [
      [
        {
          "node": "IF - Check Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "IF - Check Data": {
    "main": [
      [
        {
          "node": "Set Email Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Set Email Data": {
    "main": [
      [
        {
          "node": "Send Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Log Error",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Log Error": {
    "main": [
      [
        {
          "node": "Send Error Notification",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:56:29.916Z] [CONSOLE] 
Connections: {
  "Google Sheets Trigger": {
    "main": [
      [
        {
          "node": "IF - Check Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "IF - Check Data": {
    "main": [
      [
        {
          "node": "Set Email Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Set Email Data": {
    "main": [
      [
        {
          "node": "Send Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Log Error",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Log Error": {
    "main": [
      [
        {
          "node": "Send Error Notification",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:56:29.916Z] [CONSOLE] 
Connections: {
  "Google Sheets Trigger": {
    "main": [
      [
        {
          "node": "IF - Check Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "IF - Check Data": {
    "main": [
      [
        {
          "node": "Set Email Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Set Email Data": {
    "main": [
      [
        {
          "node": "Send Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Log Error",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Log Error": {
    "main": [
      [
        {
          "node": "Send Error Notification",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:56:29.916Z] [CONSOLE] 
Connections: {
  "Google Sheets Trigger": {
    "main": [
      [
        {
          "node": "IF - Check Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "IF - Check Data": {
    "main": [
      [
        {
          "node": "Set Email Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Set Email Data": {
    "main": [
      [
        {
          "node": "Send Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Log Error",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Log Error": {
    "main": [
      [
        {
          "node": "Send Error Notification",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:56:29.916Z] [CONSOLE] 
Connections: {
  "Google Sheets Trigger": {
    "main": [
      [
        {
          "node": "IF - Check Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "IF - Check Data": {
    "main": [
      [
        {
          "node": "Set Email Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Set Email Data": {
    "main": [
      [
        {
          "node": "Send Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Log Error",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Log Error": {
    "main": [
      [
        {
          "node": "Send Error Notification",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:56:29.916Z] [CONSOLE] 
Connections: {
  "Google Sheets Trigger": {
    "main": [
      [
        {
          "node": "IF - Check Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "IF - Check Data": {
    "main": [
      [
        {
          "node": "Set Email Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Set Email Data": {
    "main": [
      [
        {
          "node": "Send Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Log Error",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Log Error": {
    "main": [
      [
        {
          "node": "Send Error Notification",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:56:29.916Z] [CONSOLE] 
Connections: {
  "Google Sheets Trigger": {
    "main": [
      [
        {
          "node": "IF - Check Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "IF - Check Data": {
    "main": [
      [
        {
          "node": "Set Email Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Set Email Data": {
    "main": [
      [
        {
          "node": "Send Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Log Error",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Log Error": {
    "main": [
      [
        {
          "node": "Send Error Notification",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:56:29.916Z] [CONSOLE] 
Connections: {
  "Google Sheets Trigger": {
    "main": [
      [
        {
          "node": "IF - Check Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "IF - Check Data": {
    "main": [
      [
        {
          "node": "Set Email Data",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Set Email Data": {
    "main": [
      [
        {
          "node": "Send Email",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Error Handler": {
    "main": [
      [
        {
          "node": "Log Error",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Log Error": {
    "main": [
      [
        {
          "node": "Send Error Notification",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:56:29.916Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "4",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:56:29.916Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "4",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:56:29.916Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "4",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:56:29.916Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "4",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:56:29.916Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "4",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:56:29.916Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "4",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:56:29.916Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "4",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:56:29.916Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "4",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:56:29.916Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "4",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:56:29.916Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "4",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:56:29.916Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "saveManualExecutions": true,
  "callerPolicy": "workflowsFromSameOwner",
  "errorWorkflow": "4",
  "saveExecutionProgress": false,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:56:29.916Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:56:29.916Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:56:29.916Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:56:29.916Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:56:29.916Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:56:29.916Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:56:29.916Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:56:29.916Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:56:29.917Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:56:29.917Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:56:29.917Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:56:29.918Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:56:29.918Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:56:29.918Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:56:29.918Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:56:29.918Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:56:29.918Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:56:29.918Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:56:29.918Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:56:29.918Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:56:29.918Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:56:29.918Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:56:29.918Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:56:29.919Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:56:29.919Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:56:29.919Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:56:29.920Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:56:29.920Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:56:29.920Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:56:29.920Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:56:29.920Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:56:29.920Z] [INFO] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:56:29.920Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:56:29.921Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:56:29.921Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:56:29.921Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:56:29.921Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:56:29.921Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:56:29.921Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:56:29.921Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:56:29.921Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:56:29.921Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:56:29.921Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:56:29.921Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:56:29.921Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:56:29.921Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:56:29.922Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:56:29.922Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:56:29.922Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:56:29.922Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:56:29.922Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:56:29.922Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:56:29.922Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:56:29.922Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:56:29.922Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:29.922Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:29.922Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:29.923Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:29.923Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:29.923Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:29.923Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:29.923Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:29.923Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:29.923Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:29.923Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:29.923Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:29.923Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:29.923Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:29.923Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:29.923Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:29.924Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:29.924Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:29.924Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:29.924Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:29.924Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:29.924Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:29.924Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.924Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.924Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.924Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.924Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.924Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.924Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.924Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.924Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.924Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.924Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.925Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.925Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.925Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.925Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.925Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.925Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.925Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.925Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.925Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.925Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.925Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:29.925Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:56:29.925Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:56:29.925Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:56:29.925Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:56:29.926Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:56:29.926Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:56:29.926Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:56:29.926Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:56:29.926Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:56:29.926Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:56:29.926Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:56:29.926Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:56:29.927Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:56:29.927Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:56:29.927Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:56:29.927Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:56:29.927Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:56:29.927Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:56:29.927Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:56:29.928Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:56:29.928Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:56:29.928Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:56:29.928Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:56:29.928Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:56:29.928Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:56:29.928Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:56:29.928Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:56:29.929Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:56:29.929Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:56:29.929Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:56:29.929Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:56:29.929Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:56:29.929Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:56:29.930Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:56:29.930Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:56:29.930Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:56:29.930Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:56:29.930Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:56:29.930Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:56:29.930Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:56:29.930Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:56:29.931Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:56:29.931Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:56:29.931Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:56:29.931Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:56:29.931Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:56:29.931Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:56:29.932Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:56:29.932Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:56:29.932Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:56:29.932Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:56:29.932Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:56:29.932Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:56:29.932Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:56:29.932Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:56:29.932Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:56:29.932Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:56:29.932Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:56:29.932Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:56:29.932Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:56:29.932Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:56:29.932Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:56:29.932Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:56:29.932Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:56:29.932Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:56:29.932Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:56:29.933Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:56:29.933Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:56:29.933Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:56:29.933Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:56:29.934Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:56:29.934Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:56:29.934Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:56:29.934Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:56:29.934Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:56:29.934Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:56:29.935Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:56:29.935Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:56:29.935Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:56:29.935Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:56:29.936Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:56:29.936Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:56:29.936Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:56:29.936Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:56:29.936Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:56:29.936Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:56:29.936Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:56:29.936Z] [CONSOLE] 📋 Node count: 7
[2025-06-07T21:56:29.939Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:56:29.939Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:56:29.939Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:56:29.939Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:56:29.939Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:56:29.939Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:56:29.939Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:56:29.939Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:56:29.939Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:56:29.939Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:56:29.939Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:56:29.940Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:56:29.940Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:56:29.940Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:56:29.940Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:56:29.940Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:56:29.940Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:56:29.940Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:56:29.940Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:56:29.940Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:56:29.940Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:56:29.940Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:56:29.940Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333389940",
  "nodes": [
    {
      "id": "pazfntzw",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "1qrs456tuv789"
        },
        "sheetName": {
          "__rl": true,
          "mode": "name",
          "value": "Sales Tracker"
        },
        "event": "rowAdded"
      }
    },
    {
      "id": "k0oeg9of",
      "name": "Set Email Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "emailSubject",
              "value": "New Sale Added - {{$json.A}}"
            },
            {
              "name": "emailBody",
              "value": "A new sale has been recorded in the Sales Tracker:\n\nDate: {{$json.A}}\nCustomer: {{$json.B}}\nAmount: {{$json.C}}\n\nThis is an automated notification from your Sales Tracker spreadsheet."
            }
          ]
        }
      }
    },
    {
      "id": "nksrn5uj",
      "name": "Send Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        650,
        300
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "notifications@mycompany.com",
        "subject": "={{$json.emailSubject}}",
        "message": "={{$json.emailBody}}",
        "resource": "message"
      }
    },
    {
      "id": "6nkbjvd6",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ],
      "parameters": {}
    },
    {
      "id": "9sdy30ye",
      "name": "Log Error",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        500
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "errorMessage",
              "value": "{{$json[\"error\"][\"message\"]}}"
            },
            {
              "name": "errorTime",
              "value": "{{new Date().toISOString()}}"
            },
            {
              "name": "workflowName",
              "value": "{{$workflow.name}}"
            }
          ]
        }
      }
    },
    {
      "id": "97jqfizl",
      "name": "Send Error Notification",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        650,
        500
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "notifications@mycompany.com",
        "subject": "ERROR: Sales Tracker Workflow Failed",
        "message": "The Sales Tracker workflow encountered an error:\n\nError: {{$json.errorMessage}}\nTime: {{$json.errorTime}}\nWorkflow: {{$json.workflowName}}\n\nPlease check the workflow execution logs for more details.",
        "resource": "message"
      }
    },
    {
      "id": "ajyceo0z",
      "name": "IF - Check Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        350,
        150
      ],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.A}}",
              "rightValue": "",
              "operation": "equal"
            },
            {
              "leftValue": "={{$json.B}}",
              "rightValue": "",
              "operation": "equal"
            },
            {
              "leftValue": "={{$json.C}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    }
  ],
  "connections": {
    "Google Sheets Trigger": {
      "main": [
        [
          {
            "node": "IF - Check Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF - Check Data": {
      "main": [
        [
          {
            "node": "Set Email Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Email Data": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Log Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Error": {
      "main": [
        [
          {
            "node": "Send Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:56:29.941Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333389940",
  "nodes": [
    {
      "id": "pazfntzw",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "1qrs456tuv789"
        },
        "sheetName": {
          "__rl": true,
          "mode": "name",
          "value": "Sales Tracker"
        },
        "event": "rowAdded"
      }
    },
    {
      "id": "k0oeg9of",
      "name": "Set Email Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "emailSubject",
              "value": "New Sale Added - {{$json.A}}"
            },
            {
              "name": "emailBody",
              "value": "A new sale has been recorded in the Sales Tracker:\n\nDate: {{$json.A}}\nCustomer: {{$json.B}}\nAmount: {{$json.C}}\n\nThis is an automated notification from your Sales Tracker spreadsheet."
            }
          ]
        }
      }
    },
    {
      "id": "nksrn5uj",
      "name": "Send Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        650,
        300
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "notifications@mycompany.com",
        "subject": "={{$json.emailSubject}}",
        "message": "={{$json.emailBody}}",
        "resource": "message"
      }
    },
    {
      "id": "6nkbjvd6",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ],
      "parameters": {}
    },
    {
      "id": "9sdy30ye",
      "name": "Log Error",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        500
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "errorMessage",
              "value": "{{$json[\"error\"][\"message\"]}}"
            },
            {
              "name": "errorTime",
              "value": "{{new Date().toISOString()}}"
            },
            {
              "name": "workflowName",
              "value": "{{$workflow.name}}"
            }
          ]
        }
      }
    },
    {
      "id": "97jqfizl",
      "name": "Send Error Notification",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        650,
        500
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "notifications@mycompany.com",
        "subject": "ERROR: Sales Tracker Workflow Failed",
        "message": "The Sales Tracker workflow encountered an error:\n\nError: {{$json.errorMessage}}\nTime: {{$json.errorTime}}\nWorkflow: {{$json.workflowName}}\n\nPlease check the workflow execution logs for more details.",
        "resource": "message"
      }
    },
    {
      "id": "ajyceo0z",
      "name": "IF - Check Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        350,
        150
      ],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.A}}",
              "rightValue": "",
              "operation": "equal"
            },
            {
              "leftValue": "={{$json.B}}",
              "rightValue": "",
              "operation": "equal"
            },
            {
              "leftValue": "={{$json.C}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    }
  ],
  "connections": {
    "Google Sheets Trigger": {
      "main": [
        [
          {
            "node": "IF - Check Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF - Check Data": {
      "main": [
        [
          {
            "node": "Set Email Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Email Data": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Log Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Error": {
      "main": [
        [
          {
            "node": "Send Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:56:29.941Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333389940",
  "nodes": [
    {
      "id": "pazfntzw",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "1qrs456tuv789"
        },
        "sheetName": {
          "__rl": true,
          "mode": "name",
          "value": "Sales Tracker"
        },
        "event": "rowAdded"
      }
    },
    {
      "id": "k0oeg9of",
      "name": "Set Email Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "emailSubject",
              "value": "New Sale Added - {{$json.A}}"
            },
            {
              "name": "emailBody",
              "value": "A new sale has been recorded in the Sales Tracker:\n\nDate: {{$json.A}}\nCustomer: {{$json.B}}\nAmount: {{$json.C}}\n\nThis is an automated notification from your Sales Tracker spreadsheet."
            }
          ]
        }
      }
    },
    {
      "id": "nksrn5uj",
      "name": "Send Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        650,
        300
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "notifications@mycompany.com",
        "subject": "={{$json.emailSubject}}",
        "message": "={{$json.emailBody}}",
        "resource": "message"
      }
    },
    {
      "id": "6nkbjvd6",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ],
      "parameters": {}
    },
    {
      "id": "9sdy30ye",
      "name": "Log Error",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        500
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "errorMessage",
              "value": "{{$json[\"error\"][\"message\"]}}"
            },
            {
              "name": "errorTime",
              "value": "{{new Date().toISOString()}}"
            },
            {
              "name": "workflowName",
              "value": "{{$workflow.name}}"
            }
          ]
        }
      }
    },
    {
      "id": "97jqfizl",
      "name": "Send Error Notification",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        650,
        500
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "notifications@mycompany.com",
        "subject": "ERROR: Sales Tracker Workflow Failed",
        "message": "The Sales Tracker workflow encountered an error:\n\nError: {{$json.errorMessage}}\nTime: {{$json.errorTime}}\nWorkflow: {{$json.workflowName}}\n\nPlease check the workflow execution logs for more details.",
        "resource": "message"
      }
    },
    {
      "id": "ajyceo0z",
      "name": "IF - Check Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        350,
        150
      ],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.A}}",
              "rightValue": "",
              "operation": "equal"
            },
            {
              "leftValue": "={{$json.B}}",
              "rightValue": "",
              "operation": "equal"
            },
            {
              "leftValue": "={{$json.C}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    }
  ],
  "connections": {
    "Google Sheets Trigger": {
      "main": [
        [
          {
            "node": "IF - Check Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF - Check Data": {
      "main": [
        [
          {
            "node": "Set Email Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Email Data": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Log Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Error": {
      "main": [
        [
          {
            "node": "Send Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:56:29.941Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333389940",
  "nodes": [
    {
      "id": "pazfntzw",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "1qrs456tuv789"
        },
        "sheetName": {
          "__rl": true,
          "mode": "name",
          "value": "Sales Tracker"
        },
        "event": "rowAdded"
      }
    },
    {
      "id": "k0oeg9of",
      "name": "Set Email Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "emailSubject",
              "value": "New Sale Added - {{$json.A}}"
            },
            {
              "name": "emailBody",
              "value": "A new sale has been recorded in the Sales Tracker:\n\nDate: {{$json.A}}\nCustomer: {{$json.B}}\nAmount: {{$json.C}}\n\nThis is an automated notification from your Sales Tracker spreadsheet."
            }
          ]
        }
      }
    },
    {
      "id": "nksrn5uj",
      "name": "Send Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        650,
        300
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "notifications@mycompany.com",
        "subject": "={{$json.emailSubject}}",
        "message": "={{$json.emailBody}}",
        "resource": "message"
      }
    },
    {
      "id": "6nkbjvd6",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ],
      "parameters": {}
    },
    {
      "id": "9sdy30ye",
      "name": "Log Error",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        500
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "errorMessage",
              "value": "{{$json[\"error\"][\"message\"]}}"
            },
            {
              "name": "errorTime",
              "value": "{{new Date().toISOString()}}"
            },
            {
              "name": "workflowName",
              "value": "{{$workflow.name}}"
            }
          ]
        }
      }
    },
    {
      "id": "97jqfizl",
      "name": "Send Error Notification",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        650,
        500
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "notifications@mycompany.com",
        "subject": "ERROR: Sales Tracker Workflow Failed",
        "message": "The Sales Tracker workflow encountered an error:\n\nError: {{$json.errorMessage}}\nTime: {{$json.errorTime}}\nWorkflow: {{$json.workflowName}}\n\nPlease check the workflow execution logs for more details.",
        "resource": "message"
      }
    },
    {
      "id": "ajyceo0z",
      "name": "IF - Check Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        350,
        150
      ],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.A}}",
              "rightValue": "",
              "operation": "equal"
            },
            {
              "leftValue": "={{$json.B}}",
              "rightValue": "",
              "operation": "equal"
            },
            {
              "leftValue": "={{$json.C}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    }
  ],
  "connections": {
    "Google Sheets Trigger": {
      "main": [
        [
          {
            "node": "IF - Check Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF - Check Data": {
      "main": [
        [
          {
            "node": "Set Email Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Email Data": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Log Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Error": {
      "main": [
        [
          {
            "node": "Send Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:56:29.941Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333389940",
  "nodes": [
    {
      "id": "pazfntzw",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "1qrs456tuv789"
        },
        "sheetName": {
          "__rl": true,
          "mode": "name",
          "value": "Sales Tracker"
        },
        "event": "rowAdded"
      }
    },
    {
      "id": "k0oeg9of",
      "name": "Set Email Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "emailSubject",
              "value": "New Sale Added - {{$json.A}}"
            },
            {
              "name": "emailBody",
              "value": "A new sale has been recorded in the Sales Tracker:\n\nDate: {{$json.A}}\nCustomer: {{$json.B}}\nAmount: {{$json.C}}\n\nThis is an automated notification from your Sales Tracker spreadsheet."
            }
          ]
        }
      }
    },
    {
      "id": "nksrn5uj",
      "name": "Send Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        650,
        300
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "notifications@mycompany.com",
        "subject": "={{$json.emailSubject}}",
        "message": "={{$json.emailBody}}",
        "resource": "message"
      }
    },
    {
      "id": "6nkbjvd6",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ],
      "parameters": {}
    },
    {
      "id": "9sdy30ye",
      "name": "Log Error",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        500
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "errorMessage",
              "value": "{{$json[\"error\"][\"message\"]}}"
            },
            {
              "name": "errorTime",
              "value": "{{new Date().toISOString()}}"
            },
            {
              "name": "workflowName",
              "value": "{{$workflow.name}}"
            }
          ]
        }
      }
    },
    {
      "id": "97jqfizl",
      "name": "Send Error Notification",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        650,
        500
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "notifications@mycompany.com",
        "subject": "ERROR: Sales Tracker Workflow Failed",
        "message": "The Sales Tracker workflow encountered an error:\n\nError: {{$json.errorMessage}}\nTime: {{$json.errorTime}}\nWorkflow: {{$json.workflowName}}\n\nPlease check the workflow execution logs for more details.",
        "resource": "message"
      }
    },
    {
      "id": "ajyceo0z",
      "name": "IF - Check Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        350,
        150
      ],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.A}}",
              "rightValue": "",
              "operation": "equal"
            },
            {
              "leftValue": "={{$json.B}}",
              "rightValue": "",
              "operation": "equal"
            },
            {
              "leftValue": "={{$json.C}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    }
  ],
  "connections": {
    "Google Sheets Trigger": {
      "main": [
        [
          {
            "node": "IF - Check Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF - Check Data": {
      "main": [
        [
          {
            "node": "Set Email Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Email Data": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Log Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Error": {
      "main": [
        [
          {
            "node": "Send Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:56:29.941Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333389940",
  "nodes": [
    {
      "id": "pazfntzw",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "1qrs456tuv789"
        },
        "sheetName": {
          "__rl": true,
          "mode": "name",
          "value": "Sales Tracker"
        },
        "event": "rowAdded"
      }
    },
    {
      "id": "k0oeg9of",
      "name": "Set Email Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "emailSubject",
              "value": "New Sale Added - {{$json.A}}"
            },
            {
              "name": "emailBody",
              "value": "A new sale has been recorded in the Sales Tracker:\n\nDate: {{$json.A}}\nCustomer: {{$json.B}}\nAmount: {{$json.C}}\n\nThis is an automated notification from your Sales Tracker spreadsheet."
            }
          ]
        }
      }
    },
    {
      "id": "nksrn5uj",
      "name": "Send Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        650,
        300
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "notifications@mycompany.com",
        "subject": "={{$json.emailSubject}}",
        "message": "={{$json.emailBody}}",
        "resource": "message"
      }
    },
    {
      "id": "6nkbjvd6",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ],
      "parameters": {}
    },
    {
      "id": "9sdy30ye",
      "name": "Log Error",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        500
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "errorMessage",
              "value": "{{$json[\"error\"][\"message\"]}}"
            },
            {
              "name": "errorTime",
              "value": "{{new Date().toISOString()}}"
            },
            {
              "name": "workflowName",
              "value": "{{$workflow.name}}"
            }
          ]
        }
      }
    },
    {
      "id": "97jqfizl",
      "name": "Send Error Notification",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        650,
        500
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "notifications@mycompany.com",
        "subject": "ERROR: Sales Tracker Workflow Failed",
        "message": "The Sales Tracker workflow encountered an error:\n\nError: {{$json.errorMessage}}\nTime: {{$json.errorTime}}\nWorkflow: {{$json.workflowName}}\n\nPlease check the workflow execution logs for more details.",
        "resource": "message"
      }
    },
    {
      "id": "ajyceo0z",
      "name": "IF - Check Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        350,
        150
      ],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.A}}",
              "rightValue": "",
              "operation": "equal"
            },
            {
              "leftValue": "={{$json.B}}",
              "rightValue": "",
              "operation": "equal"
            },
            {
              "leftValue": "={{$json.C}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    }
  ],
  "connections": {
    "Google Sheets Trigger": {
      "main": [
        [
          {
            "node": "IF - Check Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF - Check Data": {
      "main": [
        [
          {
            "node": "Set Email Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Email Data": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Log Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Error": {
      "main": [
        [
          {
            "node": "Send Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:56:29.941Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333389940",
  "nodes": [
    {
      "id": "pazfntzw",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "1qrs456tuv789"
        },
        "sheetName": {
          "__rl": true,
          "mode": "name",
          "value": "Sales Tracker"
        },
        "event": "rowAdded"
      }
    },
    {
      "id": "k0oeg9of",
      "name": "Set Email Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "emailSubject",
              "value": "New Sale Added - {{$json.A}}"
            },
            {
              "name": "emailBody",
              "value": "A new sale has been recorded in the Sales Tracker:\n\nDate: {{$json.A}}\nCustomer: {{$json.B}}\nAmount: {{$json.C}}\n\nThis is an automated notification from your Sales Tracker spreadsheet."
            }
          ]
        }
      }
    },
    {
      "id": "nksrn5uj",
      "name": "Send Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        650,
        300
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "notifications@mycompany.com",
        "subject": "={{$json.emailSubject}}",
        "message": "={{$json.emailBody}}",
        "resource": "message"
      }
    },
    {
      "id": "6nkbjvd6",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ],
      "parameters": {}
    },
    {
      "id": "9sdy30ye",
      "name": "Log Error",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        500
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "errorMessage",
              "value": "{{$json[\"error\"][\"message\"]}}"
            },
            {
              "name": "errorTime",
              "value": "{{new Date().toISOString()}}"
            },
            {
              "name": "workflowName",
              "value": "{{$workflow.name}}"
            }
          ]
        }
      }
    },
    {
      "id": "97jqfizl",
      "name": "Send Error Notification",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        650,
        500
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "notifications@mycompany.com",
        "subject": "ERROR: Sales Tracker Workflow Failed",
        "message": "The Sales Tracker workflow encountered an error:\n\nError: {{$json.errorMessage}}\nTime: {{$json.errorTime}}\nWorkflow: {{$json.workflowName}}\n\nPlease check the workflow execution logs for more details.",
        "resource": "message"
      }
    },
    {
      "id": "ajyceo0z",
      "name": "IF - Check Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        350,
        150
      ],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.A}}",
              "rightValue": "",
              "operation": "equal"
            },
            {
              "leftValue": "={{$json.B}}",
              "rightValue": "",
              "operation": "equal"
            },
            {
              "leftValue": "={{$json.C}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    }
  ],
  "connections": {
    "Google Sheets Trigger": {
      "main": [
        [
          {
            "node": "IF - Check Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF - Check Data": {
      "main": [
        [
          {
            "node": "Set Email Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Email Data": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Log Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Error": {
      "main": [
        [
          {
            "node": "Send Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:56:29.941Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333389940",
  "nodes": [
    {
      "id": "pazfntzw",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "1qrs456tuv789"
        },
        "sheetName": {
          "__rl": true,
          "mode": "name",
          "value": "Sales Tracker"
        },
        "event": "rowAdded"
      }
    },
    {
      "id": "k0oeg9of",
      "name": "Set Email Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "emailSubject",
              "value": "New Sale Added - {{$json.A}}"
            },
            {
              "name": "emailBody",
              "value": "A new sale has been recorded in the Sales Tracker:\n\nDate: {{$json.A}}\nCustomer: {{$json.B}}\nAmount: {{$json.C}}\n\nThis is an automated notification from your Sales Tracker spreadsheet."
            }
          ]
        }
      }
    },
    {
      "id": "nksrn5uj",
      "name": "Send Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        650,
        300
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "notifications@mycompany.com",
        "subject": "={{$json.emailSubject}}",
        "message": "={{$json.emailBody}}",
        "resource": "message"
      }
    },
    {
      "id": "6nkbjvd6",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ],
      "parameters": {}
    },
    {
      "id": "9sdy30ye",
      "name": "Log Error",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        500
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "errorMessage",
              "value": "{{$json[\"error\"][\"message\"]}}"
            },
            {
              "name": "errorTime",
              "value": "{{new Date().toISOString()}}"
            },
            {
              "name": "workflowName",
              "value": "{{$workflow.name}}"
            }
          ]
        }
      }
    },
    {
      "id": "97jqfizl",
      "name": "Send Error Notification",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        650,
        500
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "notifications@mycompany.com",
        "subject": "ERROR: Sales Tracker Workflow Failed",
        "message": "The Sales Tracker workflow encountered an error:\n\nError: {{$json.errorMessage}}\nTime: {{$json.errorTime}}\nWorkflow: {{$json.workflowName}}\n\nPlease check the workflow execution logs for more details.",
        "resource": "message"
      }
    },
    {
      "id": "ajyceo0z",
      "name": "IF - Check Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        350,
        150
      ],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.A}}",
              "rightValue": "",
              "operation": "equal"
            },
            {
              "leftValue": "={{$json.B}}",
              "rightValue": "",
              "operation": "equal"
            },
            {
              "leftValue": "={{$json.C}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    }
  ],
  "connections": {
    "Google Sheets Trigger": {
      "main": [
        [
          {
            "node": "IF - Check Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF - Check Data": {
      "main": [
        [
          {
            "node": "Set Email Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Email Data": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Log Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Error": {
      "main": [
        [
          {
            "node": "Send Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:56:29.941Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333389940",
  "nodes": [
    {
      "id": "pazfntzw",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "1qrs456tuv789"
        },
        "sheetName": {
          "__rl": true,
          "mode": "name",
          "value": "Sales Tracker"
        },
        "event": "rowAdded"
      }
    },
    {
      "id": "k0oeg9of",
      "name": "Set Email Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "emailSubject",
              "value": "New Sale Added - {{$json.A}}"
            },
            {
              "name": "emailBody",
              "value": "A new sale has been recorded in the Sales Tracker:\n\nDate: {{$json.A}}\nCustomer: {{$json.B}}\nAmount: {{$json.C}}\n\nThis is an automated notification from your Sales Tracker spreadsheet."
            }
          ]
        }
      }
    },
    {
      "id": "nksrn5uj",
      "name": "Send Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        650,
        300
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "notifications@mycompany.com",
        "subject": "={{$json.emailSubject}}",
        "message": "={{$json.emailBody}}",
        "resource": "message"
      }
    },
    {
      "id": "6nkbjvd6",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ],
      "parameters": {}
    },
    {
      "id": "9sdy30ye",
      "name": "Log Error",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        500
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "errorMessage",
              "value": "{{$json[\"error\"][\"message\"]}}"
            },
            {
              "name": "errorTime",
              "value": "{{new Date().toISOString()}}"
            },
            {
              "name": "workflowName",
              "value": "{{$workflow.name}}"
            }
          ]
        }
      }
    },
    {
      "id": "97jqfizl",
      "name": "Send Error Notification",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        650,
        500
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "notifications@mycompany.com",
        "subject": "ERROR: Sales Tracker Workflow Failed",
        "message": "The Sales Tracker workflow encountered an error:\n\nError: {{$json.errorMessage}}\nTime: {{$json.errorTime}}\nWorkflow: {{$json.workflowName}}\n\nPlease check the workflow execution logs for more details.",
        "resource": "message"
      }
    },
    {
      "id": "ajyceo0z",
      "name": "IF - Check Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        350,
        150
      ],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.A}}",
              "rightValue": "",
              "operation": "equal"
            },
            {
              "leftValue": "={{$json.B}}",
              "rightValue": "",
              "operation": "equal"
            },
            {
              "leftValue": "={{$json.C}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    }
  ],
  "connections": {
    "Google Sheets Trigger": {
      "main": [
        [
          {
            "node": "IF - Check Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF - Check Data": {
      "main": [
        [
          {
            "node": "Set Email Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Email Data": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Log Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Error": {
      "main": [
        [
          {
            "node": "Send Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:56:29.941Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333389940",
  "nodes": [
    {
      "id": "pazfntzw",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "1qrs456tuv789"
        },
        "sheetName": {
          "__rl": true,
          "mode": "name",
          "value": "Sales Tracker"
        },
        "event": "rowAdded"
      }
    },
    {
      "id": "k0oeg9of",
      "name": "Set Email Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "emailSubject",
              "value": "New Sale Added - {{$json.A}}"
            },
            {
              "name": "emailBody",
              "value": "A new sale has been recorded in the Sales Tracker:\n\nDate: {{$json.A}}\nCustomer: {{$json.B}}\nAmount: {{$json.C}}\n\nThis is an automated notification from your Sales Tracker spreadsheet."
            }
          ]
        }
      }
    },
    {
      "id": "nksrn5uj",
      "name": "Send Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        650,
        300
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "notifications@mycompany.com",
        "subject": "={{$json.emailSubject}}",
        "message": "={{$json.emailBody}}",
        "resource": "message"
      }
    },
    {
      "id": "6nkbjvd6",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ],
      "parameters": {}
    },
    {
      "id": "9sdy30ye",
      "name": "Log Error",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        500
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "errorMessage",
              "value": "{{$json[\"error\"][\"message\"]}}"
            },
            {
              "name": "errorTime",
              "value": "{{new Date().toISOString()}}"
            },
            {
              "name": "workflowName",
              "value": "{{$workflow.name}}"
            }
          ]
        }
      }
    },
    {
      "id": "97jqfizl",
      "name": "Send Error Notification",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        650,
        500
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "notifications@mycompany.com",
        "subject": "ERROR: Sales Tracker Workflow Failed",
        "message": "The Sales Tracker workflow encountered an error:\n\nError: {{$json.errorMessage}}\nTime: {{$json.errorTime}}\nWorkflow: {{$json.workflowName}}\n\nPlease check the workflow execution logs for more details.",
        "resource": "message"
      }
    },
    {
      "id": "ajyceo0z",
      "name": "IF - Check Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        350,
        150
      ],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.A}}",
              "rightValue": "",
              "operation": "equal"
            },
            {
              "leftValue": "={{$json.B}}",
              "rightValue": "",
              "operation": "equal"
            },
            {
              "leftValue": "={{$json.C}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    }
  ],
  "connections": {
    "Google Sheets Trigger": {
      "main": [
        [
          {
            "node": "IF - Check Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF - Check Data": {
      "main": [
        [
          {
            "node": "Set Email Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Email Data": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Log Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Error": {
      "main": [
        [
          {
            "node": "Send Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:56:29.941Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333389940",
  "nodes": [
    {
      "id": "pazfntzw",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "1qrs456tuv789"
        },
        "sheetName": {
          "__rl": true,
          "mode": "name",
          "value": "Sales Tracker"
        },
        "event": "rowAdded"
      }
    },
    {
      "id": "k0oeg9of",
      "name": "Set Email Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "emailSubject",
              "value": "New Sale Added - {{$json.A}}"
            },
            {
              "name": "emailBody",
              "value": "A new sale has been recorded in the Sales Tracker:\n\nDate: {{$json.A}}\nCustomer: {{$json.B}}\nAmount: {{$json.C}}\n\nThis is an automated notification from your Sales Tracker spreadsheet."
            }
          ]
        }
      }
    },
    {
      "id": "nksrn5uj",
      "name": "Send Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        650,
        300
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "notifications@mycompany.com",
        "subject": "={{$json.emailSubject}}",
        "message": "={{$json.emailBody}}",
        "resource": "message"
      }
    },
    {
      "id": "6nkbjvd6",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        250,
        500
      ],
      "parameters": {}
    },
    {
      "id": "9sdy30ye",
      "name": "Log Error",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        450,
        500
      ],
      "parameters": {
        "values": {
          "string": [
            {
              "name": "errorMessage",
              "value": "{{$json[\"error\"][\"message\"]}}"
            },
            {
              "name": "errorTime",
              "value": "{{new Date().toISOString()}}"
            },
            {
              "name": "workflowName",
              "value": "{{$workflow.name}}"
            }
          ]
        }
      }
    },
    {
      "id": "97jqfizl",
      "name": "Send Error Notification",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        650,
        500
      ],
      "parameters": {
        "operation": "send",
        "sendTo": "notifications@mycompany.com",
        "subject": "ERROR: Sales Tracker Workflow Failed",
        "message": "The Sales Tracker workflow encountered an error:\n\nError: {{$json.errorMessage}}\nTime: {{$json.errorTime}}\nWorkflow: {{$json.workflowName}}\n\nPlease check the workflow execution logs for more details.",
        "resource": "message"
      }
    },
    {
      "id": "ajyceo0z",
      "name": "IF - Check Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        350,
        150
      ],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.A}}",
              "rightValue": "",
              "operation": "equal"
            },
            {
              "leftValue": "={{$json.B}}",
              "rightValue": "",
              "operation": "equal"
            },
            {
              "leftValue": "={{$json.C}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "all"
      }
    }
  ],
  "connections": {
    "Google Sheets Trigger": {
      "main": [
        [
          {
            "node": "IF - Check Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF - Check Data": {
      "main": [
        [
          {
            "node": "Set Email Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Email Data": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Log Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Error": {
      "main": [
        [
          {
            "node": "Send Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:56:30.822Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:56:30.822Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:56:30.822Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:56:30.822Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:56:30.822Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:56:30.822Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:56:30.822Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:56:30.822Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:56:30.822Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:56:30.822Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:56:30.823Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:56:30.823Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:56:30.823Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:56:30.823Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:56:30.823Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:56:30.823Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:56:30.823Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:56:30.823Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:56:30.823Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:56:30.823Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:56:30.823Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:56:30.823Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:56:30.823Z] [CONSOLE] Cleanup completed
[2025-06-07T21:56:30.823Z] [CONSOLE] Cleanup completed
[2025-06-07T21:56:30.823Z] [CONSOLE] Cleanup completed
[2025-06-07T21:56:30.823Z] [CONSOLE] Cleanup completed
[2025-06-07T21:56:30.823Z] [CONSOLE] Cleanup completed
[2025-06-07T21:56:30.823Z] [CONSOLE] Cleanup completed
[2025-06-07T21:56:30.823Z] [CONSOLE] Cleanup completed
[2025-06-07T21:56:30.823Z] [CONSOLE] Cleanup completed
[2025-06-07T21:56:30.823Z] [CONSOLE] Cleanup completed
[2025-06-07T21:56:30.823Z] [CONSOLE] Cleanup completed
[2025-06-07T21:56:30.823Z] [CONSOLE] Cleanup completed
[2025-06-07T21:56:30.823Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:56:30.823Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:56:30.823Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:56:30.823Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:56:30.823Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:56:30.823Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:56:30.823Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:56:30.824Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:56:30.824Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:56:30.824Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:56:30.824Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:56:30.824Z] [CONSOLE] IF node leftValue: ={{$json.A}}
[2025-06-07T21:56:30.824Z] [CONSOLE] IF node leftValue: ={{$json.A}}
[2025-06-07T21:56:30.824Z] [CONSOLE] IF node leftValue: ={{$json.A}}
[2025-06-07T21:56:30.824Z] [CONSOLE] IF node leftValue: ={{$json.A}}
[2025-06-07T21:56:30.824Z] [CONSOLE] IF node leftValue: ={{$json.A}}
[2025-06-07T21:56:30.824Z] [CONSOLE] IF node leftValue: ={{$json.A}}
[2025-06-07T21:56:30.824Z] [CONSOLE] IF node leftValue: ={{$json.A}}
[2025-06-07T21:56:30.824Z] [CONSOLE] IF node leftValue: ={{$json.A}}
[2025-06-07T21:56:30.824Z] [CONSOLE] IF node leftValue: ={{$json.A}}
[2025-06-07T21:56:30.824Z] [CONSOLE] IF node leftValue: ={{$json.A}}
[2025-06-07T21:56:30.824Z] [CONSOLE] IF node leftValue: ={{$json.A}}
[2025-06-07T21:56:30.824Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:56:30.824Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:56:30.824Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:56:30.824Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:56:30.824Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:56:30.824Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:56:30.824Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:56:30.824Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:56:30.824Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:56:30.824Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:56:30.824Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:56:30.824Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:56:30.824Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:56:30.824Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:56:30.824Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:56:30.824Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:56:30.824Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:56:30.824Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:56:30.824Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:56:30.824Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:56:30.824Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:56:30.824Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:56:30.825Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:56:30.825Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:56:30.825Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:56:30.825Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:56:30.825Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:56:30.825Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:56:30.825Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:56:30.825Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:56:30.825Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:56:30.825Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:56:30.825Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:56:30.825Z] [CONSOLE]   * Gmail node Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.825Z] [CONSOLE]   * Gmail node Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.825Z] [CONSOLE]   * Gmail node Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.825Z] [CONSOLE]   * Gmail node Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.825Z] [CONSOLE]   * Gmail node Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.825Z] [CONSOLE]   * Gmail node Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.825Z] [CONSOLE]   * Gmail node Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.825Z] [CONSOLE]   * Gmail node Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.825Z] [CONSOLE]   * Gmail node Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.825Z] [CONSOLE]   * Gmail node Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.825Z] [CONSOLE]   * Gmail node Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.825Z] [CONSOLE]   * Gmail node Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.825Z] [CONSOLE]   * Gmail node Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.825Z] [CONSOLE]   * Gmail node Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.825Z] [CONSOLE]   * Gmail node Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.825Z] [CONSOLE]   * Gmail node Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.825Z] [CONSOLE]   * Gmail node Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.825Z] [CONSOLE]   * Gmail node Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.825Z] [CONSOLE]   * Gmail node Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.825Z] [CONSOLE]   * Gmail node Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.825Z] [CONSOLE]   * Gmail node Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.825Z] [CONSOLE]   * Gmail node Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.825Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:56:30.825Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:56:30.826Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:56:30.826Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:56:30.826Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:56:30.826Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:56:30.826Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:56:30.826Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:56:30.826Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:56:30.826Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:56:30.826Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:56:30.826Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:56:30.826Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:56:30.826Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:56:30.826Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:56:30.826Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:56:30.826Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:56:30.826Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:56:30.826Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:56:30.826Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:56:30.826Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:56:30.827Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:56:30.827Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:56:30.827Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:56:30.827Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:56:30.827Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:56:30.827Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:56:30.827Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:56:30.827Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:56:30.827Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:56:30.827Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:56:30.827Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:56:30.827Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:56:30.827Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:56:30.827Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:56:30.827Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:56:30.827Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:56:30.827Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:56:30.828Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:56:30.828Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:56:30.828Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:56:30.828Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:56:30.828Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:56:30.828Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:56:30.828Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:56:30.828Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:56:30.828Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:56:30.828Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:56:30.828Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:56:30.828Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:56:30.828Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:56:30.828Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:56:30.828Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:56:30.828Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:56:30.828Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:56:30.829Z] [CONSOLE]   - Has active: true
[2025-06-07T21:56:30.829Z] [CONSOLE]   - Has active: true
[2025-06-07T21:56:30.829Z] [CONSOLE]   - Has active: true
[2025-06-07T21:56:30.829Z] [CONSOLE]   - Has active: true
[2025-06-07T21:56:30.829Z] [CONSOLE]   - Has active: true
[2025-06-07T21:56:30.829Z] [CONSOLE]   - Has active: true
[2025-06-07T21:56:30.829Z] [CONSOLE]   - Has active: true
[2025-06-07T21:56:30.829Z] [CONSOLE]   - Has active: true
[2025-06-07T21:56:30.829Z] [CONSOLE]   - Has active: true
[2025-06-07T21:56:30.829Z] [CONSOLE]   - Has active: true
[2025-06-07T21:56:30.829Z] [CONSOLE]   - Has active: true
[2025-06-07T21:56:30.829Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:56:30.829Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:56:30.829Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:56:30.829Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:56:30.829Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:56:30.829Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:56:30.829Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:56:30.829Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:56:30.829Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:56:30.830Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:56:30.830Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:56:30.830Z] [CONSOLE] IF node leftValue: ={{$json.A}}
[2025-06-07T21:56:30.830Z] [CONSOLE] IF node leftValue: ={{$json.A}}
[2025-06-07T21:56:30.830Z] [CONSOLE] IF node leftValue: ={{$json.A}}
[2025-06-07T21:56:30.830Z] [CONSOLE] IF node leftValue: ={{$json.A}}
[2025-06-07T21:56:30.830Z] [CONSOLE] IF node leftValue: ={{$json.A}}
[2025-06-07T21:56:30.830Z] [CONSOLE] IF node leftValue: ={{$json.A}}
[2025-06-07T21:56:30.830Z] [CONSOLE] IF node leftValue: ={{$json.A}}
[2025-06-07T21:56:30.830Z] [CONSOLE] IF node leftValue: ={{$json.A}}
[2025-06-07T21:56:30.830Z] [CONSOLE] IF node leftValue: ={{$json.A}}
[2025-06-07T21:56:30.830Z] [CONSOLE] IF node leftValue: ={{$json.A}}
[2025-06-07T21:56:30.830Z] [CONSOLE] IF node leftValue: ={{$json.A}}
[2025-06-07T21:56:30.830Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:56:30.830Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:56:30.830Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:56:30.830Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:56:30.830Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:56:30.830Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:56:30.830Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:56:30.830Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:56:30.830Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:56:30.830Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:56:30.830Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:56:30.830Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:30.830Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:30.831Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:30.831Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:30.831Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:30.831Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:30.831Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:30.831Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:30.831Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:30.831Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:30.831Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:30.831Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:30.831Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:30.831Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:30.831Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:30.831Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:30.831Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:30.831Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:30.831Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:30.831Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:30.831Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:30.831Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:30.831Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.831Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.831Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.831Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.831Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.831Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.831Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.831Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.831Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.831Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.831Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.831Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.831Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.831Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.831Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.831Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.832Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.832Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.832Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.832Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.832Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.832Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.832Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:56:30.832Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:56:30.832Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:56:30.832Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:56:30.832Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:56:30.832Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:56:30.832Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:56:30.832Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:56:30.832Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:56:30.832Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:56:30.832Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:56:30.832Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:56:30.832Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:56:30.832Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:56:30.832Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:56:30.832Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:56:30.832Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:56:30.832Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:56:30.832Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:56:30.832Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:56:30.832Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:56:30.833Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:56:30.833Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:56:30.833Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:56:30.833Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:56:30.833Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:56:30.833Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:56:30.833Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:56:30.833Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:56:30.833Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:56:30.833Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:56:30.833Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:56:30.833Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:56:30.833Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:56:30.833Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:56:30.833Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:56:30.833Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:56:30.833Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:56:30.833Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:56:30.833Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:56:30.833Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:56:30.833Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:56:30.833Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:56:30.833Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:56:30.833Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:56:30.833Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:56:30.833Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:56:30.834Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:56:30.834Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:56:30.834Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:56:30.834Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:56:30.834Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:56:30.834Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:56:30.834Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:56:30.834Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:56:30.834Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:30.834Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:30.834Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:30.834Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:30.834Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:30.834Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:30.834Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:30.834Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:30.834Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:30.834Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:30.834Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:56:30.834Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:30.834Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:30.834Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:30.834Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:30.834Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:30.834Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:30.834Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:30.835Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:30.835Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:30.835Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:30.835Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:56:30.835Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.835Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.835Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.835Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.835Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.835Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.835Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.835Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.835Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.835Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.835Z] [CONSOLE]     * Send Email: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.835Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.835Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.835Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.835Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.835Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.835Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.835Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.835Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.835Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.835Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.835Z] [CONSOLE]     * Send Error Notification: credentials = {"gmailOAuth2":{"id":"2","name":"Gmail account"}}
[2025-06-07T21:56:30.835Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:56:30.835Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:56:30.835Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:56:30.835Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:56:30.835Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:56:30.836Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:56:30.836Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:56:30.836Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:56:30.836Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:56:30.836Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:56:30.836Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:56:30.836Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Sheets to Gmail Notification Workflow",
  "nodes": [
    {
      "id": "pazfntzw",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      ...
[2025-06-07T21:56:30.836Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Sheets to Gmail Notification Workflow",
  "nodes": [
    {
      "id": "pazfntzw",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      ...
[2025-06-07T21:56:30.836Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Sheets to Gmail Notification Workflow",
  "nodes": [
    {
      "id": "pazfntzw",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      ...
[2025-06-07T21:56:30.836Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Sheets to Gmail Notification Workflow",
  "nodes": [
    {
      "id": "pazfntzw",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      ...
[2025-06-07T21:56:30.836Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Sheets to Gmail Notification Workflow",
  "nodes": [
    {
      "id": "pazfntzw",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      ...
[2025-06-07T21:56:30.836Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Sheets to Gmail Notification Workflow",
  "nodes": [
    {
      "id": "pazfntzw",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      ...
[2025-06-07T21:56:30.836Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Sheets to Gmail Notification Workflow",
  "nodes": [
    {
      "id": "pazfntzw",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      ...
[2025-06-07T21:56:30.836Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Sheets to Gmail Notification Workflow",
  "nodes": [
    {
      "id": "pazfntzw",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      ...
[2025-06-07T21:56:30.836Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Sheets to Gmail Notification Workflow",
  "nodes": [
    {
      "id": "pazfntzw",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      ...
[2025-06-07T21:56:30.836Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Sheets to Gmail Notification Workflow",
  "nodes": [
    {
      "id": "pazfntzw",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      ...
[2025-06-07T21:56:30.836Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Google Sheets to Gmail Notification Workflow",
  "nodes": [
    {
      "id": "pazfntzw",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      ...
[2025-06-07T21:56:31.107Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:56:31.107Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:56:31.107Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:56:31.108Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:56:31.108Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:56:31.108Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:56:31.108Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:56:31.108Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:56:31.108Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:56:31.108Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:56:31.108Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:59:12.609Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:59:12.610Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:59:12.610Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:59:12.610Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:59:12.610Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:59:12.610Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:59:12.610Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:59:12.610Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:59:12.610Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:59:12.610Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:59:12.610Z] [CONSOLE] 🚀 [GENERATE V2] Request received
[2025-06-07T21:59:12.610Z] [INFO] 🚀 [GENERATE V2] Request received
[2025-06-07T21:59:12.611Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:59:12.611Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:59:12.612Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:59:12.612Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:59:12.612Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:59:12.612Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:59:12.612Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:59:12.612Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:59:12.612Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:59:12.613Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:59:12.613Z] [CONSOLE] 📝 [GENERATE V2] Body parsed: [object Object]
[2025-06-07T21:59:12.613Z] [INFO] 📝 [GENERATE V2] Body parsed: {
  "input": "When I receive an email in Gmail containing 'urgent' or 'URGENT' in the subject line, post to Slack #urgent-requests channel with format: '🚨 Urgent Email from [sender] - [subject] - [first 100 characters of body]'",
  "platform": "n8n",
  "complexity": "complex",
  "errorHandling": true,
  "optimization": 50,
  "provider": "claude",
  "useRAG": true,
  "validateOutput": true
}
[2025-06-07T21:59:12.613Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:59:12.613Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:59:12.613Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:59:12.613Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:59:12.613Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:59:12.613Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:59:12.613Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:59:12.613Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:59:12.613Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:59:12.613Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:59:12.613Z] [CONSOLE] ✅ [GENERATE V2] Request validated
[2025-06-07T21:59:12.613Z] [INFO] ✅ [GENERATE V2] Request validated
[2025-06-07T21:59:12.613Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:59:12.613Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:59:12.614Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:59:12.614Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:59:12.614Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:59:12.614Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:59:12.614Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:59:12.614Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:59:12.614Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:59:12.614Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:59:12.614Z] [CONSOLE] 🔍 [GENERATE V2] Starting RAG initialization...
[2025-06-07T21:59:12.615Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:59:12.615Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:59:12.615Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:59:12.615Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:59:12.615Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:59:12.615Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:59:12.615Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:59:12.615Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:59:12.615Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:59:12.615Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:59:12.615Z] [CONSOLE] 📚 [GENERATE V2] RAG system created
[2025-06-07T21:59:12.615Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:59:12.615Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:59:12.615Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:59:12.615Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:59:12.615Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:59:12.616Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:59:12.616Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:59:12.616Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:59:12.616Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:59:12.616Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:59:12.616Z] [CONSOLE] 🔧 [RAG] Starting initialization...
[2025-06-07T21:59:13.289Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:59:13.289Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:59:13.289Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:59:13.289Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:59:13.289Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:59:13.289Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:59:13.289Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:59:13.289Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:59:13.289Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:59:13.289Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:59:13.289Z] [CONSOLE] ✅ [RAG] Initialization complete
[2025-06-07T21:59:13.290Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:59:13.290Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:59:13.290Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:59:13.290Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:59:13.290Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:59:13.290Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:59:13.290Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:59:13.290Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:59:13.290Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:59:13.290Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:59:13.290Z] [CONSOLE] 📚 [GENERATE V2] RAG system initialized: true
[2025-06-07T21:59:14.355Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1741ms
[2025-06-07T21:59:14.355Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1741ms
[2025-06-07T21:59:14.356Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1741ms
[2025-06-07T21:59:14.356Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1741ms
[2025-06-07T21:59:14.356Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1741ms
[2025-06-07T21:59:14.356Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1741ms
[2025-06-07T21:59:14.356Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1741ms
[2025-06-07T21:59:14.356Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1741ms
[2025-06-07T21:59:14.356Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1741ms
[2025-06-07T21:59:14.356Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1741ms
[2025-06-07T21:59:14.356Z] [CONSOLE] 📚 [GENERATE V2] RAG search completed in 1741ms
[2025-06-07T21:59:14.356Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:59:14.356Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:59:14.356Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:59:14.356Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:59:14.356Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:59:14.357Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:59:14.357Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:59:14.357Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:59:14.357Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:59:14.357Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:59:14.357Z] [CONSOLE] 🎯 [GENERATE V2] Enhancing prompt for better structure...
[2025-06-07T21:59:14.366Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:59:14.366Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:59:14.366Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:59:14.367Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:59:14.367Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:59:14.367Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:59:14.367Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:59:14.367Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:59:14.367Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:59:14.367Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:59:14.367Z] [CONSOLE] 📊 [GENERATE V2] Enhanced prompt metadata: [object Object]
[2025-06-07T21:59:14.367Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:59:14.367Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:59:14.367Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:59:14.367Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:59:14.367Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:59:14.367Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:59:14.368Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:59:14.368Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:59:14.368Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:59:14.368Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:59:14.368Z] [CONSOLE] 🤖 [GENERATE V2] Calling Claude API with enhanced prompt...
[2025-06-07T21:59:14.368Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:59:14.368Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:59:14.369Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:59:14.369Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:59:14.369Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:59:14.369Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:59:14.369Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:59:14.369Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:59:14.369Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:59:14.369Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:59:14.369Z] [CONSOLE] 🌐 [ANTHROPIC] Making request to /messages, attempt 1
[2025-06-07T21:59:45.990Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:59:45.991Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:59:45.991Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:59:45.991Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:59:45.992Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:59:45.992Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:59:45.992Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:59:45.992Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:59:45.992Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:59:45.992Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:59:45.992Z] [CONSOLE] 🌐 [ANTHROPIC] Response received: 200
[2025-06-07T21:59:45.998Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 31630 ms
[2025-06-07T21:59:45.999Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 31630 ms
[2025-06-07T21:59:45.999Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 31630 ms
[2025-06-07T21:59:45.999Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 31630 ms
[2025-06-07T21:59:45.999Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 31630 ms
[2025-06-07T21:59:45.999Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 31630 ms
[2025-06-07T21:59:46.000Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 31630 ms
[2025-06-07T21:59:46.000Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 31630 ms
[2025-06-07T21:59:46.000Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 31630 ms
[2025-06-07T21:59:46.000Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 31630 ms
[2025-06-07T21:59:46.000Z] [CONSOLE] 🤖 [GENERATE V2] Claude response received in 31630 ms
[2025-06-07T21:59:46.000Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:59:46.000Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:59:46.000Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:59:46.000Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:59:46.000Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:59:46.000Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:59:46.001Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:59:46.001Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:59:46.001Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:59:46.001Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:59:46.001Z] [CONSOLE] 📋 [GENERATE V2] Extracting JSON from Claude response...
[2025-06-07T21:59:46.002Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Urgent Gmail to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      },
      "parameters": {
        "labelIds": ["INBOX"],
        "includeAttachments": false
      }
    },
    {
      "id": "if_urgent_002",
[2025-06-07T21:59:46.002Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Urgent Gmail to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      },
      "parameters": {
        "labelIds": ["INBOX"],
        "includeAttachments": false
      }
    },
    {
      "id": "if_urgent_002",
[2025-06-07T21:59:46.002Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Urgent Gmail to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      },
      "parameters": {
        "labelIds": ["INBOX"],
        "includeAttachments": false
      }
    },
    {
      "id": "if_urgent_002",
[2025-06-07T21:59:46.002Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Urgent Gmail to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      },
      "parameters": {
        "labelIds": ["INBOX"],
        "includeAttachments": false
      }
    },
    {
      "id": "if_urgent_002",
[2025-06-07T21:59:46.002Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Urgent Gmail to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      },
      "parameters": {
        "labelIds": ["INBOX"],
        "includeAttachments": false
      }
    },
    {
      "id": "if_urgent_002",
[2025-06-07T21:59:46.002Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Urgent Gmail to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      },
      "parameters": {
        "labelIds": ["INBOX"],
        "includeAttachments": false
      }
    },
    {
      "id": "if_urgent_002",
[2025-06-07T21:59:46.002Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Urgent Gmail to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      },
      "parameters": {
        "labelIds": ["INBOX"],
        "includeAttachments": false
      }
    },
    {
      "id": "if_urgent_002",
[2025-06-07T21:59:46.002Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Urgent Gmail to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      },
      "parameters": {
        "labelIds": ["INBOX"],
        "includeAttachments": false
      }
    },
    {
      "id": "if_urgent_002",
[2025-06-07T21:59:46.002Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Urgent Gmail to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      },
      "parameters": {
        "labelIds": ["INBOX"],
        "includeAttachments": false
      }
    },
    {
      "id": "if_urgent_002",
[2025-06-07T21:59:46.002Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Urgent Gmail to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      },
      "parameters": {
        "labelIds": ["INBOX"],
        "includeAttachments": false
      }
    },
    {
      "id": "if_urgent_002",
[2025-06-07T21:59:46.002Z] [CONSOLE] 🔍 [DEBUG] Raw AI response preview: ```json
{
  "name": "Urgent Gmail to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      },
      "parameters": {
        "labelIds": ["INBOX"],
        "includeAttachments": false
      }
    },
    {
      "id": "if_urgent_002",
[2025-06-07T21:59:46.003Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:59:46.003Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:59:46.004Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:59:46.004Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:59:46.004Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:59:46.004Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:59:46.004Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:59:46.004Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:59:46.004Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:59:46.005Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:59:46.005Z] [CONSOLE] 📋 [GENERATE V2] JSON extracted successfully
[2025-06-07T21:59:46.005Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:59:46.005Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:59:46.005Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:59:46.005Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:59:46.005Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:59:46.005Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:59:46.005Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:59:46.005Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:59:46.005Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:59:46.005Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:59:46.006Z] [CONSOLE] 🔍 [DEBUG] Extracted workflow structure: [object Object]
[2025-06-07T21:59:46.006Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:59:46.006Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:59:46.006Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:59:46.006Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:59:46.006Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:59:46.006Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:59:46.006Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:59:46.006Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:59:46.006Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:59:46.006Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:59:46.006Z] [CONSOLE] 🔍 [GENERATE V2] Structure validation: [object Object]
[2025-06-07T21:59:46.006Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:59:46.006Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:59:46.007Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:59:46.007Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:59:46.007Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:59:46.007Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:59:46.007Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:59:46.007Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:59:46.007Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:59:46.007Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:59:46.007Z] [CONSOLE] 🔍 [DEBUG] Workflow after structure validation: [object Object]
[2025-06-07T21:59:46.007Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:59:46.007Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:59:46.007Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:59:46.007Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:59:46.007Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:59:46.007Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:59:46.007Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:59:46.007Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:59:46.007Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:59:46.007Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:59:46.007Z] [CONSOLE] 📊 BEFORE formatFixer - Initial state:
[2025-06-07T21:59:46.008Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:46.008Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:46.008Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:46.008Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:46.008Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:46.008Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:46.008Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:46.008Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:46.008Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:46.008Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:46.008Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:46.008Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:46.008Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:46.008Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:46.008Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:46.008Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:46.009Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:46.009Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:46.009Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:46.009Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:46.009Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:46.009Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:46.009Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:46.009Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:46.009Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:46.009Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:46.009Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:46.010Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:46.010Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:46.010Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:46.010Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:46.010Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:46.010Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:46.010Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.010Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.010Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.010Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.010Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.010Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.010Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.010Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.010Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.010Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.010Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.010Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:59:46.010Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:59:46.011Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:59:46.011Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:59:46.011Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:59:46.011Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:59:46.011Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:59:46.011Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:59:46.011Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:59:46.011Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:59:46.011Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData
[2025-06-07T21:59:46.011Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:59:46.011Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:59:46.011Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:59:46.012Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:59:46.012Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:59:46.012Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:59:46.012Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:59:46.012Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:59:46.012Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:59:46.012Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:59:46.012Z] [CONSOLE] 🔧 [GENERATE V2] Starting format fixes...
[2025-06-07T21:59:46.012Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:59:46.012Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:59:46.012Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:59:46.012Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:59:46.012Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:59:46.012Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:59:46.012Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:59:46.012Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:59:46.012Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:59:46.012Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:59:46.012Z] [CONSOLE] 🔧 Applying n8n format fixes...
[2025-06-07T21:59:46.012Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:59:46.012Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:59:46.012Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:59:46.013Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:59:46.013Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:59:46.013Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:59:46.013Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:59:46.013Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:59:46.013Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:59:46.013Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:59:46.013Z] [CONSOLE] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:59:46.013Z] [INFO] 🔧 formatFixer.fixN8nWorkflow called!
[2025-06-07T21:59:46.013Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:59:46.013Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:59:46.013Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:59:46.013Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:59:46.013Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:59:46.013Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:59:46.013Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:59:46.013Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:59:46.013Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:59:46.013Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:59:46.013Z] [CONSOLE] 🔧 Running expression syntax fix...
[2025-06-07T21:59:46.014Z] [CONSOLE]   ✅ Fixed Slack expression: ={{$json["slackMessage"]}}...
[2025-06-07T21:59:46.014Z] [CONSOLE]   ✅ Fixed Slack expression: ={{$json["slackMessage"]}}...
[2025-06-07T21:59:46.014Z] [CONSOLE]   ✅ Fixed Slack expression: ={{$json["slackMessage"]}}...
[2025-06-07T21:59:46.014Z] [CONSOLE]   ✅ Fixed Slack expression: ={{$json["slackMessage"]}}...
[2025-06-07T21:59:46.014Z] [CONSOLE]   ✅ Fixed Slack expression: ={{$json["slackMessage"]}}...
[2025-06-07T21:59:46.014Z] [CONSOLE]   ✅ Fixed Slack expression: ={{$json["slackMessage"]}}...
[2025-06-07T21:59:46.014Z] [CONSOLE]   ✅ Fixed Slack expression: ={{$json["slackMessage"]}}...
[2025-06-07T21:59:46.014Z] [CONSOLE]   ✅ Fixed Slack expression: ={{$json["slackMessage"]}}...
[2025-06-07T21:59:46.014Z] [CONSOLE]   ✅ Fixed Slack expression: ={{$json["slackMessage"]}}...
[2025-06-07T21:59:46.014Z] [CONSOLE]   ✅ Fixed Slack expression: ={{$json["slackMessage"]}}...
[2025-06-07T21:59:46.014Z] [CONSOLE]   ✅ Fixed Slack expression: ={{$json["slackMessage"]}}...
[2025-06-07T21:59:46.014Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:59:46.014Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:59:46.014Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:59:46.014Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:59:46.015Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:59:46.015Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:59:46.015Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:59:46.015Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:59:46.015Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:59:46.015Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:59:46.015Z] [CONSOLE] 🔧 Fixing Gmail field references...
[2025-06-07T21:59:46.015Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:59:46.015Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:59:46.015Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:59:46.015Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:59:46.015Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:59:46.015Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:59:46.015Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:59:46.015Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:59:46.015Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:59:46.015Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:59:46.015Z] [CONSOLE]   ✅ Gmail trigger found, applying field reference fixes
[2025-06-07T21:59:46.015Z] [CONSOLE] 🔧 Fixing IF node: Check if Urgent
[2025-06-07T21:59:46.015Z] [CONSOLE] 🔧 Fixing IF node: Check if Urgent
[2025-06-07T21:59:46.016Z] [CONSOLE] 🔧 Fixing IF node: Check if Urgent
[2025-06-07T21:59:46.016Z] [CONSOLE] 🔧 Fixing IF node: Check if Urgent
[2025-06-07T21:59:46.016Z] [CONSOLE] 🔧 Fixing IF node: Check if Urgent
[2025-06-07T21:59:46.016Z] [CONSOLE] 🔧 Fixing IF node: Check if Urgent
[2025-06-07T21:59:46.016Z] [CONSOLE] 🔧 Fixing IF node: Check if Urgent
[2025-06-07T21:59:46.016Z] [CONSOLE] 🔧 Fixing IF node: Check if Urgent
[2025-06-07T21:59:46.016Z] [CONSOLE] 🔧 Fixing IF node: Check if Urgent
[2025-06-07T21:59:46.016Z] [CONSOLE] 🔧 Fixing IF node: Check if Urgent
[2025-06-07T21:59:46.016Z] [CONSOLE] 🔧 Fixing IF node: Check if Urgent
[2025-06-07T21:59:46.016Z] [INFO] 🔧 Fixing IF node: Check if Urgent
[2025-06-07T21:59:46.016Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:59:46.016Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:59:46.016Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:59:46.016Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:59:46.016Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:59:46.016Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:59:46.016Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:59:46.016Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:59:46.016Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:59:46.016Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:59:46.016Z] [CONSOLE]   ⚠️ No valid conditions found, creating default condition
[2025-06-07T21:59:46.016Z] [CONSOLE]   ✅ Final IF node structure for "Check if Urgent": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:59:46.016Z] [CONSOLE]   ✅ Final IF node structure for "Check if Urgent": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:59:46.016Z] [CONSOLE]   ✅ Final IF node structure for "Check if Urgent": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:59:46.016Z] [CONSOLE]   ✅ Final IF node structure for "Check if Urgent": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:59:46.016Z] [CONSOLE]   ✅ Final IF node structure for "Check if Urgent": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:59:46.016Z] [CONSOLE]   ✅ Final IF node structure for "Check if Urgent": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:59:46.017Z] [CONSOLE]   ✅ Final IF node structure for "Check if Urgent": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:59:46.017Z] [CONSOLE]   ✅ Final IF node structure for "Check if Urgent": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:59:46.017Z] [CONSOLE]   ✅ Final IF node structure for "Check if Urgent": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:59:46.017Z] [CONSOLE]   ✅ Final IF node structure for "Check if Urgent": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:59:46.017Z] [CONSOLE]   ✅ Final IF node structure for "Check if Urgent": {
  "conditions": [
    {
      "leftValue": "={{$json[\"field\"]}}",
      "rightValue": "",
      "operation": "equal"
    }
  ]
}
[2025-06-07T21:59:46.017Z] [CONSOLE] ℹ️ Processed Slack node "Send to Slack" - ensured no otherOptions field
[2025-06-07T21:59:46.017Z] [CONSOLE] ℹ️ Processed Slack node "Send to Slack" - ensured no otherOptions field
[2025-06-07T21:59:46.017Z] [CONSOLE] ℹ️ Processed Slack node "Send to Slack" - ensured no otherOptions field
[2025-06-07T21:59:46.017Z] [CONSOLE] ℹ️ Processed Slack node "Send to Slack" - ensured no otherOptions field
[2025-06-07T21:59:46.017Z] [CONSOLE] ℹ️ Processed Slack node "Send to Slack" - ensured no otherOptions field
[2025-06-07T21:59:46.017Z] [CONSOLE] ℹ️ Processed Slack node "Send to Slack" - ensured no otherOptions field
[2025-06-07T21:59:46.017Z] [CONSOLE] ℹ️ Processed Slack node "Send to Slack" - ensured no otherOptions field
[2025-06-07T21:59:46.017Z] [CONSOLE] ℹ️ Processed Slack node "Send to Slack" - ensured no otherOptions field
[2025-06-07T21:59:46.017Z] [CONSOLE] ℹ️ Processed Slack node "Send to Slack" - ensured no otherOptions field
[2025-06-07T21:59:46.017Z] [CONSOLE] ℹ️ Processed Slack node "Send to Slack" - ensured no otherOptions field
[2025-06-07T21:59:46.017Z] [CONSOLE] ℹ️ Processed Slack node "Send to Slack" - ensured no otherOptions field
[2025-06-07T21:59:46.017Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:59:46.017Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:59:46.017Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:59:46.017Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:59:46.017Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:59:46.017Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:59:46.017Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:59:46.017Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:59:46.017Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:59:46.018Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:59:46.018Z] [CONSOLE] 🔧 Ensuring Slack nodes don't have otherOptions field
[2025-06-07T21:59:46.018Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:59:46.018Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:59:46.018Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:59:46.018Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:59:46.018Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:59:46.018Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:59:46.018Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:59:46.018Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:59:46.018Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:59:46.018Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:59:46.018Z] [CONSOLE] 🔍 Detailed workflow structure:
[2025-06-07T21:59:46.018Z] [CONSOLE] 
Node 0: Gmail Trigger (n8n-nodes-base.gmailTrigger)
[2025-06-07T21:59:46.018Z] [CONSOLE] 
Node 0: Gmail Trigger (n8n-nodes-base.gmailTrigger)
[2025-06-07T21:59:46.018Z] [CONSOLE] 
Node 0: Gmail Trigger (n8n-nodes-base.gmailTrigger)
[2025-06-07T21:59:46.018Z] [CONSOLE] 
Node 0: Gmail Trigger (n8n-nodes-base.gmailTrigger)
[2025-06-07T21:59:46.018Z] [CONSOLE] 
Node 0: Gmail Trigger (n8n-nodes-base.gmailTrigger)
[2025-06-07T21:59:46.018Z] [CONSOLE] 
Node 0: Gmail Trigger (n8n-nodes-base.gmailTrigger)
[2025-06-07T21:59:46.018Z] [CONSOLE] 
Node 0: Gmail Trigger (n8n-nodes-base.gmailTrigger)
[2025-06-07T21:59:46.018Z] [CONSOLE] 
Node 0: Gmail Trigger (n8n-nodes-base.gmailTrigger)
[2025-06-07T21:59:46.018Z] [CONSOLE] 
Node 0: Gmail Trigger (n8n-nodes-base.gmailTrigger)
[2025-06-07T21:59:46.018Z] [CONSOLE] 
Node 0: Gmail Trigger (n8n-nodes-base.gmailTrigger)
[2025-06-07T21:59:46.018Z] [CONSOLE] 
Node 0: Gmail Trigger (n8n-nodes-base.gmailTrigger)
[2025-06-07T21:59:46.018Z] [CONSOLE] Parameters: {
  "labelIds": [
    "INBOX"
  ],
  "includeAttachments": false
}
[2025-06-07T21:59:46.018Z] [CONSOLE] Parameters: {
  "labelIds": [
    "INBOX"
  ],
  "includeAttachments": false
}
[2025-06-07T21:59:46.018Z] [CONSOLE] Parameters: {
  "labelIds": [
    "INBOX"
  ],
  "includeAttachments": false
}
[2025-06-07T21:59:46.018Z] [CONSOLE] Parameters: {
  "labelIds": [
    "INBOX"
  ],
  "includeAttachments": false
}
[2025-06-07T21:59:46.018Z] [CONSOLE] Parameters: {
  "labelIds": [
    "INBOX"
  ],
  "includeAttachments": false
}
[2025-06-07T21:59:46.019Z] [CONSOLE] Parameters: {
  "labelIds": [
    "INBOX"
  ],
  "includeAttachments": false
}
[2025-06-07T21:59:46.019Z] [CONSOLE] Parameters: {
  "labelIds": [
    "INBOX"
  ],
  "includeAttachments": false
}
[2025-06-07T21:59:46.019Z] [CONSOLE] Parameters: {
  "labelIds": [
    "INBOX"
  ],
  "includeAttachments": false
}
[2025-06-07T21:59:46.019Z] [CONSOLE] Parameters: {
  "labelIds": [
    "INBOX"
  ],
  "includeAttachments": false
}
[2025-06-07T21:59:46.019Z] [CONSOLE] Parameters: {
  "labelIds": [
    "INBOX"
  ],
  "includeAttachments": false
}
[2025-06-07T21:59:46.019Z] [CONSOLE] Parameters: {
  "labelIds": [
    "INBOX"
  ],
  "includeAttachments": false
}
[2025-06-07T21:59:46.019Z] [CONSOLE] 
Node 1: Check if Urgent (n8n-nodes-base.if)
[2025-06-07T21:59:46.019Z] [CONSOLE] 
Node 1: Check if Urgent (n8n-nodes-base.if)
[2025-06-07T21:59:46.019Z] [CONSOLE] 
Node 1: Check if Urgent (n8n-nodes-base.if)
[2025-06-07T21:59:46.019Z] [CONSOLE] 
Node 1: Check if Urgent (n8n-nodes-base.if)
[2025-06-07T21:59:46.019Z] [CONSOLE] 
Node 1: Check if Urgent (n8n-nodes-base.if)
[2025-06-07T21:59:46.019Z] [CONSOLE] 
Node 1: Check if Urgent (n8n-nodes-base.if)
[2025-06-07T21:59:46.019Z] [CONSOLE] 
Node 1: Check if Urgent (n8n-nodes-base.if)
[2025-06-07T21:59:46.019Z] [CONSOLE] 
Node 1: Check if Urgent (n8n-nodes-base.if)
[2025-06-07T21:59:46.019Z] [CONSOLE] 
Node 1: Check if Urgent (n8n-nodes-base.if)
[2025-06-07T21:59:46.019Z] [CONSOLE] 
Node 1: Check if Urgent (n8n-nodes-base.if)
[2025-06-07T21:59:46.019Z] [CONSOLE] 
Node 1: Check if Urgent (n8n-nodes-base.if)
[2025-06-07T21:59:46.020Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "any"
}
[2025-06-07T21:59:46.020Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "any"
}
[2025-06-07T21:59:46.020Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "any"
}
[2025-06-07T21:59:46.020Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "any"
}
[2025-06-07T21:59:46.020Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "any"
}
[2025-06-07T21:59:46.020Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "any"
}
[2025-06-07T21:59:46.020Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "any"
}
[2025-06-07T21:59:46.020Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "any"
}
[2025-06-07T21:59:46.020Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "any"
}
[2025-06-07T21:59:46.020Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "any"
}
[2025-06-07T21:59:46.020Z] [CONSOLE] Parameters: {
  "conditions": {
    "conditions": [
      {
        "leftValue": "={{$json[\"field\"]}}",
        "rightValue": "",
        "operation": "equal"
      }
    ]
  },
  "combineOperation": "any"
}
[2025-06-07T21:59:46.020Z] [CONSOLE] 
Node 2: Format Message (n8n-nodes-base.code)
[2025-06-07T21:59:46.020Z] [CONSOLE] 
Node 2: Format Message (n8n-nodes-base.code)
[2025-06-07T21:59:46.020Z] [CONSOLE] 
Node 2: Format Message (n8n-nodes-base.code)
[2025-06-07T21:59:46.020Z] [CONSOLE] 
Node 2: Format Message (n8n-nodes-base.code)
[2025-06-07T21:59:46.020Z] [CONSOLE] 
Node 2: Format Message (n8n-nodes-base.code)
[2025-06-07T21:59:46.020Z] [CONSOLE] 
Node 2: Format Message (n8n-nodes-base.code)
[2025-06-07T21:59:46.020Z] [CONSOLE] 
Node 2: Format Message (n8n-nodes-base.code)
[2025-06-07T21:59:46.020Z] [CONSOLE] 
Node 2: Format Message (n8n-nodes-base.code)
[2025-06-07T21:59:46.020Z] [CONSOLE] 
Node 2: Format Message (n8n-nodes-base.code)
[2025-06-07T21:59:46.020Z] [CONSOLE] 
Node 2: Format Message (n8n-nodes-base.code)
[2025-06-07T21:59:46.020Z] [CONSOLE] 
Node 2: Format Message (n8n-nodes-base.code)
[2025-06-07T21:59:46.020Z] [CONSOLE] Parameters: {
  "language": "javaScript",
  "code": "const email = $input.first().json;\n\n// Extract sender email\nconst fromHeader = email.headers?.from || '';\nconst senderMatch = fromHeader.match(/<(.+?)>/);\nconst sender = senderMatch ? senderMatch[1] : fromHeader.split(' ')[0];\n\n// Get subject\nconst subject = email.subject || 'No subject';\n\n// Get body preview (first 100 chars)\nconst bodyText = email.text || email.snippet || '';\nconst bodyPreview = bodyText.substring(0, 100).replace(/\\n/g, ' ').trim();\n\n// Format Slack message\nconst slackMessage = `🚨 Urgent Email from ${sender} - ${subject} - ${bodyPreview}${bodyText.length > 100 ? '...' : ''}`;\n\nreturn {\n  json: {\n    slackMessage: slackMessage,\n    sender: sender,\n    subject: subject,\n    bodyPreview: bodyPreview,\n    originalEmail: email\n  }\n};"
}
[2025-06-07T21:59:46.020Z] [CONSOLE] Parameters: {
  "language": "javaScript",
  "code": "const email = $input.first().json;\n\n// Extract sender email\nconst fromHeader = email.headers?.from || '';\nconst senderMatch = fromHeader.match(/<(.+?)>/);\nconst sender = senderMatch ? senderMatch[1] : fromHeader.split(' ')[0];\n\n// Get subject\nconst subject = email.subject || 'No subject';\n\n// Get body preview (first 100 chars)\nconst bodyText = email.text || email.snippet || '';\nconst bodyPreview = bodyText.substring(0, 100).replace(/\\n/g, ' ').trim();\n\n// Format Slack message\nconst slackMessage = `🚨 Urgent Email from ${sender} - ${subject} - ${bodyPreview}${bodyText.length > 100 ? '...' : ''}`;\n\nreturn {\n  json: {\n    slackMessage: slackMessage,\n    sender: sender,\n    subject: subject,\n    bodyPreview: bodyPreview,\n    originalEmail: email\n  }\n};"
}
[2025-06-07T21:59:46.020Z] [CONSOLE] Parameters: {
  "language": "javaScript",
  "code": "const email = $input.first().json;\n\n// Extract sender email\nconst fromHeader = email.headers?.from || '';\nconst senderMatch = fromHeader.match(/<(.+?)>/);\nconst sender = senderMatch ? senderMatch[1] : fromHeader.split(' ')[0];\n\n// Get subject\nconst subject = email.subject || 'No subject';\n\n// Get body preview (first 100 chars)\nconst bodyText = email.text || email.snippet || '';\nconst bodyPreview = bodyText.substring(0, 100).replace(/\\n/g, ' ').trim();\n\n// Format Slack message\nconst slackMessage = `🚨 Urgent Email from ${sender} - ${subject} - ${bodyPreview}${bodyText.length > 100 ? '...' : ''}`;\n\nreturn {\n  json: {\n    slackMessage: slackMessage,\n    sender: sender,\n    subject: subject,\n    bodyPreview: bodyPreview,\n    originalEmail: email\n  }\n};"
}
[2025-06-07T21:59:46.020Z] [CONSOLE] Parameters: {
  "language": "javaScript",
  "code": "const email = $input.first().json;\n\n// Extract sender email\nconst fromHeader = email.headers?.from || '';\nconst senderMatch = fromHeader.match(/<(.+?)>/);\nconst sender = senderMatch ? senderMatch[1] : fromHeader.split(' ')[0];\n\n// Get subject\nconst subject = email.subject || 'No subject';\n\n// Get body preview (first 100 chars)\nconst bodyText = email.text || email.snippet || '';\nconst bodyPreview = bodyText.substring(0, 100).replace(/\\n/g, ' ').trim();\n\n// Format Slack message\nconst slackMessage = `🚨 Urgent Email from ${sender} - ${subject} - ${bodyPreview}${bodyText.length > 100 ? '...' : ''}`;\n\nreturn {\n  json: {\n    slackMessage: slackMessage,\n    sender: sender,\n    subject: subject,\n    bodyPreview: bodyPreview,\n    originalEmail: email\n  }\n};"
}
[2025-06-07T21:59:46.020Z] [CONSOLE] Parameters: {
  "language": "javaScript",
  "code": "const email = $input.first().json;\n\n// Extract sender email\nconst fromHeader = email.headers?.from || '';\nconst senderMatch = fromHeader.match(/<(.+?)>/);\nconst sender = senderMatch ? senderMatch[1] : fromHeader.split(' ')[0];\n\n// Get subject\nconst subject = email.subject || 'No subject';\n\n// Get body preview (first 100 chars)\nconst bodyText = email.text || email.snippet || '';\nconst bodyPreview = bodyText.substring(0, 100).replace(/\\n/g, ' ').trim();\n\n// Format Slack message\nconst slackMessage = `🚨 Urgent Email from ${sender} - ${subject} - ${bodyPreview}${bodyText.length > 100 ? '...' : ''}`;\n\nreturn {\n  json: {\n    slackMessage: slackMessage,\n    sender: sender,\n    subject: subject,\n    bodyPreview: bodyPreview,\n    originalEmail: email\n  }\n};"
}
[2025-06-07T21:59:46.020Z] [CONSOLE] Parameters: {
  "language": "javaScript",
  "code": "const email = $input.first().json;\n\n// Extract sender email\nconst fromHeader = email.headers?.from || '';\nconst senderMatch = fromHeader.match(/<(.+?)>/);\nconst sender = senderMatch ? senderMatch[1] : fromHeader.split(' ')[0];\n\n// Get subject\nconst subject = email.subject || 'No subject';\n\n// Get body preview (first 100 chars)\nconst bodyText = email.text || email.snippet || '';\nconst bodyPreview = bodyText.substring(0, 100).replace(/\\n/g, ' ').trim();\n\n// Format Slack message\nconst slackMessage = `🚨 Urgent Email from ${sender} - ${subject} - ${bodyPreview}${bodyText.length > 100 ? '...' : ''}`;\n\nreturn {\n  json: {\n    slackMessage: slackMessage,\n    sender: sender,\n    subject: subject,\n    bodyPreview: bodyPreview,\n    originalEmail: email\n  }\n};"
}
[2025-06-07T21:59:46.021Z] [CONSOLE] Parameters: {
  "language": "javaScript",
  "code": "const email = $input.first().json;\n\n// Extract sender email\nconst fromHeader = email.headers?.from || '';\nconst senderMatch = fromHeader.match(/<(.+?)>/);\nconst sender = senderMatch ? senderMatch[1] : fromHeader.split(' ')[0];\n\n// Get subject\nconst subject = email.subject || 'No subject';\n\n// Get body preview (first 100 chars)\nconst bodyText = email.text || email.snippet || '';\nconst bodyPreview = bodyText.substring(0, 100).replace(/\\n/g, ' ').trim();\n\n// Format Slack message\nconst slackMessage = `🚨 Urgent Email from ${sender} - ${subject} - ${bodyPreview}${bodyText.length > 100 ? '...' : ''}`;\n\nreturn {\n  json: {\n    slackMessage: slackMessage,\n    sender: sender,\n    subject: subject,\n    bodyPreview: bodyPreview,\n    originalEmail: email\n  }\n};"
}
[2025-06-07T21:59:46.021Z] [CONSOLE] Parameters: {
  "language": "javaScript",
  "code": "const email = $input.first().json;\n\n// Extract sender email\nconst fromHeader = email.headers?.from || '';\nconst senderMatch = fromHeader.match(/<(.+?)>/);\nconst sender = senderMatch ? senderMatch[1] : fromHeader.split(' ')[0];\n\n// Get subject\nconst subject = email.subject || 'No subject';\n\n// Get body preview (first 100 chars)\nconst bodyText = email.text || email.snippet || '';\nconst bodyPreview = bodyText.substring(0, 100).replace(/\\n/g, ' ').trim();\n\n// Format Slack message\nconst slackMessage = `🚨 Urgent Email from ${sender} - ${subject} - ${bodyPreview}${bodyText.length > 100 ? '...' : ''}`;\n\nreturn {\n  json: {\n    slackMessage: slackMessage,\n    sender: sender,\n    subject: subject,\n    bodyPreview: bodyPreview,\n    originalEmail: email\n  }\n};"
}
[2025-06-07T21:59:46.021Z] [CONSOLE] Parameters: {
  "language": "javaScript",
  "code": "const email = $input.first().json;\n\n// Extract sender email\nconst fromHeader = email.headers?.from || '';\nconst senderMatch = fromHeader.match(/<(.+?)>/);\nconst sender = senderMatch ? senderMatch[1] : fromHeader.split(' ')[0];\n\n// Get subject\nconst subject = email.subject || 'No subject';\n\n// Get body preview (first 100 chars)\nconst bodyText = email.text || email.snippet || '';\nconst bodyPreview = bodyText.substring(0, 100).replace(/\\n/g, ' ').trim();\n\n// Format Slack message\nconst slackMessage = `🚨 Urgent Email from ${sender} - ${subject} - ${bodyPreview}${bodyText.length > 100 ? '...' : ''}`;\n\nreturn {\n  json: {\n    slackMessage: slackMessage,\n    sender: sender,\n    subject: subject,\n    bodyPreview: bodyPreview,\n    originalEmail: email\n  }\n};"
}
[2025-06-07T21:59:46.021Z] [CONSOLE] Parameters: {
  "language": "javaScript",
  "code": "const email = $input.first().json;\n\n// Extract sender email\nconst fromHeader = email.headers?.from || '';\nconst senderMatch = fromHeader.match(/<(.+?)>/);\nconst sender = senderMatch ? senderMatch[1] : fromHeader.split(' ')[0];\n\n// Get subject\nconst subject = email.subject || 'No subject';\n\n// Get body preview (first 100 chars)\nconst bodyText = email.text || email.snippet || '';\nconst bodyPreview = bodyText.substring(0, 100).replace(/\\n/g, ' ').trim();\n\n// Format Slack message\nconst slackMessage = `🚨 Urgent Email from ${sender} - ${subject} - ${bodyPreview}${bodyText.length > 100 ? '...' : ''}`;\n\nreturn {\n  json: {\n    slackMessage: slackMessage,\n    sender: sender,\n    subject: subject,\n    bodyPreview: bodyPreview,\n    originalEmail: email\n  }\n};"
}
[2025-06-07T21:59:46.021Z] [CONSOLE] Parameters: {
  "language": "javaScript",
  "code": "const email = $input.first().json;\n\n// Extract sender email\nconst fromHeader = email.headers?.from || '';\nconst senderMatch = fromHeader.match(/<(.+?)>/);\nconst sender = senderMatch ? senderMatch[1] : fromHeader.split(' ')[0];\n\n// Get subject\nconst subject = email.subject || 'No subject';\n\n// Get body preview (first 100 chars)\nconst bodyText = email.text || email.snippet || '';\nconst bodyPreview = bodyText.substring(0, 100).replace(/\\n/g, ' ').trim();\n\n// Format Slack message\nconst slackMessage = `🚨 Urgent Email from ${sender} - ${subject} - ${bodyPreview}${bodyText.length > 100 ? '...' : ''}`;\n\nreturn {\n  json: {\n    slackMessage: slackMessage,\n    sender: sender,\n    subject: subject,\n    bodyPreview: bodyPreview,\n    originalEmail: email\n  }\n};"
}
[2025-06-07T21:59:46.021Z] [CONSOLE] 
Node 3: Send to Slack (n8n-nodes-base.slack)
[2025-06-07T21:59:46.021Z] [CONSOLE] 
Node 3: Send to Slack (n8n-nodes-base.slack)
[2025-06-07T21:59:46.021Z] [CONSOLE] 
Node 3: Send to Slack (n8n-nodes-base.slack)
[2025-06-07T21:59:46.021Z] [CONSOLE] 
Node 3: Send to Slack (n8n-nodes-base.slack)
[2025-06-07T21:59:46.021Z] [CONSOLE] 
Node 3: Send to Slack (n8n-nodes-base.slack)
[2025-06-07T21:59:46.021Z] [CONSOLE] 
Node 3: Send to Slack (n8n-nodes-base.slack)
[2025-06-07T21:59:46.021Z] [CONSOLE] 
Node 3: Send to Slack (n8n-nodes-base.slack)
[2025-06-07T21:59:46.021Z] [CONSOLE] 
Node 3: Send to Slack (n8n-nodes-base.slack)
[2025-06-07T21:59:46.021Z] [CONSOLE] 
Node 3: Send to Slack (n8n-nodes-base.slack)
[2025-06-07T21:59:46.021Z] [CONSOLE] 
Node 3: Send to Slack (n8n-nodes-base.slack)
[2025-06-07T21:59:46.021Z] [CONSOLE] 
Node 3: Send to Slack (n8n-nodes-base.slack)
[2025-06-07T21:59:46.021Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#urgent-requests",
  "text": "{{$json.slackMessage}}"
}
[2025-06-07T21:59:46.021Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#urgent-requests",
  "text": "{{$json.slackMessage}}"
}
[2025-06-07T21:59:46.021Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#urgent-requests",
  "text": "{{$json.slackMessage}}"
}
[2025-06-07T21:59:46.021Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#urgent-requests",
  "text": "{{$json.slackMessage}}"
}
[2025-06-07T21:59:46.021Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#urgent-requests",
  "text": "{{$json.slackMessage}}"
}
[2025-06-07T21:59:46.021Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#urgent-requests",
  "text": "{{$json.slackMessage}}"
}
[2025-06-07T21:59:46.021Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#urgent-requests",
  "text": "{{$json.slackMessage}}"
}
[2025-06-07T21:59:46.021Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#urgent-requests",
  "text": "{{$json.slackMessage}}"
}
[2025-06-07T21:59:46.021Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#urgent-requests",
  "text": "{{$json.slackMessage}}"
}
[2025-06-07T21:59:46.021Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#urgent-requests",
  "text": "{{$json.slackMessage}}"
}
[2025-06-07T21:59:46.021Z] [CONSOLE] Parameters: {
  "authentication": "accessToken",
  "operation": "post",
  "channel": "#urgent-requests",
  "text": "{{$json.slackMessage}}"
}
[2025-06-07T21:59:46.021Z] [CONSOLE] 
Node 4: Set Error Message (n8n-nodes-base.set)
[2025-06-07T21:59:46.021Z] [CONSOLE] 
Node 4: Set Error Message (n8n-nodes-base.set)
[2025-06-07T21:59:46.022Z] [CONSOLE] 
Node 4: Set Error Message (n8n-nodes-base.set)
[2025-06-07T21:59:46.022Z] [CONSOLE] 
Node 4: Set Error Message (n8n-nodes-base.set)
[2025-06-07T21:59:46.022Z] [CONSOLE] 
Node 4: Set Error Message (n8n-nodes-base.set)
[2025-06-07T21:59:46.022Z] [CONSOLE] 
Node 4: Set Error Message (n8n-nodes-base.set)
[2025-06-07T21:59:46.022Z] [CONSOLE] 
Node 4: Set Error Message (n8n-nodes-base.set)
[2025-06-07T21:59:46.022Z] [CONSOLE] 
Node 4: Set Error Message (n8n-nodes-base.set)
[2025-06-07T21:59:46.022Z] [CONSOLE] 
Node 4: Set Error Message (n8n-nodes-base.set)
[2025-06-07T21:59:46.022Z] [CONSOLE] 
Node 4: Set Error Message (n8n-nodes-base.set)
[2025-06-07T21:59:46.022Z] [CONSOLE] 
Node 4: Set Error Message (n8n-nodes-base.set)
[2025-06-07T21:59:46.022Z] [CONSOLE] Parameters: {
  "assignments": {
    "assignments": [
      {
        "id": "1",
        "name": "error",
        "value": "Failed to process urgent email",
        "type": "string"
      },
      {
        "id": "2",
        "name": "emailSubject",
        "value": "={{$node[\"Gmail Trigger\"].json[\"subject\"]}}",
        "type": "string"
      }
    ]
  },
  "values": {
    "string": [
      {
        "name": "success",
        "value": "true"
      }
    ]
  }
}
[2025-06-07T21:59:46.022Z] [CONSOLE] Parameters: {
  "assignments": {
    "assignments": [
      {
        "id": "1",
        "name": "error",
        "value": "Failed to process urgent email",
        "type": "string"
      },
      {
        "id": "2",
        "name": "emailSubject",
        "value": "={{$node[\"Gmail Trigger\"].json[\"subject\"]}}",
        "type": "string"
      }
    ]
  },
  "values": {
    "string": [
      {
        "name": "success",
        "value": "true"
      }
    ]
  }
}
[2025-06-07T21:59:46.022Z] [CONSOLE] Parameters: {
  "assignments": {
    "assignments": [
      {
        "id": "1",
        "name": "error",
        "value": "Failed to process urgent email",
        "type": "string"
      },
      {
        "id": "2",
        "name": "emailSubject",
        "value": "={{$node[\"Gmail Trigger\"].json[\"subject\"]}}",
        "type": "string"
      }
    ]
  },
  "values": {
    "string": [
      {
        "name": "success",
        "value": "true"
      }
    ]
  }
}
[2025-06-07T21:59:46.022Z] [CONSOLE] Parameters: {
  "assignments": {
    "assignments": [
      {
        "id": "1",
        "name": "error",
        "value": "Failed to process urgent email",
        "type": "string"
      },
      {
        "id": "2",
        "name": "emailSubject",
        "value": "={{$node[\"Gmail Trigger\"].json[\"subject\"]}}",
        "type": "string"
      }
    ]
  },
  "values": {
    "string": [
      {
        "name": "success",
        "value": "true"
      }
    ]
  }
}
[2025-06-07T21:59:46.022Z] [CONSOLE] Parameters: {
  "assignments": {
    "assignments": [
      {
        "id": "1",
        "name": "error",
        "value": "Failed to process urgent email",
        "type": "string"
      },
      {
        "id": "2",
        "name": "emailSubject",
        "value": "={{$node[\"Gmail Trigger\"].json[\"subject\"]}}",
        "type": "string"
      }
    ]
  },
  "values": {
    "string": [
      {
        "name": "success",
        "value": "true"
      }
    ]
  }
}
[2025-06-07T21:59:46.022Z] [CONSOLE] Parameters: {
  "assignments": {
    "assignments": [
      {
        "id": "1",
        "name": "error",
        "value": "Failed to process urgent email",
        "type": "string"
      },
      {
        "id": "2",
        "name": "emailSubject",
        "value": "={{$node[\"Gmail Trigger\"].json[\"subject\"]}}",
        "type": "string"
      }
    ]
  },
  "values": {
    "string": [
      {
        "name": "success",
        "value": "true"
      }
    ]
  }
}
[2025-06-07T21:59:46.022Z] [CONSOLE] Parameters: {
  "assignments": {
    "assignments": [
      {
        "id": "1",
        "name": "error",
        "value": "Failed to process urgent email",
        "type": "string"
      },
      {
        "id": "2",
        "name": "emailSubject",
        "value": "={{$node[\"Gmail Trigger\"].json[\"subject\"]}}",
        "type": "string"
      }
    ]
  },
  "values": {
    "string": [
      {
        "name": "success",
        "value": "true"
      }
    ]
  }
}
[2025-06-07T21:59:46.022Z] [CONSOLE] Parameters: {
  "assignments": {
    "assignments": [
      {
        "id": "1",
        "name": "error",
        "value": "Failed to process urgent email",
        "type": "string"
      },
      {
        "id": "2",
        "name": "emailSubject",
        "value": "={{$node[\"Gmail Trigger\"].json[\"subject\"]}}",
        "type": "string"
      }
    ]
  },
  "values": {
    "string": [
      {
        "name": "success",
        "value": "true"
      }
    ]
  }
}
[2025-06-07T21:59:46.022Z] [CONSOLE] Parameters: {
  "assignments": {
    "assignments": [
      {
        "id": "1",
        "name": "error",
        "value": "Failed to process urgent email",
        "type": "string"
      },
      {
        "id": "2",
        "name": "emailSubject",
        "value": "={{$node[\"Gmail Trigger\"].json[\"subject\"]}}",
        "type": "string"
      }
    ]
  },
  "values": {
    "string": [
      {
        "name": "success",
        "value": "true"
      }
    ]
  }
}
[2025-06-07T21:59:46.022Z] [CONSOLE] Parameters: {
  "assignments": {
    "assignments": [
      {
        "id": "1",
        "name": "error",
        "value": "Failed to process urgent email",
        "type": "string"
      },
      {
        "id": "2",
        "name": "emailSubject",
        "value": "={{$node[\"Gmail Trigger\"].json[\"subject\"]}}",
        "type": "string"
      }
    ]
  },
  "values": {
    "string": [
      {
        "name": "success",
        "value": "true"
      }
    ]
  }
}
[2025-06-07T21:59:46.022Z] [CONSOLE] Parameters: {
  "assignments": {
    "assignments": [
      {
        "id": "1",
        "name": "error",
        "value": "Failed to process urgent email",
        "type": "string"
      },
      {
        "id": "2",
        "name": "emailSubject",
        "value": "={{$node[\"Gmail Trigger\"].json[\"subject\"]}}",
        "type": "string"
      }
    ]
  },
  "values": {
    "string": [
      {
        "name": "success",
        "value": "true"
      }
    ]
  }
}
[2025-06-07T21:59:46.022Z] [CONSOLE] 
Node 5: Email Admin on Error (n8n-nodes-base.emailSend)
[2025-06-07T21:59:46.022Z] [CONSOLE] 
Node 5: Email Admin on Error (n8n-nodes-base.emailSend)
[2025-06-07T21:59:46.022Z] [CONSOLE] 
Node 5: Email Admin on Error (n8n-nodes-base.emailSend)
[2025-06-07T21:59:46.022Z] [CONSOLE] 
Node 5: Email Admin on Error (n8n-nodes-base.emailSend)
[2025-06-07T21:59:46.022Z] [CONSOLE] 
Node 5: Email Admin on Error (n8n-nodes-base.emailSend)
[2025-06-07T21:59:46.022Z] [CONSOLE] 
Node 5: Email Admin on Error (n8n-nodes-base.emailSend)
[2025-06-07T21:59:46.022Z] [CONSOLE] 
Node 5: Email Admin on Error (n8n-nodes-base.emailSend)
[2025-06-07T21:59:46.022Z] [CONSOLE] 
Node 5: Email Admin on Error (n8n-nodes-base.emailSend)
[2025-06-07T21:59:46.022Z] [CONSOLE] 
Node 5: Email Admin on Error (n8n-nodes-base.emailSend)
[2025-06-07T21:59:46.022Z] [CONSOLE] 
Node 5: Email Admin on Error (n8n-nodes-base.emailSend)
[2025-06-07T21:59:46.023Z] [CONSOLE] 
Node 5: Email Admin on Error (n8n-nodes-base.emailSend)
[2025-06-07T21:59:46.023Z] [CONSOLE] Parameters: {
  "fromEmail": "n8n@yourdomain.com",
  "toEmail": "admin@yourdomain.com",
  "subject": "Error Processing Urgent Email",
  "text": "Failed to send urgent email notification to Slack.\n\nOriginal email subject: {{$json.emailSubject}}\nError: {{$json.error}}"
}
[2025-06-07T21:59:46.023Z] [CONSOLE] Parameters: {
  "fromEmail": "n8n@yourdomain.com",
  "toEmail": "admin@yourdomain.com",
  "subject": "Error Processing Urgent Email",
  "text": "Failed to send urgent email notification to Slack.\n\nOriginal email subject: {{$json.emailSubject}}\nError: {{$json.error}}"
}
[2025-06-07T21:59:46.023Z] [CONSOLE] Parameters: {
  "fromEmail": "n8n@yourdomain.com",
  "toEmail": "admin@yourdomain.com",
  "subject": "Error Processing Urgent Email",
  "text": "Failed to send urgent email notification to Slack.\n\nOriginal email subject: {{$json.emailSubject}}\nError: {{$json.error}}"
}
[2025-06-07T21:59:46.023Z] [CONSOLE] Parameters: {
  "fromEmail": "n8n@yourdomain.com",
  "toEmail": "admin@yourdomain.com",
  "subject": "Error Processing Urgent Email",
  "text": "Failed to send urgent email notification to Slack.\n\nOriginal email subject: {{$json.emailSubject}}\nError: {{$json.error}}"
}
[2025-06-07T21:59:46.023Z] [CONSOLE] Parameters: {
  "fromEmail": "n8n@yourdomain.com",
  "toEmail": "admin@yourdomain.com",
  "subject": "Error Processing Urgent Email",
  "text": "Failed to send urgent email notification to Slack.\n\nOriginal email subject: {{$json.emailSubject}}\nError: {{$json.error}}"
}
[2025-06-07T21:59:46.023Z] [CONSOLE] Parameters: {
  "fromEmail": "n8n@yourdomain.com",
  "toEmail": "admin@yourdomain.com",
  "subject": "Error Processing Urgent Email",
  "text": "Failed to send urgent email notification to Slack.\n\nOriginal email subject: {{$json.emailSubject}}\nError: {{$json.error}}"
}
[2025-06-07T21:59:46.023Z] [CONSOLE] Parameters: {
  "fromEmail": "n8n@yourdomain.com",
  "toEmail": "admin@yourdomain.com",
  "subject": "Error Processing Urgent Email",
  "text": "Failed to send urgent email notification to Slack.\n\nOriginal email subject: {{$json.emailSubject}}\nError: {{$json.error}}"
}
[2025-06-07T21:59:46.023Z] [CONSOLE] Parameters: {
  "fromEmail": "n8n@yourdomain.com",
  "toEmail": "admin@yourdomain.com",
  "subject": "Error Processing Urgent Email",
  "text": "Failed to send urgent email notification to Slack.\n\nOriginal email subject: {{$json.emailSubject}}\nError: {{$json.error}}"
}
[2025-06-07T21:59:46.023Z] [CONSOLE] Parameters: {
  "fromEmail": "n8n@yourdomain.com",
  "toEmail": "admin@yourdomain.com",
  "subject": "Error Processing Urgent Email",
  "text": "Failed to send urgent email notification to Slack.\n\nOriginal email subject: {{$json.emailSubject}}\nError: {{$json.error}}"
}
[2025-06-07T21:59:46.023Z] [CONSOLE] Parameters: {
  "fromEmail": "n8n@yourdomain.com",
  "toEmail": "admin@yourdomain.com",
  "subject": "Error Processing Urgent Email",
  "text": "Failed to send urgent email notification to Slack.\n\nOriginal email subject: {{$json.emailSubject}}\nError: {{$json.error}}"
}
[2025-06-07T21:59:46.023Z] [CONSOLE] Parameters: {
  "fromEmail": "n8n@yourdomain.com",
  "toEmail": "admin@yourdomain.com",
  "subject": "Error Processing Urgent Email",
  "text": "Failed to send urgent email notification to Slack.\n\nOriginal email subject: {{$json.emailSubject}}\nError: {{$json.error}}"
}
[2025-06-07T21:59:46.023Z] [CONSOLE] 
Connections: {
  "Gmail Trigger": {
    "main": [
      [
        {
          "node": "Check if Urgent",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check if Urgent": {
    "main": [
      [
        {
          "node": "Format Message",
          "type": "main",
          "index": 0
        }
      ],
      []
    ]
  },
  "Format Message": {
    "main": [
      [
        {
          "node": "Send to Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send to Slack": {
    "main": [
      []
    ]
  },
  "Set Error Message": {
    "main": [
      [
        {
          "node": "Email Admin on Error",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:59:46.023Z] [CONSOLE] 
Connections: {
  "Gmail Trigger": {
    "main": [
      [
        {
          "node": "Check if Urgent",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check if Urgent": {
    "main": [
      [
        {
          "node": "Format Message",
          "type": "main",
          "index": 0
        }
      ],
      []
    ]
  },
  "Format Message": {
    "main": [
      [
        {
          "node": "Send to Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send to Slack": {
    "main": [
      []
    ]
  },
  "Set Error Message": {
    "main": [
      [
        {
          "node": "Email Admin on Error",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:59:46.023Z] [CONSOLE] 
Connections: {
  "Gmail Trigger": {
    "main": [
      [
        {
          "node": "Check if Urgent",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check if Urgent": {
    "main": [
      [
        {
          "node": "Format Message",
          "type": "main",
          "index": 0
        }
      ],
      []
    ]
  },
  "Format Message": {
    "main": [
      [
        {
          "node": "Send to Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send to Slack": {
    "main": [
      []
    ]
  },
  "Set Error Message": {
    "main": [
      [
        {
          "node": "Email Admin on Error",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:59:46.023Z] [CONSOLE] 
Connections: {
  "Gmail Trigger": {
    "main": [
      [
        {
          "node": "Check if Urgent",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check if Urgent": {
    "main": [
      [
        {
          "node": "Format Message",
          "type": "main",
          "index": 0
        }
      ],
      []
    ]
  },
  "Format Message": {
    "main": [
      [
        {
          "node": "Send to Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send to Slack": {
    "main": [
      []
    ]
  },
  "Set Error Message": {
    "main": [
      [
        {
          "node": "Email Admin on Error",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:59:46.023Z] [CONSOLE] 
Connections: {
  "Gmail Trigger": {
    "main": [
      [
        {
          "node": "Check if Urgent",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check if Urgent": {
    "main": [
      [
        {
          "node": "Format Message",
          "type": "main",
          "index": 0
        }
      ],
      []
    ]
  },
  "Format Message": {
    "main": [
      [
        {
          "node": "Send to Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send to Slack": {
    "main": [
      []
    ]
  },
  "Set Error Message": {
    "main": [
      [
        {
          "node": "Email Admin on Error",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:59:46.023Z] [CONSOLE] 
Connections: {
  "Gmail Trigger": {
    "main": [
      [
        {
          "node": "Check if Urgent",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check if Urgent": {
    "main": [
      [
        {
          "node": "Format Message",
          "type": "main",
          "index": 0
        }
      ],
      []
    ]
  },
  "Format Message": {
    "main": [
      [
        {
          "node": "Send to Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send to Slack": {
    "main": [
      []
    ]
  },
  "Set Error Message": {
    "main": [
      [
        {
          "node": "Email Admin on Error",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:59:46.023Z] [CONSOLE] 
Connections: {
  "Gmail Trigger": {
    "main": [
      [
        {
          "node": "Check if Urgent",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check if Urgent": {
    "main": [
      [
        {
          "node": "Format Message",
          "type": "main",
          "index": 0
        }
      ],
      []
    ]
  },
  "Format Message": {
    "main": [
      [
        {
          "node": "Send to Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send to Slack": {
    "main": [
      []
    ]
  },
  "Set Error Message": {
    "main": [
      [
        {
          "node": "Email Admin on Error",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:59:46.023Z] [CONSOLE] 
Connections: {
  "Gmail Trigger": {
    "main": [
      [
        {
          "node": "Check if Urgent",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check if Urgent": {
    "main": [
      [
        {
          "node": "Format Message",
          "type": "main",
          "index": 0
        }
      ],
      []
    ]
  },
  "Format Message": {
    "main": [
      [
        {
          "node": "Send to Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send to Slack": {
    "main": [
      []
    ]
  },
  "Set Error Message": {
    "main": [
      [
        {
          "node": "Email Admin on Error",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:59:46.023Z] [CONSOLE] 
Connections: {
  "Gmail Trigger": {
    "main": [
      [
        {
          "node": "Check if Urgent",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check if Urgent": {
    "main": [
      [
        {
          "node": "Format Message",
          "type": "main",
          "index": 0
        }
      ],
      []
    ]
  },
  "Format Message": {
    "main": [
      [
        {
          "node": "Send to Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send to Slack": {
    "main": [
      []
    ]
  },
  "Set Error Message": {
    "main": [
      [
        {
          "node": "Email Admin on Error",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:59:46.023Z] [CONSOLE] 
Connections: {
  "Gmail Trigger": {
    "main": [
      [
        {
          "node": "Check if Urgent",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check if Urgent": {
    "main": [
      [
        {
          "node": "Format Message",
          "type": "main",
          "index": 0
        }
      ],
      []
    ]
  },
  "Format Message": {
    "main": [
      [
        {
          "node": "Send to Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send to Slack": {
    "main": [
      []
    ]
  },
  "Set Error Message": {
    "main": [
      [
        {
          "node": "Email Admin on Error",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:59:46.024Z] [CONSOLE] 
Connections: {
  "Gmail Trigger": {
    "main": [
      [
        {
          "node": "Check if Urgent",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Check if Urgent": {
    "main": [
      [
        {
          "node": "Format Message",
          "type": "main",
          "index": 0
        }
      ],
      []
    ]
  },
  "Format Message": {
    "main": [
      [
        {
          "node": "Send to Slack",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
  "Send to Slack": {
    "main": [
      []
    ]
  },
  "Set Error Message": {
    "main": [
      [
        {
          "node": "Email Admin on Error",
          "type": "main",
          "index": 0
        }
      ]
    ]
  }
}
[2025-06-07T21:59:46.024Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "errorWorkflow": "Set Error Message",
  "saveExecutionProgress": false,
  "saveManualExecutions": true,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:59:46.024Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "errorWorkflow": "Set Error Message",
  "saveExecutionProgress": false,
  "saveManualExecutions": true,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:59:46.024Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "errorWorkflow": "Set Error Message",
  "saveExecutionProgress": false,
  "saveManualExecutions": true,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:59:46.024Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "errorWorkflow": "Set Error Message",
  "saveExecutionProgress": false,
  "saveManualExecutions": true,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:59:46.024Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "errorWorkflow": "Set Error Message",
  "saveExecutionProgress": false,
  "saveManualExecutions": true,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:59:46.024Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "errorWorkflow": "Set Error Message",
  "saveExecutionProgress": false,
  "saveManualExecutions": true,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:59:46.024Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "errorWorkflow": "Set Error Message",
  "saveExecutionProgress": false,
  "saveManualExecutions": true,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:59:46.024Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "errorWorkflow": "Set Error Message",
  "saveExecutionProgress": false,
  "saveManualExecutions": true,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:59:46.024Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "errorWorkflow": "Set Error Message",
  "saveExecutionProgress": false,
  "saveManualExecutions": true,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:59:46.024Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "errorWorkflow": "Set Error Message",
  "saveExecutionProgress": false,
  "saveManualExecutions": true,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:59:46.024Z] [CONSOLE] 
Settings: {
  "executionOrder": "v1",
  "errorWorkflow": "Set Error Message",
  "saveExecutionProgress": false,
  "saveManualExecutions": true,
  "saveDataErrorExecution": "all",
  "saveDataSuccessExecution": "all",
  "executionTimeout": -1,
  "timezone": "America/New_York"
}
[2025-06-07T21:59:46.024Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:59:46.024Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:59:46.024Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:59:46.024Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:59:46.024Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:59:46.024Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:59:46.024Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:59:46.024Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:59:46.025Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:59:46.025Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:59:46.025Z] [CONSOLE] 🔧 Fixing attachment field references...
[2025-06-07T21:59:46.025Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:59:46.025Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:59:46.025Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:59:46.025Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:59:46.025Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:59:46.025Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:59:46.025Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:59:46.025Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:59:46.025Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:59:46.025Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:59:46.025Z] [CONSOLE] 🔧 Validating and fixing expression property references...
[2025-06-07T21:59:46.026Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:59:46.026Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:59:46.026Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:59:46.026Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:59:46.026Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:59:46.026Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:59:46.026Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:59:46.026Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:59:46.026Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:59:46.026Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:59:46.026Z] [CONSOLE] 🔧 Final step: Ensuring required options fields for specific node types...
[2025-06-07T21:59:46.026Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:59:46.026Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:59:46.026Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:59:46.026Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:59:46.026Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:59:46.026Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:59:46.026Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:59:46.026Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:59:46.026Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:59:46.026Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:59:46.026Z] [CONSOLE] ✅ Required options fields verification complete
[2025-06-07T21:59:46.026Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:59:46.027Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:59:46.027Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:59:46.027Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:59:46.027Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:59:46.027Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:59:46.027Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:59:46.027Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:59:46.027Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:59:46.027Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:59:46.027Z] [CONSOLE] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:59:46.027Z] [INFO] ✅ formatFixer.fixN8nWorkflow completed!
[2025-06-07T21:59:46.027Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:59:46.027Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:59:46.027Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:59:46.027Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:59:46.027Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:59:46.027Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:59:46.027Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:59:46.027Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:59:46.027Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:59:46.027Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:59:46.027Z] [CONSOLE] ✅ Format fixes applied
[2025-06-07T21:59:46.027Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:59:46.027Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:59:46.028Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:59:46.028Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:59:46.028Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:59:46.028Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:59:46.028Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:59:46.028Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:59:46.028Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:59:46.028Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:59:46.028Z] [CONSOLE] 📊 AFTER formatFixer - Fixed state:
[2025-06-07T21:59:46.028Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:46.028Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:46.028Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:46.028Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:46.028Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:46.028Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:46.028Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:46.028Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:46.028Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:46.028Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:46.028Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:46.028Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:46.028Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:46.028Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:46.028Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:46.028Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:46.028Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:46.028Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:46.028Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:46.028Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:46.029Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:46.029Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:46.029Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:46.029Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:46.029Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:46.029Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:46.029Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:46.029Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:46.029Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:46.029Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:46.029Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:46.029Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:46.029Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:46.029Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.029Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.029Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.029Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.029Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.029Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.029Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.029Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.029Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.029Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.029Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.029Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:59:46.029Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:59:46.030Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:59:46.030Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:59:46.030Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:59:46.030Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:59:46.030Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:59:46.030Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:59:46.030Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:59:46.030Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:59:46.030Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, staticData, pinData, meta, versionId, tags, active
[2025-06-07T21:59:46.030Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:59:46.030Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:59:46.030Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:59:46.030Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:59:46.030Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:59:46.030Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:59:46.030Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:59:46.030Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:59:46.030Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:59:46.030Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:59:46.030Z] [CONSOLE] 🔍 [GENERATE V2] Starting n8n validation...
[2025-06-07T21:59:46.030Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:59:46.030Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:59:46.030Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:59:46.030Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:59:46.030Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:59:46.030Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:59:46.030Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:59:46.030Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:59:46.030Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:59:46.030Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:59:46.030Z] [CONSOLE] 🔍 Starting n8n validation and auto-fix loop...
[2025-06-07T21:59:46.031Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:59:46.031Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:59:46.031Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:59:46.031Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:59:46.031Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:59:46.031Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:59:46.031Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:59:46.031Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:59:46.031Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:59:46.031Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:59:46.031Z] [CONSOLE] 🧹 Strict cleaning complete. Removed any non-standard fields.
[2025-06-07T21:59:46.031Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:59:46.031Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:59:46.031Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:59:46.031Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:59:46.031Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:59:46.031Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:59:46.031Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:59:46.031Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:59:46.031Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:59:46.031Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:59:46.031Z] [CONSOLE] 🧹 Created strictly cleaned workflow for n8n validation
[2025-06-07T21:59:46.031Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:59:46.031Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:59:46.031Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:59:46.031Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:59:46.031Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:59:46.031Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:59:46.031Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:59:46.031Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:59:46.031Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:59:46.031Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:59:46.031Z] [CONSOLE] 🔍 Workflow being sent to n8n validation:
[2025-06-07T21:59:46.032Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:59:46.032Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:59:46.032Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:59:46.032Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:59:46.032Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:59:46.032Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:59:46.032Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:59:46.032Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:59:46.032Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:59:46.032Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:59:46.032Z] [CONSOLE] 📋 Top-level fields: name,nodes,connections,settings
[2025-06-07T21:59:46.032Z] [CONSOLE] 📋 Node count: 6
[2025-06-07T21:59:46.032Z] [CONSOLE] 📋 Node count: 6
[2025-06-07T21:59:46.032Z] [CONSOLE] 📋 Node count: 6
[2025-06-07T21:59:46.032Z] [CONSOLE] 📋 Node count: 6
[2025-06-07T21:59:46.032Z] [CONSOLE] 📋 Node count: 6
[2025-06-07T21:59:46.032Z] [CONSOLE] 📋 Node count: 6
[2025-06-07T21:59:46.032Z] [CONSOLE] 📋 Node count: 6
[2025-06-07T21:59:46.032Z] [CONSOLE] 📋 Node count: 6
[2025-06-07T21:59:46.032Z] [CONSOLE] 📋 Node count: 6
[2025-06-07T21:59:46.032Z] [CONSOLE] 📋 Node count: 6
[2025-06-07T21:59:46.032Z] [CONSOLE] 📋 Node count: 6
[2025-06-07T21:59:46.032Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:59:46.032Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:59:46.032Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:59:46.032Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:59:46.032Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:59:46.032Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:59:46.032Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:59:46.032Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:59:46.033Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:59:46.033Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:59:46.033Z] [CONSOLE] Starting n8n validation loop...
[2025-06-07T21:59:46.033Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:59:46.033Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:59:46.033Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:59:46.033Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:59:46.033Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:59:46.033Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:59:46.033Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:59:46.033Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:59:46.033Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:59:46.033Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:59:46.033Z] [CONSOLE] Validation attempt 1/3
[2025-06-07T21:59:46.033Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333586033",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "labelIds": [
          "INBOX"
        ],
        "includeAttachments": false
      }
    },
    {
      "id": "if_urgent_002",
      "name": "Check if Urgent",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "any"
      }
    },
    {
      "id": "code_format_003",
      "name": "Format Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "language": "javaScript",
        "code": "const email = $input.first().json;\n\n// Extract sender email\nconst fromHeader = email.headers?.from || '';\nconst senderMatch = fromHeader.match(/<(.+?)>/);\nconst sender = senderMatch ? senderMatch[1] : fromHeader.split(' ')[0];\n\n// Get subject\nconst subject = email.subject || 'No subject';\n\n// Get body preview (first 100 chars)\nconst bodyText = email.text || email.snippet || '';\nconst bodyPreview = bodyText.substring(0, 100).replace(/\\n/g, ' ').trim();\n\n// Format Slack message\nconst slackMessage = `🚨 Urgent Email from ${sender} - ${subject} - ${bodyPreview}${bodyText.length > 100 ? '...' : ''}`;\n\nreturn {\n  json: {\n    slackMessage: slackMessage,\n    sender: sender,\n    subject: subject,\n    bodyPreview: bodyPreview,\n    originalEmail: email\n  }\n};"
      }
    },
    {
      "id": "slack_send_004",
      "name": "Send to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        850,
        200
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#urgent-requests",
        "text": "{{$json.slackMessage}}"
      }
    },
    {
      "id": "set_error_005",
      "name": "Set Error Message",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        400
      ],
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1",
              "name": "error",
              "value": "Failed to process urgent email",
              "type": "string"
            },
            {
              "id": "2",
              "name": "emailSubject",
              "value": "={{$node[\"Gmail Trigger\"].json[\"subject\"]}}",
              "type": "string"
            }
          ]
        },
        "values": {
          "string": [
            {
              "name": "success",
              "value": "true"
            }
          ]
        }
      }
    },
    {
      "id": "email_admin_006",
      "name": "Email Admin on Error",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        850,
        400
      ],
      "parameters": {
        "fromEmail": "n8n@yourdomain.com",
        "toEmail": "admin@yourdomain.com",
        "subject": "Error Processing Urgent Email",
        "text": "Failed to send urgent email notification to Slack.\n\nOriginal email subject: {{$json.emailSubject}}\nError: {{$json.error}}"
      }
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Check if Urgent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Urgent": {
      "main": [
        [
          {
            "node": "Format Message",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Format Message": {
      "main": [
        [
          {
            "node": "Send to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send to Slack": {
      "main": [
        []
      ]
    },
    "Set Error Message": {
      "main": [
        [
          {
            "node": "Email Admin on Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:59:46.033Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333586033",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "labelIds": [
          "INBOX"
        ],
        "includeAttachments": false
      }
    },
    {
      "id": "if_urgent_002",
      "name": "Check if Urgent",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "any"
      }
    },
    {
      "id": "code_format_003",
      "name": "Format Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "language": "javaScript",
        "code": "const email = $input.first().json;\n\n// Extract sender email\nconst fromHeader = email.headers?.from || '';\nconst senderMatch = fromHeader.match(/<(.+?)>/);\nconst sender = senderMatch ? senderMatch[1] : fromHeader.split(' ')[0];\n\n// Get subject\nconst subject = email.subject || 'No subject';\n\n// Get body preview (first 100 chars)\nconst bodyText = email.text || email.snippet || '';\nconst bodyPreview = bodyText.substring(0, 100).replace(/\\n/g, ' ').trim();\n\n// Format Slack message\nconst slackMessage = `🚨 Urgent Email from ${sender} - ${subject} - ${bodyPreview}${bodyText.length > 100 ? '...' : ''}`;\n\nreturn {\n  json: {\n    slackMessage: slackMessage,\n    sender: sender,\n    subject: subject,\n    bodyPreview: bodyPreview,\n    originalEmail: email\n  }\n};"
      }
    },
    {
      "id": "slack_send_004",
      "name": "Send to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        850,
        200
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#urgent-requests",
        "text": "{{$json.slackMessage}}"
      }
    },
    {
      "id": "set_error_005",
      "name": "Set Error Message",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        400
      ],
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1",
              "name": "error",
              "value": "Failed to process urgent email",
              "type": "string"
            },
            {
              "id": "2",
              "name": "emailSubject",
              "value": "={{$node[\"Gmail Trigger\"].json[\"subject\"]}}",
              "type": "string"
            }
          ]
        },
        "values": {
          "string": [
            {
              "name": "success",
              "value": "true"
            }
          ]
        }
      }
    },
    {
      "id": "email_admin_006",
      "name": "Email Admin on Error",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        850,
        400
      ],
      "parameters": {
        "fromEmail": "n8n@yourdomain.com",
        "toEmail": "admin@yourdomain.com",
        "subject": "Error Processing Urgent Email",
        "text": "Failed to send urgent email notification to Slack.\n\nOriginal email subject: {{$json.emailSubject}}\nError: {{$json.error}}"
      }
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Check if Urgent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Urgent": {
      "main": [
        [
          {
            "node": "Format Message",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Format Message": {
      "main": [
        [
          {
            "node": "Send to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send to Slack": {
      "main": [
        []
      ]
    },
    "Set Error Message": {
      "main": [
        [
          {
            "node": "Email Admin on Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:59:46.033Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333586033",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "labelIds": [
          "INBOX"
        ],
        "includeAttachments": false
      }
    },
    {
      "id": "if_urgent_002",
      "name": "Check if Urgent",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "any"
      }
    },
    {
      "id": "code_format_003",
      "name": "Format Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "language": "javaScript",
        "code": "const email = $input.first().json;\n\n// Extract sender email\nconst fromHeader = email.headers?.from || '';\nconst senderMatch = fromHeader.match(/<(.+?)>/);\nconst sender = senderMatch ? senderMatch[1] : fromHeader.split(' ')[0];\n\n// Get subject\nconst subject = email.subject || 'No subject';\n\n// Get body preview (first 100 chars)\nconst bodyText = email.text || email.snippet || '';\nconst bodyPreview = bodyText.substring(0, 100).replace(/\\n/g, ' ').trim();\n\n// Format Slack message\nconst slackMessage = `🚨 Urgent Email from ${sender} - ${subject} - ${bodyPreview}${bodyText.length > 100 ? '...' : ''}`;\n\nreturn {\n  json: {\n    slackMessage: slackMessage,\n    sender: sender,\n    subject: subject,\n    bodyPreview: bodyPreview,\n    originalEmail: email\n  }\n};"
      }
    },
    {
      "id": "slack_send_004",
      "name": "Send to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        850,
        200
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#urgent-requests",
        "text": "{{$json.slackMessage}}"
      }
    },
    {
      "id": "set_error_005",
      "name": "Set Error Message",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        400
      ],
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1",
              "name": "error",
              "value": "Failed to process urgent email",
              "type": "string"
            },
            {
              "id": "2",
              "name": "emailSubject",
              "value": "={{$node[\"Gmail Trigger\"].json[\"subject\"]}}",
              "type": "string"
            }
          ]
        },
        "values": {
          "string": [
            {
              "name": "success",
              "value": "true"
            }
          ]
        }
      }
    },
    {
      "id": "email_admin_006",
      "name": "Email Admin on Error",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        850,
        400
      ],
      "parameters": {
        "fromEmail": "n8n@yourdomain.com",
        "toEmail": "admin@yourdomain.com",
        "subject": "Error Processing Urgent Email",
        "text": "Failed to send urgent email notification to Slack.\n\nOriginal email subject: {{$json.emailSubject}}\nError: {{$json.error}}"
      }
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Check if Urgent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Urgent": {
      "main": [
        [
          {
            "node": "Format Message",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Format Message": {
      "main": [
        [
          {
            "node": "Send to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send to Slack": {
      "main": [
        []
      ]
    },
    "Set Error Message": {
      "main": [
        [
          {
            "node": "Email Admin on Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:59:46.033Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333586033",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "labelIds": [
          "INBOX"
        ],
        "includeAttachments": false
      }
    },
    {
      "id": "if_urgent_002",
      "name": "Check if Urgent",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "any"
      }
    },
    {
      "id": "code_format_003",
      "name": "Format Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "language": "javaScript",
        "code": "const email = $input.first().json;\n\n// Extract sender email\nconst fromHeader = email.headers?.from || '';\nconst senderMatch = fromHeader.match(/<(.+?)>/);\nconst sender = senderMatch ? senderMatch[1] : fromHeader.split(' ')[0];\n\n// Get subject\nconst subject = email.subject || 'No subject';\n\n// Get body preview (first 100 chars)\nconst bodyText = email.text || email.snippet || '';\nconst bodyPreview = bodyText.substring(0, 100).replace(/\\n/g, ' ').trim();\n\n// Format Slack message\nconst slackMessage = `🚨 Urgent Email from ${sender} - ${subject} - ${bodyPreview}${bodyText.length > 100 ? '...' : ''}`;\n\nreturn {\n  json: {\n    slackMessage: slackMessage,\n    sender: sender,\n    subject: subject,\n    bodyPreview: bodyPreview,\n    originalEmail: email\n  }\n};"
      }
    },
    {
      "id": "slack_send_004",
      "name": "Send to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        850,
        200
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#urgent-requests",
        "text": "{{$json.slackMessage}}"
      }
    },
    {
      "id": "set_error_005",
      "name": "Set Error Message",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        400
      ],
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1",
              "name": "error",
              "value": "Failed to process urgent email",
              "type": "string"
            },
            {
              "id": "2",
              "name": "emailSubject",
              "value": "={{$node[\"Gmail Trigger\"].json[\"subject\"]}}",
              "type": "string"
            }
          ]
        },
        "values": {
          "string": [
            {
              "name": "success",
              "value": "true"
            }
          ]
        }
      }
    },
    {
      "id": "email_admin_006",
      "name": "Email Admin on Error",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        850,
        400
      ],
      "parameters": {
        "fromEmail": "n8n@yourdomain.com",
        "toEmail": "admin@yourdomain.com",
        "subject": "Error Processing Urgent Email",
        "text": "Failed to send urgent email notification to Slack.\n\nOriginal email subject: {{$json.emailSubject}}\nError: {{$json.error}}"
      }
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Check if Urgent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Urgent": {
      "main": [
        [
          {
            "node": "Format Message",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Format Message": {
      "main": [
        [
          {
            "node": "Send to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send to Slack": {
      "main": [
        []
      ]
    },
    "Set Error Message": {
      "main": [
        [
          {
            "node": "Email Admin on Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:59:46.033Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333586033",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "labelIds": [
          "INBOX"
        ],
        "includeAttachments": false
      }
    },
    {
      "id": "if_urgent_002",
      "name": "Check if Urgent",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "any"
      }
    },
    {
      "id": "code_format_003",
      "name": "Format Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "language": "javaScript",
        "code": "const email = $input.first().json;\n\n// Extract sender email\nconst fromHeader = email.headers?.from || '';\nconst senderMatch = fromHeader.match(/<(.+?)>/);\nconst sender = senderMatch ? senderMatch[1] : fromHeader.split(' ')[0];\n\n// Get subject\nconst subject = email.subject || 'No subject';\n\n// Get body preview (first 100 chars)\nconst bodyText = email.text || email.snippet || '';\nconst bodyPreview = bodyText.substring(0, 100).replace(/\\n/g, ' ').trim();\n\n// Format Slack message\nconst slackMessage = `🚨 Urgent Email from ${sender} - ${subject} - ${bodyPreview}${bodyText.length > 100 ? '...' : ''}`;\n\nreturn {\n  json: {\n    slackMessage: slackMessage,\n    sender: sender,\n    subject: subject,\n    bodyPreview: bodyPreview,\n    originalEmail: email\n  }\n};"
      }
    },
    {
      "id": "slack_send_004",
      "name": "Send to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        850,
        200
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#urgent-requests",
        "text": "{{$json.slackMessage}}"
      }
    },
    {
      "id": "set_error_005",
      "name": "Set Error Message",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        400
      ],
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1",
              "name": "error",
              "value": "Failed to process urgent email",
              "type": "string"
            },
            {
              "id": "2",
              "name": "emailSubject",
              "value": "={{$node[\"Gmail Trigger\"].json[\"subject\"]}}",
              "type": "string"
            }
          ]
        },
        "values": {
          "string": [
            {
              "name": "success",
              "value": "true"
            }
          ]
        }
      }
    },
    {
      "id": "email_admin_006",
      "name": "Email Admin on Error",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        850,
        400
      ],
      "parameters": {
        "fromEmail": "n8n@yourdomain.com",
        "toEmail": "admin@yourdomain.com",
        "subject": "Error Processing Urgent Email",
        "text": "Failed to send urgent email notification to Slack.\n\nOriginal email subject: {{$json.emailSubject}}\nError: {{$json.error}}"
      }
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Check if Urgent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Urgent": {
      "main": [
        [
          {
            "node": "Format Message",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Format Message": {
      "main": [
        [
          {
            "node": "Send to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send to Slack": {
      "main": [
        []
      ]
    },
    "Set Error Message": {
      "main": [
        [
          {
            "node": "Email Admin on Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:59:46.033Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333586033",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "labelIds": [
          "INBOX"
        ],
        "includeAttachments": false
      }
    },
    {
      "id": "if_urgent_002",
      "name": "Check if Urgent",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "any"
      }
    },
    {
      "id": "code_format_003",
      "name": "Format Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "language": "javaScript",
        "code": "const email = $input.first().json;\n\n// Extract sender email\nconst fromHeader = email.headers?.from || '';\nconst senderMatch = fromHeader.match(/<(.+?)>/);\nconst sender = senderMatch ? senderMatch[1] : fromHeader.split(' ')[0];\n\n// Get subject\nconst subject = email.subject || 'No subject';\n\n// Get body preview (first 100 chars)\nconst bodyText = email.text || email.snippet || '';\nconst bodyPreview = bodyText.substring(0, 100).replace(/\\n/g, ' ').trim();\n\n// Format Slack message\nconst slackMessage = `🚨 Urgent Email from ${sender} - ${subject} - ${bodyPreview}${bodyText.length > 100 ? '...' : ''}`;\n\nreturn {\n  json: {\n    slackMessage: slackMessage,\n    sender: sender,\n    subject: subject,\n    bodyPreview: bodyPreview,\n    originalEmail: email\n  }\n};"
      }
    },
    {
      "id": "slack_send_004",
      "name": "Send to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        850,
        200
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#urgent-requests",
        "text": "{{$json.slackMessage}}"
      }
    },
    {
      "id": "set_error_005",
      "name": "Set Error Message",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        400
      ],
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1",
              "name": "error",
              "value": "Failed to process urgent email",
              "type": "string"
            },
            {
              "id": "2",
              "name": "emailSubject",
              "value": "={{$node[\"Gmail Trigger\"].json[\"subject\"]}}",
              "type": "string"
            }
          ]
        },
        "values": {
          "string": [
            {
              "name": "success",
              "value": "true"
            }
          ]
        }
      }
    },
    {
      "id": "email_admin_006",
      "name": "Email Admin on Error",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        850,
        400
      ],
      "parameters": {
        "fromEmail": "n8n@yourdomain.com",
        "toEmail": "admin@yourdomain.com",
        "subject": "Error Processing Urgent Email",
        "text": "Failed to send urgent email notification to Slack.\n\nOriginal email subject: {{$json.emailSubject}}\nError: {{$json.error}}"
      }
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Check if Urgent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Urgent": {
      "main": [
        [
          {
            "node": "Format Message",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Format Message": {
      "main": [
        [
          {
            "node": "Send to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send to Slack": {
      "main": [
        []
      ]
    },
    "Set Error Message": {
      "main": [
        [
          {
            "node": "Email Admin on Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:59:46.033Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333586033",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "labelIds": [
          "INBOX"
        ],
        "includeAttachments": false
      }
    },
    {
      "id": "if_urgent_002",
      "name": "Check if Urgent",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "any"
      }
    },
    {
      "id": "code_format_003",
      "name": "Format Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "language": "javaScript",
        "code": "const email = $input.first().json;\n\n// Extract sender email\nconst fromHeader = email.headers?.from || '';\nconst senderMatch = fromHeader.match(/<(.+?)>/);\nconst sender = senderMatch ? senderMatch[1] : fromHeader.split(' ')[0];\n\n// Get subject\nconst subject = email.subject || 'No subject';\n\n// Get body preview (first 100 chars)\nconst bodyText = email.text || email.snippet || '';\nconst bodyPreview = bodyText.substring(0, 100).replace(/\\n/g, ' ').trim();\n\n// Format Slack message\nconst slackMessage = `🚨 Urgent Email from ${sender} - ${subject} - ${bodyPreview}${bodyText.length > 100 ? '...' : ''}`;\n\nreturn {\n  json: {\n    slackMessage: slackMessage,\n    sender: sender,\n    subject: subject,\n    bodyPreview: bodyPreview,\n    originalEmail: email\n  }\n};"
      }
    },
    {
      "id": "slack_send_004",
      "name": "Send to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        850,
        200
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#urgent-requests",
        "text": "{{$json.slackMessage}}"
      }
    },
    {
      "id": "set_error_005",
      "name": "Set Error Message",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        400
      ],
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1",
              "name": "error",
              "value": "Failed to process urgent email",
              "type": "string"
            },
            {
              "id": "2",
              "name": "emailSubject",
              "value": "={{$node[\"Gmail Trigger\"].json[\"subject\"]}}",
              "type": "string"
            }
          ]
        },
        "values": {
          "string": [
            {
              "name": "success",
              "value": "true"
            }
          ]
        }
      }
    },
    {
      "id": "email_admin_006",
      "name": "Email Admin on Error",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        850,
        400
      ],
      "parameters": {
        "fromEmail": "n8n@yourdomain.com",
        "toEmail": "admin@yourdomain.com",
        "subject": "Error Processing Urgent Email",
        "text": "Failed to send urgent email notification to Slack.\n\nOriginal email subject: {{$json.emailSubject}}\nError: {{$json.error}}"
      }
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Check if Urgent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Urgent": {
      "main": [
        [
          {
            "node": "Format Message",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Format Message": {
      "main": [
        [
          {
            "node": "Send to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send to Slack": {
      "main": [
        []
      ]
    },
    "Set Error Message": {
      "main": [
        [
          {
            "node": "Email Admin on Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:59:46.033Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333586033",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "labelIds": [
          "INBOX"
        ],
        "includeAttachments": false
      }
    },
    {
      "id": "if_urgent_002",
      "name": "Check if Urgent",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "any"
      }
    },
    {
      "id": "code_format_003",
      "name": "Format Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "language": "javaScript",
        "code": "const email = $input.first().json;\n\n// Extract sender email\nconst fromHeader = email.headers?.from || '';\nconst senderMatch = fromHeader.match(/<(.+?)>/);\nconst sender = senderMatch ? senderMatch[1] : fromHeader.split(' ')[0];\n\n// Get subject\nconst subject = email.subject || 'No subject';\n\n// Get body preview (first 100 chars)\nconst bodyText = email.text || email.snippet || '';\nconst bodyPreview = bodyText.substring(0, 100).replace(/\\n/g, ' ').trim();\n\n// Format Slack message\nconst slackMessage = `🚨 Urgent Email from ${sender} - ${subject} - ${bodyPreview}${bodyText.length > 100 ? '...' : ''}`;\n\nreturn {\n  json: {\n    slackMessage: slackMessage,\n    sender: sender,\n    subject: subject,\n    bodyPreview: bodyPreview,\n    originalEmail: email\n  }\n};"
      }
    },
    {
      "id": "slack_send_004",
      "name": "Send to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        850,
        200
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#urgent-requests",
        "text": "{{$json.slackMessage}}"
      }
    },
    {
      "id": "set_error_005",
      "name": "Set Error Message",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        400
      ],
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1",
              "name": "error",
              "value": "Failed to process urgent email",
              "type": "string"
            },
            {
              "id": "2",
              "name": "emailSubject",
              "value": "={{$node[\"Gmail Trigger\"].json[\"subject\"]}}",
              "type": "string"
            }
          ]
        },
        "values": {
          "string": [
            {
              "name": "success",
              "value": "true"
            }
          ]
        }
      }
    },
    {
      "id": "email_admin_006",
      "name": "Email Admin on Error",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        850,
        400
      ],
      "parameters": {
        "fromEmail": "n8n@yourdomain.com",
        "toEmail": "admin@yourdomain.com",
        "subject": "Error Processing Urgent Email",
        "text": "Failed to send urgent email notification to Slack.\n\nOriginal email subject: {{$json.emailSubject}}\nError: {{$json.error}}"
      }
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Check if Urgent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Urgent": {
      "main": [
        [
          {
            "node": "Format Message",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Format Message": {
      "main": [
        [
          {
            "node": "Send to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send to Slack": {
      "main": [
        []
      ]
    },
    "Set Error Message": {
      "main": [
        [
          {
            "node": "Email Admin on Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:59:46.033Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333586033",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "labelIds": [
          "INBOX"
        ],
        "includeAttachments": false
      }
    },
    {
      "id": "if_urgent_002",
      "name": "Check if Urgent",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "any"
      }
    },
    {
      "id": "code_format_003",
      "name": "Format Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "language": "javaScript",
        "code": "const email = $input.first().json;\n\n// Extract sender email\nconst fromHeader = email.headers?.from || '';\nconst senderMatch = fromHeader.match(/<(.+?)>/);\nconst sender = senderMatch ? senderMatch[1] : fromHeader.split(' ')[0];\n\n// Get subject\nconst subject = email.subject || 'No subject';\n\n// Get body preview (first 100 chars)\nconst bodyText = email.text || email.snippet || '';\nconst bodyPreview = bodyText.substring(0, 100).replace(/\\n/g, ' ').trim();\n\n// Format Slack message\nconst slackMessage = `🚨 Urgent Email from ${sender} - ${subject} - ${bodyPreview}${bodyText.length > 100 ? '...' : ''}`;\n\nreturn {\n  json: {\n    slackMessage: slackMessage,\n    sender: sender,\n    subject: subject,\n    bodyPreview: bodyPreview,\n    originalEmail: email\n  }\n};"
      }
    },
    {
      "id": "slack_send_004",
      "name": "Send to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        850,
        200
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#urgent-requests",
        "text": "{{$json.slackMessage}}"
      }
    },
    {
      "id": "set_error_005",
      "name": "Set Error Message",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        400
      ],
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1",
              "name": "error",
              "value": "Failed to process urgent email",
              "type": "string"
            },
            {
              "id": "2",
              "name": "emailSubject",
              "value": "={{$node[\"Gmail Trigger\"].json[\"subject\"]}}",
              "type": "string"
            }
          ]
        },
        "values": {
          "string": [
            {
              "name": "success",
              "value": "true"
            }
          ]
        }
      }
    },
    {
      "id": "email_admin_006",
      "name": "Email Admin on Error",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        850,
        400
      ],
      "parameters": {
        "fromEmail": "n8n@yourdomain.com",
        "toEmail": "admin@yourdomain.com",
        "subject": "Error Processing Urgent Email",
        "text": "Failed to send urgent email notification to Slack.\n\nOriginal email subject: {{$json.emailSubject}}\nError: {{$json.error}}"
      }
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Check if Urgent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Urgent": {
      "main": [
        [
          {
            "node": "Format Message",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Format Message": {
      "main": [
        [
          {
            "node": "Send to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send to Slack": {
      "main": [
        []
      ]
    },
    "Set Error Message": {
      "main": [
        [
          {
            "node": "Email Admin on Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:59:46.033Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333586033",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "labelIds": [
          "INBOX"
        ],
        "includeAttachments": false
      }
    },
    {
      "id": "if_urgent_002",
      "name": "Check if Urgent",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "any"
      }
    },
    {
      "id": "code_format_003",
      "name": "Format Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "language": "javaScript",
        "code": "const email = $input.first().json;\n\n// Extract sender email\nconst fromHeader = email.headers?.from || '';\nconst senderMatch = fromHeader.match(/<(.+?)>/);\nconst sender = senderMatch ? senderMatch[1] : fromHeader.split(' ')[0];\n\n// Get subject\nconst subject = email.subject || 'No subject';\n\n// Get body preview (first 100 chars)\nconst bodyText = email.text || email.snippet || '';\nconst bodyPreview = bodyText.substring(0, 100).replace(/\\n/g, ' ').trim();\n\n// Format Slack message\nconst slackMessage = `🚨 Urgent Email from ${sender} - ${subject} - ${bodyPreview}${bodyText.length > 100 ? '...' : ''}`;\n\nreturn {\n  json: {\n    slackMessage: slackMessage,\n    sender: sender,\n    subject: subject,\n    bodyPreview: bodyPreview,\n    originalEmail: email\n  }\n};"
      }
    },
    {
      "id": "slack_send_004",
      "name": "Send to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        850,
        200
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#urgent-requests",
        "text": "{{$json.slackMessage}}"
      }
    },
    {
      "id": "set_error_005",
      "name": "Set Error Message",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        400
      ],
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1",
              "name": "error",
              "value": "Failed to process urgent email",
              "type": "string"
            },
            {
              "id": "2",
              "name": "emailSubject",
              "value": "={{$node[\"Gmail Trigger\"].json[\"subject\"]}}",
              "type": "string"
            }
          ]
        },
        "values": {
          "string": [
            {
              "name": "success",
              "value": "true"
            }
          ]
        }
      }
    },
    {
      "id": "email_admin_006",
      "name": "Email Admin on Error",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        850,
        400
      ],
      "parameters": {
        "fromEmail": "n8n@yourdomain.com",
        "toEmail": "admin@yourdomain.com",
        "subject": "Error Processing Urgent Email",
        "text": "Failed to send urgent email notification to Slack.\n\nOriginal email subject: {{$json.emailSubject}}\nError: {{$json.error}}"
      }
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Check if Urgent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Urgent": {
      "main": [
        [
          {
            "node": "Format Message",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Format Message": {
      "main": [
        [
          {
            "node": "Send to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send to Slack": {
      "main": [
        []
      ]
    },
    "Set Error Message": {
      "main": [
        [
          {
            "node": "Email Admin on Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:59:46.033Z] [CONSOLE] 🔍 Sending to n8n API: {
  "name": "Test_1749333586033",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "labelIds": [
          "INBOX"
        ],
        "includeAttachments": false
      }
    },
    {
      "id": "if_urgent_002",
      "name": "Check if Urgent",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{$json[\"field\"]}}",
              "rightValue": "",
              "operation": "equal"
            }
          ]
        },
        "combineOperation": "any"
      }
    },
    {
      "id": "code_format_003",
      "name": "Format Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        650,
        200
      ],
      "parameters": {
        "language": "javaScript",
        "code": "const email = $input.first().json;\n\n// Extract sender email\nconst fromHeader = email.headers?.from || '';\nconst senderMatch = fromHeader.match(/<(.+?)>/);\nconst sender = senderMatch ? senderMatch[1] : fromHeader.split(' ')[0];\n\n// Get subject\nconst subject = email.subject || 'No subject';\n\n// Get body preview (first 100 chars)\nconst bodyText = email.text || email.snippet || '';\nconst bodyPreview = bodyText.substring(0, 100).replace(/\\n/g, ' ').trim();\n\n// Format Slack message\nconst slackMessage = `🚨 Urgent Email from ${sender} - ${subject} - ${bodyPreview}${bodyText.length > 100 ? '...' : ''}`;\n\nreturn {\n  json: {\n    slackMessage: slackMessage,\n    sender: sender,\n    subject: subject,\n    bodyPreview: bodyPreview,\n    originalEmail: email\n  }\n};"
      }
    },
    {
      "id": "slack_send_004",
      "name": "Send to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [
        850,
        200
      ],
      "parameters": {
        "authentication": "accessToken",
        "operation": "post",
        "channel": "#urgent-requests",
        "text": "{{$json.slackMessage}}"
      }
    },
    {
      "id": "set_error_005",
      "name": "Set Error Message",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        650,
        400
      ],
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1",
              "name": "error",
              "value": "Failed to process urgent email",
              "type": "string"
            },
            {
              "id": "2",
              "name": "emailSubject",
              "value": "={{$node[\"Gmail Trigger\"].json[\"subject\"]}}",
              "type": "string"
            }
          ]
        },
        "values": {
          "string": [
            {
              "name": "success",
              "value": "true"
            }
          ]
        }
      }
    },
    {
      "id": "email_admin_006",
      "name": "Email Admin on Error",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        850,
        400
      ],
      "parameters": {
        "fromEmail": "n8n@yourdomain.com",
        "toEmail": "admin@yourdomain.com",
        "subject": "Error Processing Urgent Email",
        "text": "Failed to send urgent email notification to Slack.\n\nOriginal email subject: {{$json.emailSubject}}\nError: {{$json.error}}"
      }
    }
  ],
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Check if Urgent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Urgent": {
      "main": [
        [
          {
            "node": "Format Message",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Format Message": {
      "main": [
        [
          {
            "node": "Send to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send to Slack": {
      "main": [
        []
      ]
    },
    "Set Error Message": {
      "main": [
        [
          {
            "node": "Email Admin on Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": false,
    "saveManualExecutions": true,
    "executionTimeout": -1,
    "timezone": "America/New_York"
  }
}
[2025-06-07T21:59:46.980Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:59:46.980Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:59:46.980Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:59:46.980Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:59:46.980Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:59:46.981Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:59:46.981Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:59:46.981Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:59:46.981Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:59:46.981Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:59:46.981Z] [CONSOLE] Workflow validated successfully!
[2025-06-07T21:59:46.981Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:59:46.981Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:59:46.981Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:59:46.981Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:59:46.981Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:59:46.982Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:59:46.982Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:59:46.982Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:59:46.982Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:59:46.982Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:59:46.982Z] [CONSOLE] ✅ Workflow validated and fixed after 1 attempts
[2025-06-07T21:59:46.982Z] [CONSOLE] Cleanup completed
[2025-06-07T21:59:46.982Z] [CONSOLE] Cleanup completed
[2025-06-07T21:59:46.982Z] [CONSOLE] Cleanup completed
[2025-06-07T21:59:46.982Z] [CONSOLE] Cleanup completed
[2025-06-07T21:59:46.982Z] [CONSOLE] Cleanup completed
[2025-06-07T21:59:46.982Z] [CONSOLE] Cleanup completed
[2025-06-07T21:59:46.982Z] [CONSOLE] Cleanup completed
[2025-06-07T21:59:46.982Z] [CONSOLE] Cleanup completed
[2025-06-07T21:59:46.982Z] [CONSOLE] Cleanup completed
[2025-06-07T21:59:46.983Z] [CONSOLE] Cleanup completed
[2025-06-07T21:59:46.983Z] [CONSOLE] Cleanup completed
[2025-06-07T21:59:46.983Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:59:46.983Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:59:46.983Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:59:46.983Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:59:46.983Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:59:46.983Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:59:46.983Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:59:46.983Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:59:46.983Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:59:46.983Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:59:46.983Z] [CONSOLE] 🔍 Sample expression check BEFORE cleaning:
[2025-06-07T21:59:46.983Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:59:46.983Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:59:46.984Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:59:46.984Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:59:46.984Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:59:46.984Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:59:46.984Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:59:46.984Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:59:46.984Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:59:46.984Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:59:46.984Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:59:46.984Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:59:46.984Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:59:46.984Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:59:46.984Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:59:46.984Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:59:46.984Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:59:46.984Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:59:46.984Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:59:46.984Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:59:46.984Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:59:46.984Z] [CONSOLE] 🧹 [GENERATE V2] Cleaning workflow for export...
[2025-06-07T21:59:46.985Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:59:46.985Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:59:46.985Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:59:46.985Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:59:46.985Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:59:46.985Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:59:46.986Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:59:46.988Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:59:46.988Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:59:46.988Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:59:46.988Z] [CONSOLE] 🧹 Starting cleanWorkflowForExport for n8n workflow
[2025-06-07T21:59:46.989Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:59:46.989Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:59:46.989Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:59:46.989Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:59:46.989Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:59:46.989Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:59:46.989Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:59:46.989Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:59:46.989Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:59:46.990Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:59:46.990Z] [CONSOLE] 🔍 cleanWorkflowForExport - nodes check:
[2025-06-07T21:59:46.990Z] [CONSOLE]   * Gmail node Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.990Z] [CONSOLE]   * Gmail node Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.990Z] [CONSOLE]   * Gmail node Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.990Z] [CONSOLE]   * Gmail node Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.990Z] [CONSOLE]   * Gmail node Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.990Z] [CONSOLE]   * Gmail node Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.990Z] [CONSOLE]   * Gmail node Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.990Z] [CONSOLE]   * Gmail node Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.990Z] [CONSOLE]   * Gmail node Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.990Z] [CONSOLE]   * Gmail node Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.990Z] [CONSOLE]   * Gmail node Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:46.990Z] [CONSOLE]   * Slack node Send to Slack: no otherOptions field found (good)
[2025-06-07T21:59:46.990Z] [CONSOLE]   * Slack node Send to Slack: no otherOptions field found (good)
[2025-06-07T21:59:46.990Z] [CONSOLE]   * Slack node Send to Slack: no otherOptions field found (good)
[2025-06-07T21:59:46.991Z] [CONSOLE]   * Slack node Send to Slack: no otherOptions field found (good)
[2025-06-07T21:59:46.991Z] [CONSOLE]   * Slack node Send to Slack: no otherOptions field found (good)
[2025-06-07T21:59:46.991Z] [CONSOLE]   * Slack node Send to Slack: no otherOptions field found (good)
[2025-06-07T21:59:46.991Z] [CONSOLE]   * Slack node Send to Slack: no otherOptions field found (good)
[2025-06-07T21:59:46.991Z] [CONSOLE]   * Slack node Send to Slack: no otherOptions field found (good)
[2025-06-07T21:59:46.991Z] [CONSOLE]   * Slack node Send to Slack: no otherOptions field found (good)
[2025-06-07T21:59:46.991Z] [CONSOLE]   * Slack node Send to Slack: no otherOptions field found (good)
[2025-06-07T21:59:46.991Z] [CONSOLE]   * Slack node Send to Slack: no otherOptions field found (good)
[2025-06-07T21:59:46.991Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:59:46.992Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:59:46.992Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:59:46.992Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:59:46.992Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:59:46.992Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:59:46.992Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:59:46.992Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:59:46.992Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:59:46.992Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:59:46.992Z] [CONSOLE] 🔍 After cleanWorkflowForExport processing:
[2025-06-07T21:59:46.992Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:59:46.993Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:59:46.993Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:59:46.993Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:59:46.993Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:59:46.993Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:59:46.993Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:59:46.993Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:59:46.993Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:59:46.993Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:59:46.993Z] [CONSOLE]   - Has versionId: true
[2025-06-07T21:59:46.993Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:59:46.993Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:59:46.993Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:59:46.993Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:59:46.993Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:59:46.993Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:59:46.994Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:59:46.994Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:59:46.994Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:59:46.994Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:59:46.994Z] [CONSOLE]   - Has pinData: true
[2025-06-07T21:59:46.994Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:59:46.994Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:59:46.994Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:59:46.995Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:59:46.997Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:59:46.997Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:59:46.997Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:59:46.997Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:59:46.997Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:59:46.997Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:59:46.997Z] [CONSOLE]   - Has staticData: true
[2025-06-07T21:59:46.997Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:59:46.997Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:59:46.997Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:59:46.997Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:59:46.997Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:59:46.997Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:59:46.997Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:59:46.998Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:59:46.998Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:59:46.998Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:59:46.998Z] [CONSOLE]   - Has tags: true
[2025-06-07T21:59:46.998Z] [CONSOLE]   - Has active: true
[2025-06-07T21:59:46.998Z] [CONSOLE]   - Has active: true
[2025-06-07T21:59:46.998Z] [CONSOLE]   - Has active: true
[2025-06-07T21:59:46.998Z] [CONSOLE]   - Has active: true
[2025-06-07T21:59:46.998Z] [CONSOLE]   - Has active: true
[2025-06-07T21:59:46.998Z] [CONSOLE]   - Has active: true
[2025-06-07T21:59:46.998Z] [CONSOLE]   - Has active: true
[2025-06-07T21:59:46.998Z] [CONSOLE]   - Has active: true
[2025-06-07T21:59:46.998Z] [CONSOLE]   - Has active: true
[2025-06-07T21:59:46.998Z] [CONSOLE]   - Has active: true
[2025-06-07T21:59:46.998Z] [CONSOLE]   - Has active: true
[2025-06-07T21:59:46.998Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:59:46.998Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:59:46.998Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:59:46.998Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:59:46.999Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:59:46.999Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:59:46.999Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:59:46.999Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:59:46.999Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:59:46.999Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:59:46.999Z] [CONSOLE] 🔍 After cleaning - expression check:
[2025-06-07T21:59:46.999Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:59:46.999Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:59:46.999Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:59:46.999Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:59:46.999Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:59:46.999Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:59:46.999Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:59:46.999Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:59:46.999Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:59:46.999Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:59:46.999Z] [CONSOLE] IF node leftValue: ={{$json["field"]}}
[2025-06-07T21:59:46.999Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:59:46.999Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:59:46.999Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:59:47.000Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:59:47.000Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:59:47.000Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:59:47.000Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:59:47.000Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:59:47.000Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:59:47.000Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:59:47.000Z] [CONSOLE] 📊 AFTER cleaning - Sanitized state:
[2025-06-07T21:59:47.000Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:47.000Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:47.000Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:47.000Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:47.000Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:47.000Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:47.000Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:47.000Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:47.000Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:47.000Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:47.000Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:47.000Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:47.001Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:47.001Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:47.001Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:47.001Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:47.001Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:47.001Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:47.001Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:47.001Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:47.001Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:47.001Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:47.001Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:47.001Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:47.001Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:47.001Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:47.001Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:47.001Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:47.001Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:47.001Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:47.001Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:47.001Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:47.001Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:47.001Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:47.001Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:47.002Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:47.002Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:47.002Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:47.002Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:47.002Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:47.002Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:47.002Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:47.002Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:47.002Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:47.002Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:59:47.002Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:59:47.002Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:59:47.002Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:59:47.002Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:59:47.003Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:59:47.003Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:59:47.003Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:59:47.003Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:59:47.003Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:59:47.003Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:59:47.004Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:59:47.004Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:59:47.004Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:59:47.004Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:59:47.004Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:59:47.004Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:59:47.004Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:59:47.004Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:59:47.004Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:59:47.004Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:59:47.004Z] [CONSOLE] 📤 [GENERATE V2] Preparing response...
[2025-06-07T21:59:47.004Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:59:47.004Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:59:47.005Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:59:47.005Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:59:47.005Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:59:47.005Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:59:47.005Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:59:47.005Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:59:47.005Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:59:47.005Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:59:47.005Z] [CONSOLE] 🔧 Creating final importReadyWorkflow for client
[2025-06-07T21:59:47.005Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:59:47.005Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:59:47.005Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:59:47.005Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:59:47.005Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:59:47.005Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:59:47.005Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:59:47.005Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:59:47.005Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:59:47.005Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:59:47.005Z] [CONSOLE] 🔧 Final fixup: Checking for issues in nodes
[2025-06-07T21:59:47.006Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:59:47.006Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:59:47.006Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:59:47.006Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:59:47.006Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:59:47.006Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:59:47.006Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:59:47.006Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:59:47.006Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:59:47.006Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:59:47.006Z] [CONSOLE] 📊 FINAL WORKFLOW - Import-ready state:
[2025-06-07T21:59:47.006Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:47.006Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:47.006Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:47.006Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:47.006Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:47.006Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:47.006Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:47.006Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:47.006Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:47.006Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:47.007Z] [CONSOLE]   - Slack nodes check:
[2025-06-07T21:59:47.007Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:47.007Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:47.007Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:47.007Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:47.007Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:47.007Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:47.007Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:47.007Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:47.007Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:47.007Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:47.007Z] [CONSOLE]     * Send to Slack: has otherOptions = false
[2025-06-07T21:59:47.007Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:47.007Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:47.007Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:47.007Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:47.007Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:47.007Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:47.007Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:47.007Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:47.007Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:47.007Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:47.007Z] [CONSOLE]   - Gmail nodes check:
[2025-06-07T21:59:47.007Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:47.007Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:47.007Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:47.007Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:47.008Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:47.008Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:47.008Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:47.008Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:47.008Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:47.008Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:47.008Z] [CONSOLE]     * Gmail Trigger: credentials = {"gmailOAuth2":{"id":"1","name":"Gmail account"}}
[2025-06-07T21:59:47.008Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:59:47.008Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:59:47.008Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:59:47.008Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:59:47.008Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:59:47.008Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:59:47.008Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:59:47.008Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:59:47.008Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:59:47.008Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:59:47.008Z] [CONSOLE]   - Top-level workflow fields: name, nodes, connections, settings, versionId, pinData, staticData, tags, active, meta
[2025-06-07T21:59:47.008Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Urgent Gmail to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1...
[2025-06-07T21:59:47.008Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Urgent Gmail to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1...
[2025-06-07T21:59:47.008Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Urgent Gmail to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1...
[2025-06-07T21:59:47.008Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Urgent Gmail to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1...
[2025-06-07T21:59:47.009Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Urgent Gmail to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1...
[2025-06-07T21:59:47.009Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Urgent Gmail to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1...
[2025-06-07T21:59:47.009Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Urgent Gmail to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1...
[2025-06-07T21:59:47.009Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Urgent Gmail to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1...
[2025-06-07T21:59:47.009Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Urgent Gmail to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1...
[2025-06-07T21:59:47.009Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Urgent Gmail to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1...
[2025-06-07T21:59:47.009Z] [CONSOLE] 🔄 FINAL WORKFLOW (first 200 chars): {
  "name": "Urgent Gmail to Slack Notification",
  "nodes": [
    {
      "id": "gmail_trigger_001",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1...
[2025-06-07T21:59:47.267Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:59:47.267Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:59:47.267Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:59:47.268Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:59:47.268Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:59:47.268Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:59:47.268Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:59:47.268Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:59:47.268Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:59:47.268Z] [CONSOLE] ✅ [GENERATE V2] Sending response
[2025-06-07T21:59:47.268Z] [CONSOLE] ✅ [GENERATE V2] Sending response
